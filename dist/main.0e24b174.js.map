{"version":3,"sources":["node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/adapters/xhr.js","../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1a6fefbc9287c68fbde5","webpack:///src/config.js","webpack:///src/core/core.js","webpack:///src/visual/playPauseElements.js","webpack:///src/utilities/audioNavigation.js","webpack:///src/utilities/debug.js","webpack:///src/utilities/checks.js","webpack:///src/utilities/configState.js","webpack:///src/utilities/callbacks.js","webpack:///src/visual/metaDataElements.js","webpack:///src/visual/repeatElements.js","webpack:///src/visual/muteElements.js","webpack:///src/visual/volumeSliderElements.js","webpack:///src/utilities/repeater.js","webpack:///src/utilities/shuffler.js","webpack:///src/visual/songSliderElements.js","webpack:///src/visual/timeElements.js","webpack:///src/fx/visualizations.js","webpack:///src/soundcloud/soundcloud.js","webpack:///src/visual/playbackSpeedElements.js","webpack:///src/visual/shuffleElements.js","webpack:///src/visual/songPlayedProgressElements.js","webpack:///src/init/init.js","webpack:///src/fx/waveform.js","webpack:///src/utilities/time.js","webpack:///src/visual/bufferedProgressElements.js","webpack:///src/events/ended.js","webpack:///src/events/events.js","webpack:///src/events/keydown.js","webpack:///src/events/mute.js","webpack:///src/events/next.js","webpack:///src/events/pause.js","webpack:///src/events/play.js","webpack:///src/events/playPause.js","webpack:///src/events/playbackSpeed.js","webpack:///src/events/prev.js","webpack:///src/events/progress.js","webpack:///src/events/repeat.js","webpack:///src/events/repeatSong.js","webpack:///src/events/shuffle.js","webpack:///src/events/skipTo.js","webpack:///src/events/songSlider.js","webpack:///src/events/stop.js","webpack:///src/events/timeUpdate.js","webpack:///src/events/volumeDown.js","webpack:///src/events/volumeSlider.js","webpack:///src/events/volumeUp.js","webpack:///src/fx/fx.js","webpack:///src/index.js","webpack:///src/init/playlists.js","webpack:///src/visual/containerElements.js","webpack:///src/visual/time/currentHourElements.js","webpack:///src/visual/time/currentMinuteElements.js","webpack:///src/visual/time/currentSecondElements.js","webpack:///src/visual/time/currentTimeElements.js","webpack:///src/visual/time/durationCountDownTimeElements.js","webpack:///src/visual/time/durationHourElements.js","webpack:///src/visual/time/durationMinuteElements.js","webpack:///src/visual/time/durationSecondElements.js","webpack:///src/visual/time/durationTimeElements.js","webpack:///package.json","src/performance-now.coffee","node_modules/raf/index.js","node_modules/lerp/index.js","node_modules/siriwave/dist/siriwave.m.js","ts/main.ts","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","audio","Audio","active_metadata","active_album","active_index","active_playlist","playback_speed","callbacks","songs","playlists","start_song","starting_playlist","starting_playlist_song","repeat","repeat_song","shuffle_list","shuffle_on","default_album_art","default_playlist_art","debug","volume","pre_mute_volume","volume_increment","volume_decrement","soundcloud_client","soundcloud_use_art","soundcloud_song_count","soundcloud_songs_ready","is_touch_moving","buffered","bindings","continue_next","delay","player_state","web_audio_api_available","context","source","analyser","visualizations","available","active","backup","waveforms","sample_rate","built","Core","play","Visualizations","stop","config","live","reconnectStream","test","navigator","userAgent","paused","playPromise","undefined","then","catch","playbackRate","pause","disconnectStream","currentTime","Callbacks","setVolume","volumeLevel","muted","setSongLocation","songPercentage","duration","skipToLocation","seconds","addEventListener","Debug","writeMessage","src","load","url","setPlaybackSpeed","playbackSpeed","PlayPauseElements","sync","syncGlobal","syncPlaylist","syncSong","syncSongInPlaylist","state","playPauseElements","document","querySelectorAll","playlist","getAttribute","song","setElementPlay","setElementPause","playlistPlayPauseElements","songPlayPauseElements","activePlaylistIndex","songInPlaylistPlayPauseElements","syncToPause","element","classList","add","remove","AudioNavigation","setNext","songEnded","nextIndex","nextSong","endOfList","index","parseInt","changeSong","setNextPlaylist","shuffle","setActivePlaylist","changeSongPlaylist","setPrevious","previousIndex","previousSong","setPreviousPlaylist","prepareSongChange","album","afterSongChange","SongSliderElements","resetElements","SongPlayedProgressElements","TimeElements","resetCurrentTimes","Checks","newAlbum","MetaDataElements","displayMetaData","ContainerElements","setActive","resetDurationTimes","message","console","log","newSong","songIndex","newPlaylist","isURL","pattern","isInt","int","isNaN","Number","ConfigState","resetConfig","setPlayerState","initialize","callbackName","callbackFunction","error","imageMetaDataKeys","songInfoElements","info","val","indexOf","setAttribute","innerHTML","displayPlaylistMetaData","playlistInfoElements","setFirstSongInPlaylist","elementPlaylist","syncMetaData","RepeatElements","syncRepeat","repeatClasses","getElementsByClassName","syncRepeatPlaylist","repeatButtons","syncRepeatSong","repeatSongClasses","MuteElements","setMuted","muteClasses","VolumeSliderElements","volumeSliders","value","Repeater","setRepeat","setRepeatPlaylist","setRepeatSong","Shuffler","setShuffle","shuffleSongs","toggleShuffle","setShufflePlaylist","shufflePlaylistSongs","toggleShufflePlaylist","shuffleTemp","randNum","Math","floor","random","shuffleSwap","shuffleList","original","temp","location","syncMain","mainSongSliders","playlistSongSliders","playlistAttribute","songAttribute","songSliders","songInPlaylistSliders","CurrentTimeElements","resetTimes","CurrentHourElements","CurrentMinuteElements","CurrentSecondElements","syncCurrentTimes","hours","minutes","DurationCountDownTimeElements","DurationHourElements","DurationMinuteElements","DurationSecondElements","DurationTimeElements","syncDurationTimes","songDuration","visualizationElements","Object","keys","runGlobalVisualization","runPlaylistVisualization","runSongVisualization","runSongInPlaylistVisualization","displayBackups","globalVisualizationIndex","visualization","activeSongVisualizationIndex","addToActiveVisualizations","firstVisualization","activePlaylistVisualizationIndex","key","setPreferences","startVisualization","stopVisualization","register","preferences","newVisualization","getID","x","displayGlobalBackup","displayPlaylistBackup","displaySongBackup","displaySongInPlaylistBackup","style","backgroundImage","cover_art_url","SoundCloud","tempUserConfig","loadSoundCloud","userConfig","head","getElementsByTagName","script","createElement","type","onreadystatechange","initSoundcloud","onload","appendChild","SC","client_id","getStreamableURLs","soundcloud_regex","match","resolveStreamable","resolveIndividualStreamableURL","addToShuffleList","get","sound","streamable","stream_url","artwork_url","soundcloud_data","AmplitudeHelpers","writeDebugMessage","artist","AmplitudeInitializer","setConfig","isSoundCloudURL","PlaybackSpeedElements","playbackSpeedClasses","ShuffleElements","shuffleButtons","songPlayedPercentage","percentage","songPlayedProgressBars","max","Initializer","ready","Events","setArt","Fx","webAudioAPIAvailable","determineUsingAnyFX","configureWebAudioAPI","documentElement","resume","WaveForm","init","object","params","initializeDefaultLiveSettings","initializeDefaultSongIndexes","rebindDisplay","countPlaylists","PlaylistsInitializer","preload","initializeElements","size","hasOwnProperty","buffer","sampleRate","peaks","svg","createElementNS","g","path","build","abs","split","reduce","a","b","charCodeAt","req","XMLHttpRequest","open","responseType","readyState","status","decodeAudioData","response","bufferedAudio","getPeaks","send","displayWaveForms","totalPeaks","d","peakNumber","shift","sampleSize","sampleStep","numberOfChannels","mergedPeaks","channelNumber","channelData","getChannelData","start","end","min","sampleIndex","waveformElements","displayGlobalWaveform","displayPlaylistWaveform","displaySongWaveform","displaySongInPlaylistWaveform","waveformPath","querySelector","determineIfUsingWaveforms","Time","computeCurrentTimes","currentSeconds","currentMinutes","currentHours","computeSongDuration","songDurationSeconds","songDurationMinutes","songDurationHours","toString","computeSongCompletionPercentage","setCurrentTime","time","isFinite","BufferedProgressElements","songBufferedProgressBars","parseFloat","songBufferedProgressBarsPlaylist","songBufferedProgressBarsSongs","songBufferedProgressBarsSongsInPlaylist","reset","Ended","handle","AmplitudeCore","bindTimeUpdate","bindKeyDownEventHandlers","bindSongEnded","bindProgress","bindPlay","bindPause","bindPlayPause","bindStop","bindMute","bindVolumeUp","bindVolumeDown","bindSongSlider","bindVolumeSlider","bindNext","bindPrev","bindShuffle","bindRepeat","bindRepeatSong","bindPlaybackSpeed","bindSkipTo","bindCanPlayThrough","removeEventListener","TimeUpdate","KeyDown","Progress","play_classes","Play","pause_classes","Pause","play_pause_classes","PlayPause","stop_classes","Stop","mute_classes","Mute","volume_up_classes","VolumeUp","volume_down_classes","VolumeDown","ua","window","msie","song_sliders","SongSlider","volume_sliders","VolumeSlider","next_classes","Next","prev_classes","Prev","shuffle_classes","Shuffle","repeat_classes","Repeat","repeat_song_classes","RepeatSong","playback_speed_classes","PlaybackSpeed","skipToClasses","SkipTo","event","runKeyEvent","which","runPlayPauseKeyDownEvent","runNextKeyDownEvent","runPrevKeyDownEvent","runStopKeyDownEvent","runShuffleKeyDownEvent","runRepeatKeyDownEvent","handleGlobalNext","handlePlaylistNext","songIndexAttribute","handleGlobalPause","handlePlaylistPause","handleSongPause","handleSongInPlaylistPause","handleGlobalPlay","handlePlaylistPlay","handleSongPlay","handleSongInPlaylistPlay","handleGlobalPlayPause","handlePlaylistPlayPause","handleSongPlayPause","handleSongInPlaylistPlayPause","handleGlobalPrev","handlePlaylistPrev","bufferedEnd","handleGlobalRepeat","handlePlaylistRepeat","handleGlobalShuffle","handlePlaylistShuffle","handleSkipToSong","handleSkipToPlaylist","locationPercentage","computedTime","handleGlobalSongSlider","handlePlaylistSongSlider","handleSongSongSlider","handleSongInPlaylistSongSlider","computeBufferedTime","updateTimeInformation","runTimeCallbacks","songCompletionPercentage","time_callbacks","browserContext","AudioContext","webkitAudioContext","mozAudioContext","oAudioContext","msAudioContext","createAnalyser","crossOrigin","createMediaElementSource","connect","destination","Amplitude","getConfig","bindNewElements","getActivePlaylist","getPlaybackSpeed","speed","getRepeat","getRepeatPlaylist","playlistKey","getShuffle","getShufflePlaylist","repeatState","getDefaultAlbumArt","getDefaultPlaylistArt","setDefaultAlbumArt","setDefaultPlaylistArt","default_plalist_art","getSongPlayedPercentage","getSongPlayedSeconds","getSongDuration","setSongPlayedPercentage","setDebug","getActiveSongMetadata","getActivePlaylistMetadata","getSongAtIndex","getSongAtPlaylistIndex","addSong","addSongToPlaylist","addPlaylist","data","ignoredKeys","dataKey","removeSong","splice","removeSongFromPlaylist","playNow","playSongAtIndex","playPlaylistSongAtIndex","getAudio","getAnalyser","next","nextData","prev","prevData","getSongs","getSongsInPlaylist","getSongsState","getSongsStatePlaylist","getActiveIndex","getVersion","getBuffered","skipTo","setSongMetaData","metaData","setPlaylistMetaData","setDelay","getDelay","getPlayerState","registerVisualization","setPlaylistVisualization","visualizationKey","setSongVisualization","setSongInPlaylistVisualization","setGlobalVisualization","getVolume","copySongsToPlaylists","grabSoundCloudData","initializePlaylistActiveIndexes","initializePlaylistShuffleStatuses","initializePlaylistsRepeatStatuses","initializePlaylistShuffleLists","initializeFirstSongInPlaylistMetaData","songContainers","activeIndex","hasAttribute","currentHourSelectors","currentHourPlaylistSelectors","currentHourSongSelectors","currentHourPlaylistSongSelectors","hourSelectors","currentMinuteSelectors","currentMinutePlaylistSelectors","currentMinuteSongSelectors","currentMinutePlaylistSongSelectors","minuteSelectors","currentSecondSelectors","currentSecondPlaylistSelectors","currentSecondSongSelectors","currentSecondPlaylistSongSelectors","secondSelectors","currentTimeSelectors","timeText","timeSelectors","countDownTime","timeRemaining","computeTimeRemaining","durationTimeRemainingSelectors","totalCurrentSeconds","totalDurationSeconds","timeRemainingTotalSeconds","remainingHours","remainingMinutes","remainingSeconds","durationHourSelectors","durationMinuteSelectors","durationSecondSelectors","durationTime","durationText","computeDurationText","durationTimeSelectors","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","Curve","opt","ctrl","definition","ATT_FACTOR","GRAPH_X","AMPLITUDE_FACTOR","globalAttFn","pow","_xpos","width","_ypos","heightMax","amplitude","attenuation","sin","frequency","phase","draw","ctx","moveTo","beginPath","color","replace","strokeStyle","opacity","lineWidth","pixelDepth","lineTo","stroke","getDefinition","iOS9Curve","SPEED_FACTOR","DEAD_PX","DESPAWN_FACTOR","NOOFCURVES_RANGES","AMPLITUDE_RANGES","OFFSET_RANGES","WIDTH_RANGES","SPEED_RANGES","DESPAWN_TIMEOUT_RANGES","respawn","getRandomRange","respawnSingle","ci","phases","amplitudes","despawnTimeouts","offsets","speeds","finalAmplitudes","widths","verses","spawnAt","Date","now","noOfCurves","_grad","yRelativePos","y","t","k","drawSupportLine","coo","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","globalAlpha","globalCompositeOperation","supportLine","PI","maxY","Infinity","_arr","_i","sign","closePath","fill","prevMaxY","waveColors","assign","SiriWave","container","body","ratio","devicePixelRatio","cover","getComputedStyle","height","autostart","lerpSpeed","hex2rgb","interpolation","canvas","getContext","curves","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","done","def","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_def","hex","shorthandRegex","m","r","result","exec","lerp","propertyStr","_clear","_draw","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","curve","startDrawCycle","bind","set","v","setSpeed","setAmplitude","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","getParents","modules","parents","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpLA;AACA,IAAIA,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,SAASC,mBAAT,GAAgC;AAC5B,QAAM,IAAID,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,aAAY;AACT,MAAI;AACA,QAAI,OAAOE,UAAP,KAAsB,UAA1B,EAAsC;AAClCL,MAAAA,gBAAgB,GAAGK,UAAnB;AACH,KAFD,MAEO;AACHL,MAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,GAND,CAME,OAAOI,CAAP,EAAU;AACRN,IAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,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B;;AAEA1C,OAAO,CAACoD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AAAE,SAAO,EAAP;AAAW,CAAjD;;AAEArD,OAAO,CAACsD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AAC9B,QAAM,IAAI/C,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIAN,OAAO,CAACuD,GAAR,GAAc,YAAY;AAAE,SAAO,GAAP;AAAY,CAAxC;;AACAvD,OAAO,CAACwD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,QAAM,IAAInD,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;;AAGAN,OAAO,CAAC0D,KAAR,GAAgB,YAAW;AAAE,SAAO,CAAP;AAAW,CAAxC;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;ACdA;;AAEAzD,OAAOC,OAAP,GAAiB;AACfsC,WAASA,gBADM;;AAGfmB,SAAO,IAAIC,KAAJ,EAHQ;;AAKfC,mBAAiB,EALF;;AAOfC,gBAAc,EAPC;;AASfC,gBAAc,CATC;;AAWfC,mBAAiB,IAXF;;AAafC,kBAAgB,GAbD;;AAefC,aAAW,EAfI;;AAiBfC,SAAO,EAjBQ;;AAmBfC,aAAW,EAnBI;;AAqBfC,cAAY,EArBG;;AAuBfC,qBAAmB,EAvBJ;;AAyBfC,0BAAwB,EAzBT;;AA2BfC,UAAQ,KA3BO;;AA6BfC,eAAa,KA7BE;;AA+BfC,gBAAc,EA/BC;;AAiCfC,cAAY,KAjCG;;AAmCfC,qBAAmB,EAnCJ;;AAqCfC,wBAAsB,EArCP;;AAuCfC,SAAO,KAvCQ;;AAyCfC,UAAQ,GAzCO;;AA2CfC,mBAAiB,GA3CF;;AA6CfC,oBAAkB,CA7CH;;AA+CfC,oBAAkB,CA/CH;;AAiDfC,qBAAmB,EAjDJ;;AAmDfC,sBAAoB,KAnDL;;AAqDfC,yBAAuB,CArDR;;AAuDfC,0BAAwB,CAvDT;;AAyDfC,mBAAiB,KAzDF;;AA2DfC,YAAU,CA3DK;;AA6DfC,YAAU,EA7DK;;AA+DfC,iBAAe,IA/DA;;AAiEfC,SAAO,CAjEQ;;AAmEfC,gBAAc,SAnEC;;AAqEfC,2BAAyB,KArEV;;AAuEfC,WAAS,IAvEM;;AAyEfC,UAAQ,IAzEO;;AA2EfC,YAAU,IA3EK;;AA6EfC,kBAAgB;AACdC,eAAW,EADG;;AAGdC,YAAQ,EAHM;;AAKdC,YAAQ;AALM,GA7ED;;AAqFfC,aAAW;AACTC,iBAAa,GADJ;;AAGTC,WAAO;AAHE;AArFI,CAAjB,C,CApDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;AAyDA,IAAIC,OAAQ,YAAW;AACrB;;;;;;;;AAQA,WAASC,IAAT,GAAgB;AACdC,6BAAeC,IAAf;AACAD,6BAAehF,GAAf;;AAEA;;;AAGA,QAAIkF,iBAAO/C,eAAP,CAAuBgD,IAA3B,EAAiC;AAC/BC;AACD;;AAED;;;;;;;AAOA,QACE,iEAAiEC,IAAjE,CACEC,UAAUC,SADZ,KAGA,CAACL,iBAAOM,MAJV,EAKE;AACAJ;AACD;;AAED;;;;AAIA,QAAIK,cAAcP,iBAAOjD,KAAP,CAAa8C,IAAb,EAAlB;;AAEA,QAAIU,gBAAgBC,SAApB,EAA+B;AAC7BD,kBAAYE,IAAZ,CAAkB,aAAK,CAEtB,CAFD,EAGCC,KAHD,CAGQ,iBAAS,CAEhB,CALD;AAMD;AACDV,qBAAOjD,KAAP,CAAa8C,IAAb;AACAG,qBAAOjD,KAAP,CAAa4D,YAAb,GAA4BX,iBAAO3C,cAAnC;AACD;;AAED;;;;;;;AAOA,WAASuD,KAAT,GAAiB;AACfd,6BAAeC,IAAf;;AAEA;;;AAGAC,qBAAOjD,KAAP,CAAa6D,KAAb;;AAEA;;;AAGAZ,qBAAOM,MAAP,GAAgB,IAAhB;;AAEA;;;;AAIA,QAAIN,iBAAO/C,eAAP,CAAuBgD,IAA3B,EAAiC;AAC/BY;AACD;AACF;;AAED;;;;;;;;;AASA,WAASd,IAAT,GAAgB;AACdD,6BAAeC,IAAf;;AAEA;;;AAGA,QAAIC,iBAAOjD,KAAP,CAAa+D,WAAb,IAA4B,CAAhC,EAAmC;AACjCd,uBAAOjD,KAAP,CAAa+D,WAAb,GAA2B,CAA3B;AACD;;AAED;;;AAGAd,qBAAOjD,KAAP,CAAa6D,KAAb;;AAEA;;;AAGA,QAAIZ,iBAAO/C,eAAP,CAAuBgD,IAA3B,EAAiC;AAC/BY;AACD;;AAED;;;AAGAE,wBAAUjG,GAAV,CAAc,MAAd;AACD;;AAED;;;;;;;;;AASA,WAASkG,SAAT,CAAmBC,WAAnB,EAAgC;AAC9B;;;AAGA,QAAIA,eAAe,CAAnB,EAAsB;AACpBjB,uBAAOjD,KAAP,CAAamE,KAAb,GAAqB,IAArB;AACD,KAFD,MAEO;AACLlB,uBAAOjD,KAAP,CAAamE,KAAb,GAAqB,KAArB;AACD;;AAED;;;AAGAlB,qBAAO7B,MAAP,GAAgB8C,WAAhB;;AAEA;;;AAGAjB,qBAAOjD,KAAP,CAAaoB,MAAb,GAAsB8C,cAAc,GAApC;AACD;;AAED;;;;;;;;;;AAUA,WAASE,eAAT,CAAyBC,cAAzB,EAAyC;AACvC;;;;AAIA,QAAI,CAACpB,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChCD,uBAAOjD,KAAP,CAAa+D,WAAb,GAA2Bd,iBAAOjD,KAAP,CAAasE,QAAb,IAAyBD,iBAAiB,GAA1C,CAA3B;AACD;AACF;;AAED;;;;;;;;AAQA,WAASE,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B;;;;;AAKAvB,qBAAOjD,KAAP,CAAayE,gBAAb,CACE,gBADF,EAEE,YAAW;AACT;;;;;AAKA,UAAIxB,iBAAOjD,KAAP,CAAasE,QAAb,IAAyBE,OAAzB,IAAoCA,UAAU,CAAlD,EAAqD;AACnDvB,yBAAOjD,KAAP,CAAa+D,WAAb,GAA2BS,OAA3B;AACD,OAFD,MAEO;AACLE,wBAAMC,YAAN,CACE,0FADF;AAGD;AACF,KAfH,EAgBE,EAAEzF,MAAM,IAAR,EAhBF;AAkBD;;AAED;;;;;;;AAOA,WAAS4E,gBAAT,GAA4B;AAC1Bb,qBAAOjD,KAAP,CAAa4E,GAAb,GAAmB,EAAnB;AACA3B,qBAAOjD,KAAP,CAAa6E,IAAb;AACD;;AAED;;;;;;;AAOA,WAAS1B,eAAT,GAA2B;AACzBF,qBAAOjD,KAAP,CAAa4E,GAAb,GAAmB3B,iBAAO/C,eAAP,CAAuB4E,GAA1C;AACA7B,qBAAOjD,KAAP,CAAa6E,IAAb;AACD;;AAED;;;;;AAKA,WAASE,gBAAT,CAA0BC,aAA1B,EAAyC;AACvC;;;AAGA/B,qBAAO3C,cAAP,GAAwB0E,aAAxB;;AAEA;;;AAGA/B,qBAAOjD,KAAP,CAAa4D,YAAb,GAA4BX,iBAAO3C,cAAnC;AACD;;AAED;;;AAGA,SAAO;AACLwC,UAAMA,IADD;AAELe,WAAOA,KAFF;AAGLb,UAAMA,IAHD;AAILiB,eAAWA,SAJN;AAKLG,qBAAiBA,eALZ;AAMLG,oBAAgBA,cANX;AAOLT,sBAAkBA,gBAPb;AAQLX,qBAAiBA,eARZ;AASL4B,sBAAkBA;AATb,GAAP;AAWD,CAnQU,EAAX;;AAfA;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;kBAwTelC,I;;;;;;;;;;;;;;AC1Tf;;;;;;AAEA;;;;AAIA,IAAIoC,oBAAqB,YAAW;AAClC;;;;;AAKA,WAASC,IAAT,GAAgB;AACdC;AACAC;AACAC;AACAC;AACD;;AAED;;;;;AAKA,WAASH,UAAT,GAAsB;AACpB;;;AAGA,QAAII,QAAQtC,iBAAOjD,KAAP,CAAauD,MAAb,GAAsB,QAAtB,GAAiC,SAA7C;;AAEA;;;AAGA,QAAMiC,oBAAoBC,SAASC,gBAAT,CACxB,uBADwB,CAA1B;;AAIA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIoH,kBAAkB9H,MAAtC,EAA8CU,GAA9C,EAAmD;AACjD;;;AAGA,UAAIuH,WAAWH,kBAAkBpH,CAAlB,EAAqBwH,YAArB,CACb,yBADa,CAAf;AAGA,UAAIC,OAAOL,kBAAkBpH,CAAlB,EAAqBwH,YAArB,CAAkC,2BAAlC,CAAX;;AAEA;;;;;AAKA,UAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC;;;;AAIA,gBAAQN,KAAR;AACE,eAAK,SAAL;AACEO,2BAAeN,kBAAkBpH,CAAlB,CAAf;AACA;AACF,eAAK,QAAL;AACE2H,4BAAgBP,kBAAkBpH,CAAlB,CAAhB;AACA;AANJ;AAQD;AACF;AACF;;AAED;;;;;AAKA,WAASgH,YAAT,GAAwB;AACtB,QAAIG,QAAQtC,iBAAOjD,KAAP,CAAauD,MAAb,GAAsB,QAAtB,GAAiC,SAA7C;;AAEA;;;AAGA,QAAMyC,4BAA4BP,SAASC,gBAAT,CAChC,oDACEzC,iBAAO5C,eADT,GAEE,IAH8B,CAAlC;;AAMA;;;AAGA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI4H,0BAA0BtI,MAA9C,EAAsDU,GAAtD,EAA2D;AACzD;;;AAGA,UAAIyH,OAAOG,0BAA0B5H,CAA1B,EAA6BwH,YAA7B,CACT,2BADS,CAAX;;AAIA;;;;;AAKA,UAAIC,QAAQ,IAAZ,EAAkB;AAChB;;;;AAIA,gBAAQN,KAAR;AACE,eAAK,SAAL;AACEO,2BAAeE,0BAA0B5H,CAA1B,CAAf;AACA;AACF,eAAK,QAAL;AACE2H,4BAAgBC,0BAA0B5H,CAA1B,CAAhB;AACA;AANJ;AAQD;AACF;AACF;;AAED;;;;;AAKA,WAASiH,QAAT,GAAoB;AAClB,QAAIE,QAAQtC,iBAAOjD,KAAP,CAAauD,MAAb,GAAsB,QAAtB,GAAiC,SAA7C;;AAEA;;;;AAIA,QAAI0C,wBAAwBR,SAASC,gBAAT,CAC1B,sDACEzC,iBAAO7C,YADT,GAEE,IAHwB,CAA5B;;AAMA;;;AAGA,SAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAI6H,sBAAsBvI,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD;;;AAGA,UAAIuH,WAAWM,sBAAsB7H,CAAtB,EAAyBwH,YAAzB,CACb,yBADa,CAAf;;AAIA;;;AAGA,UAAID,YAAY,IAAhB,EAAsB;AACpB;;;;AAIA,gBAAQJ,KAAR;AACE,eAAK,SAAL;AACEO,2BAAeG,sBAAsB7H,CAAtB,CAAf;AACA;AACF,eAAK,QAAL;AACE2H,4BAAgBE,sBAAsB7H,CAAtB,CAAhB;AACA;AANJ;AAQD;AACF;AACF;;AAED;;;;;;AAMA,WAASkH,kBAAT,GAA8B;AAC5B,QAAIC,QAAQtC,iBAAOjD,KAAP,CAAauD,MAAb,GAAsB,QAAtB,GAAiC,SAA7C;;AAEA,QAAI2C,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA;;;;;AAKA,QAAI+F,kCAAkCV,SAASC,gBAAT,CACpC,sDACEQ,mBADF,GAEE,8BAFF,GAGEjD,iBAAO5C,eAHT,GAIE,IALkC,CAAtC;;AAQA;;;;AAIA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI+H,gCAAgCzI,MAApD,EAA4DU,GAA5D,EAAiE;AAC/D;;;;AAIA,cAAQmH,KAAR;AACE,aAAK,SAAL;AACEO,yBAAeK,gCAAgC/H,CAAhC,CAAf;AACA;AACF,aAAK,QAAL;AACE2H,0BAAgBI,gCAAgC/H,CAAhC,CAAhB;AACA;AANJ;AAQD;AACF;;AAED;;;;;AAKA,WAASgI,WAAT,GAAuB;AACrB;;;AAGA,QAAIZ,oBAAoBC,SAASC,gBAAT,CAA0B,uBAA1B,CAAxB;;AAEA;;;AAGA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIoH,kBAAkB9H,MAAtC,EAA8CU,GAA9C,EAAmD;AACjD2H,sBAAgBP,kBAAkBpH,CAAlB,CAAhB;AACD;AACF;;AAED;;;;;;;AAOA,WAAS0H,cAAT,CAAwBO,OAAxB,EAAiC;AAC/BA,YAAQC,SAAR,CAAkBC,GAAlB,CAAsB,mBAAtB;AACAF,YAAQC,SAAR,CAAkBE,MAAlB,CAAyB,kBAAzB;AACD;;AAED;;;;;;;AAOA,WAAST,eAAT,CAAyBM,OAAzB,EAAkC;AAChCA,YAAQC,SAAR,CAAkBE,MAAlB,CAAyB,mBAAzB;AACAH,YAAQC,SAAR,CAAkBC,GAAlB,CAAsB,kBAAtB;AACD;;AAED;;;AAGA,SAAO;AACLrB,UAAMA,IADD;AAELC,gBAAYA,UAFP;AAGLC,kBAAcA,YAHT;AAILC,cAAUA,QAJL;AAKLC,wBAAoBA,kBALf;AAMLc,iBAAaA;AANR,GAAP;AAQD,CA1QuB,EAAxB,C,CAVA;;;;kBAsRenB,iB;;;;;;;;;;;;;;AClRf;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;AAOA;;;;;;AAEA;;;;;;;AAdA;;;;;;;AAdA;;;;;;;AAdA;;;;;;;AAdA;;;;;AAbA;;;;AA0EA,IAAIwB,kBAAmB,YAAW;AAChC;;;;;;;AAOA,WAASC,OAAT,GAAoC;AAAA,QAAnBC,SAAmB,uEAAP,KAAO;;AAClC;;;;AAIA,QAAIC,YAAY,IAAhB;AACA,QAAIC,WAAW,EAAf;;AAEA;;;AAGA,QAAIC,YAAY,KAAhB;;AAEA;;;;AAIA,QAAI7D,iBAAOnC,WAAX,EAAwB;AACtB;;;AAGA,UAAImC,iBAAOjC,UAAX,EAAuB;AACrB4F,oBAAY3D,iBAAOlC,YAAP,CAAqBkC,iBAAO7C,YAA5B,EAA2C2G,KAAvD;AACAF,mBAAW5D,iBAAOlC,YAAP,CAAoB6F,SAApB,CAAX;AACD,OAHD,MAGO;AACLA,oBAAY3D,iBAAO7C,YAAnB;AACAyG,mBAAW5D,iBAAOzC,KAAP,CAAaoG,SAAb,CAAX;AACD;AACF,KAXD,MAWO;AACL;;;;AAIA,UAAI3D,iBAAOjC,UAAX,EAAuB;AACrB;;;;;AAKA,YAAIgG,SAAS/D,iBAAO7C,YAAhB,IAAgC,CAAhC,GAAoC6C,iBAAOlC,YAAP,CAAoBrD,MAA5D,EAAoE;AAClE;;;AAGAkJ,sBAAYI,SAAU/D,iBAAO7C,YAAjB,IAAkC,CAA9C;AACD,SALD,MAKO;AACLwG,sBAAY,CAAZ;AACAE,sBAAY,IAAZ;AACD;;AAEDD,mBAAW5D,iBAAOlC,YAAP,CAAqB6F,SAArB,CAAX;AACD,OAjBD,MAiBO;AACL;;;;;AAKA,YAAII,SAAS/D,iBAAO7C,YAAhB,IAAgC,CAAhC,GAAoC6C,iBAAOzC,KAAP,CAAa9C,MAArD,EAA6D;AAC3DkJ,sBAAYI,SAAS/D,iBAAO7C,YAAhB,IAAgC,CAA5C;AACD,SAFD,MAEO;AACLwG,sBAAY,CAAZ;AACAE,sBAAY,IAAZ;AACD;;AAED;;;AAGAD,mBAAW5D,iBAAOzC,KAAP,CAAaoG,SAAb,CAAX;AACD;AACF;;AAED;;;AAGAK,eAAWJ,QAAX,EAAqBD,SAArB;;AAEA;;;AAGA,QAAIE,aAAa,CAAC7D,iBAAOpC,MAAzB,EAAiC,CAChC,CADD,MACO;AACL;;;AAGA,UAAI,EAAE8F,aAAa,CAAC1D,iBAAOpC,MAArB,IAA+BiG,SAAjC,CAAJ,EAAiD;AAC/CjE,uBAAKC,IAAL;AACD;AACF;;AAED;;;;AAIAmC,gCAAkBC,IAAlB;AACAlB,wBAAUjG,GAAV,CAAc,MAAd;;AAEA;;;AAGA,QAAIkF,iBAAOnC,WAAX,EAAwB;AACtBkD,0BAAUjG,GAAV,CAAc,eAAd;AACD;AACF;;AAED;;;;;;;AAOA,WAASmJ,eAAT,CAAyBvB,QAAzB,EAAsD;AAAA,QAAnBgB,SAAmB,uEAAP,KAAO;;AACpD;;;AAGA,QAAIC,YAAY,IAAhB;AACA,QAAIC,WAAW,EAAf;;AAEA;;;AAGA,QAAIC,YAAY,KAAhB;;AAEA;;;AAGA,QAAI7D,iBAAOnC,WAAX,EAAwB;AACtB;;;AAGA,UAAImC,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtCP,oBAAY3D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAAvC;AACAyG,mBAAW5D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwC6F,SAAxC,CAAX;AACD,OAHD,MAGO;AACLA,oBAAY3D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAAvC;AACAyG,mBAAW5D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCoG,SAAjC,CAAX;AACD;AACF,KAXD,MAWO;AACL;;;AAGA,UAAI3D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtC;;;;AAIA,YACEH,SAAS/D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAApC,IAAoD,CAApD,GACA6C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwCrD,MAF1C,EAGE;AACA;;;AAGAkJ,sBAAY3D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,GAA0C,CAAtD;AACD,SARD,MAQO;AACLwG,sBAAY,CAAZ;AACAE,sBAAY,IAAZ;AACD;;AAEDD,mBAAW5D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwC6F,SAAxC,CAAX;AACD,OAnBD,MAmBO;AACL;;;;AAIA,YACEI,SAAS/D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAApC,IAAoD,CAApD,GACA6C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAFnC,EAGE;AACAkJ,sBAAYI,SAAS/D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAApC,IAAoD,CAAhE;AACD,SALD,MAKO;AACLwG,sBAAY,CAAZ;AACAE,sBAAY,IAAZ;AACD;;AAED;;;AAGAD,mBAAW5D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCoG,SAAjC,CAAX;AACD;AACF;;AAED;;;AAGAQ,sBAAkBzB,QAAlB;;AAEA;;;AAGA0B,uBAAmB1B,QAAnB,EAA6BkB,QAA7B,EAAuCD,SAAvC;;AAEA;;;AAGA,QAAIE,aAAa,CAAC7D,iBAAOpC,MAAzB,EAAiC,CAChC,CADD,MACO;AACL,UAAI,EAAE8F,aAAa,CAAC1D,iBAAOpC,MAArB,IAA+BiG,SAAjC,CAAJ,EAAiD;AAC/CjE,uBAAKC,IAAL;AACD;AACF;;AAED;;;AAGAmC,gCAAkBC,IAAlB;AACAlB,wBAAUjG,GAAV,CAAc,MAAd;;AAEA;;;AAGA,QAAIkF,iBAAOnC,WAAX,EAAwB;AACtBkD,0BAAUjG,GAAV,CAAc,eAAd;AACD;AACF;;AAED;;;;;AAKA,WAASuJ,WAAT,GAAuB;AACrB;;;AAGA,QAAIC,gBAAgB,IAApB;AACA,QAAIC,eAAe,EAAnB;;AAEA;;;AAGA,QAAIvE,iBAAOnC,WAAX,EAAwB;AACtB;;;AAGA,UAAImC,iBAAOjC,UAAX,EAAuB;AACrBuG,wBAAgBtE,iBAAO7C,YAAvB;AACAoH,uBAAevE,iBAAOlC,YAAP,CAAoBwG,aAApB,CAAf;AACD,OAHD,MAGO;AACLA,wBAAgBtE,iBAAO7C,YAAvB;AACAoH,uBAAevE,iBAAOzC,KAAP,CAAa+G,aAAb,CAAf;AACD;AACF,KAXD,MAWO;AACL;;;;AAIA,UAAIP,SAAS/D,iBAAO7C,YAAhB,IAAgC,CAAhC,IAAqC,CAAzC,EAA4C;AAC1CmH,wBAAgBP,SAAS/D,iBAAO7C,YAAP,GAAsB,CAA/B,CAAhB;AACD,OAFD,MAEO;AACLmH,wBAAgBP,SAAS/D,iBAAOzC,KAAP,CAAa9C,MAAb,GAAsB,CAA/B,CAAhB;AACD;;AAED;;;AAGA,UAAIuF,iBAAOjC,UAAX,EAAuB;AACrB;;;AAGAwG,uBAAevE,iBAAOlC,YAAP,CAAoBwG,aAApB,CAAf;AACD,OALD,MAKO;AACL;;;AAGAC,uBAAevE,iBAAOzC,KAAP,CAAa+G,aAAb,CAAf;AACD;AACF;AACD;;;AAGAN,eAAWO,YAAX,EAAyBD,aAAzB;;AAEA;;;AAGA1E,mBAAKC,IAAL;;AAEA;;;;AAIAmC,gCAAkBC,IAAlB;AACAlB,wBAAUjG,GAAV,CAAc,MAAd;;AAEA;;;AAGA,QAAIkF,iBAAOnC,WAAX,EAAwB;AACtBkD,0BAAUjG,GAAV,CAAc,eAAd;AACD;AACF;;AAED;;;;;;;AAOA,WAAS0J,mBAAT,CAA6B9B,QAA7B,EAAuC;AACrC;;;AAGA,QAAI4B,gBAAgB,IAApB;AACA,QAAIC,eAAe,EAAnB;;AAEA;;;AAGA,QAAIvE,iBAAOnC,WAAX,EAAwB;AACtB;;;AAGA,UAAImC,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtCI,wBAAgBtE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3C;AACAoH,uBAAevE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwCwG,aAAxC,CAAf;AACD,OAHD,MAGO;AACLA,wBAAgBtE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3C;AACAoH,uBAAevE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC+G,aAAjC,CAAf;AACD;AACF,KAXD,MAWO;AACL;;;;AAIA,UAAIP,SAAS/D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAApC,IAAoD,CAApD,IAAyD,CAA7D,EAAgE;AAC9DmH,wBAAgBP,SAAS/D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,GAA0C,CAAnD,CAAhB;AACD,OAFD,MAEO;AACLmH,wBAAgBP,SAAS/D,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAAjC,GAA0C,CAAnD,CAAhB;AACD;;AAED;;;AAGA,UAAIuF,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtC;;;AAGAK,uBAAevE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwCwG,aAAxC,CAAf;AACD,OALD,MAKO;AACL;;;AAGAC,uBAAevE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC+G,aAAjC,CAAf;AACD;AACF;;AAED;;;AAGAH,sBAAkBzB,QAAlB;;AAEA;;;AAGA0B,uBAAmB1B,QAAnB,EAA6B6B,YAA7B,EAA2CD,aAA3C;;AAEA;;;AAGA1E,mBAAKC,IAAL;;AAEA;;;AAGAmC,gCAAkBC,IAAlB;AACAlB,wBAAUjG,GAAV,CAAc,MAAd;;AAEA;;;AAGA,QAAIkF,iBAAOnC,WAAX,EAAwB;AACtBkD,0BAAUjG,GAAV,CAAc,eAAd;AACD;AACF;;AAED;;;;;;;AAOA,WAASkJ,UAAT,CAAoBpB,IAApB,EAA0BkB,KAA1B,EAAiC;AAC/B;;;AAGAW,sBAAkB7B,IAAlB;;AAEA;;;AAGA5C,qBAAOjD,KAAP,CAAa4E,GAAb,GAAmBiB,KAAKf,GAAxB;AACA7B,qBAAO/C,eAAP,GAAyB2F,IAAzB;AACA5C,qBAAO9C,YAAP,GAAsB0F,KAAK8B,KAA3B;;AAEA1E,qBAAO7C,YAAP,GAAsB4G,SAASD,KAAT,CAAtB;;AAEA;;;AAGAa;AACD;;AAED;;;;;;;;AAQA,WAASP,kBAAT,CAA4B1B,QAA5B,EAAsCE,IAAtC,EAA4CkB,KAA5C,EAAmD;AACjD;;;AAGAW,sBAAkB7B,IAAlB;;AAEA;;;AAGA5C,qBAAOjD,KAAP,CAAa4E,GAAb,GAAmBiB,KAAKf,GAAxB;AACA7B,qBAAO/C,eAAP,GAAyB2F,IAAzB;AACA5C,qBAAO9C,YAAP,GAAsB0F,KAAK8B,KAA3B;AACA1E,qBAAO7C,YAAP,GAAsB,IAAtB;;AAEA6C,qBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,GAA0C4G,SAASD,KAAT,CAA1C;;AAEA;;;AAGAa;AACD;;AAED;;;;;;AAMA,WAASF,iBAAT,CAA2B7B,IAA3B,EAAiC;AAC/B;;;AAGAhD,mBAAKG,IAAL;;AAEA;;;AAGAiC,gCAAkBmB,WAAlB;AACAyB,iCAAmBC,aAAnB;AACAC,yCAA2BD,aAA3B;AACAE,2BAAaC,iBAAb;;AAEA;;;AAGA,QAAIC,iBAAOC,QAAP,CAAgBtC,IAAhB,CAAJ,EAA2B;AACzB7B,0BAAUjG,GAAV,CAAc,cAAd;AACD;AACF;;AAED;;;;;AAKA,WAAS6J,eAAT,GAA2B;AACzBQ,+BAAiBC,eAAjB;AACAC,gCAAkBC,SAAlB;AACAP,2BAAaQ,kBAAb;;AAEA;;;AAGAxE,wBAAUjG,GAAV,CAAc,aAAd;AACD;;AAED;;;;;;AAMA,WAASqJ,iBAAT,CAA2BzB,QAA3B,EAAqC;AACnC;;;;AAIA,QAAI1C,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtC3B,0BAAUjG,GAAV,CAAc,kBAAd;AACA;;;;AAIAkF,uBAAO5C,eAAP,GAAyBsF,QAAzB;;AAEA,UAAIA,YAAY,IAAhB,EAAsB;AACpB1C,yBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,GAA0C,CAA1C;AACD;AACF;AACF;;AAED;;;AAGA,SAAO;AACLsG,aAASA,OADJ;AAELQ,qBAAiBA,eAFZ;AAGLI,iBAAaA,WAHR;AAILG,yBAAqBA,mBAJhB;AAKLR,gBAAYA,UALP;AAMLI,wBAAoBA,kBANf;AAOLD,uBAAmBA;AAPd,GAAP;AASD,CA3gBqB,EAAtB;;AAZA;;;;;;;AAdA;;;;;;;AAdA;;;;;;;AAdA;;;;;;;AAdA;;;;;kBAilBeX,e;;;;;;;;;;;;;;ACnlBf;;;;;;AAEA;;;;AAIA,IAAI/B,QAAS,YAAW;AACtB;;;;;;;;AAQA,WAASC,YAAT,CAAsB8D,OAAtB,EAA+B;AAC7B;;;;AAIA,QAAIxF,iBAAO9B,KAAX,EAAkB;AAChBuH,cAAQC,GAAR,CAAYF,OAAZ;AACD;AACF;;AAED;;;AAGA,SAAO;AACL9D,kBAAcA;AADT,GAAP;AAGD,CAzBW,EAAZ,C,CAVA;;;;kBAqCeD,K;;;;;;;;;;;;;;ACjCf;;;;;;AAEA;;;;;AAKA,IAAIwD,SAAU,YAAW;AACvB;;;;;;;;;;;;AAYA,WAASU,OAAT,CAAiBjD,QAAjB,EAA2BkD,SAA3B,EAAsC;AACpC;;;AAGA,QAAI5F,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtC,aAAO,IAAP;AACD,KAFD,MAEO;AACL;;;AAGA,UAAI1C,iBAAO5C,eAAP,IAA0B,IAA1B,IAAkCsF,YAAY,IAAlD,EAAwD;AACtD;;;AAGA,YAAI1C,iBAAO7C,YAAP,IAAuByI,SAA3B,EAAsC;AACpC,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,KAAP;AACD;AACF,OATD,MASO;AACL;;;;AAIA,YACE5F,iBAAO5C,eAAP,IAA0BsF,QAA1B,IACA1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,IAA2CyI,SAF7C,EAGE;AACA,iBAAO,IAAP;AACD,SALD,MAKO;AACL,iBAAO,KAAP;AACD;AACF;AACF;AACF;;AAED;;;;;;;;;AASA,WAASV,QAAT,CAAkBR,KAAlB,EAAyB;AACvB,QAAI1E,iBAAO9C,YAAP,IAAuBwH,KAA3B,EAAkC;AAChC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAED;;;;;;;;;AASA,WAASmB,WAAT,CAAqBnD,QAArB,EAA+B;AAC7B,QAAI1C,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAED;;;;;;;;;AASA,WAASoD,KAAT,CAAejE,GAAf,EAAoB;AAClB;;;AAGA,QAAIkE,UAAU,mFAAd;;AAEA,WAAOA,QAAQ5F,IAAR,CAAa0B,GAAb,CAAP;AACD;;AAED;;;;;;;;;AASA,WAASmE,KAAT,CAAeC,GAAf,EAAoB;AAClB,WACE,CAACC,MAAMD,GAAN,CAAD,IAAelC,SAASoC,OAAOF,GAAP,CAAT,KAAyBA,GAAxC,IAA+C,CAACC,MAAMnC,SAASkC,GAAT,EAAc,EAAd,CAAN,CADlD;AAGD;;AAED;;;AAGA,SAAO;AACLN,aAASA,OADJ;AAELT,cAAUA,QAFL;AAGLW,iBAAaA,WAHR;AAILC,WAAOA,KAJF;AAKLE,WAAOA;AALF,GAAP;AAOD,CA9HY,EAAb,C,CAXA;;;;kBA2Ief,M;;;;;;;;;;;;;;ACvIf;;;;;;AAEA;;;;;AAKA,IAAImB,cAAe,YAAW;AAC5B;;;;;;;;AAQA,WAASC,WAAT,GAAuB;AACrBrG,qBAAOjD,KAAP,GAAe,IAAIC,KAAJ,EAAf;AACAgD,qBAAO/C,eAAP,GAAyB,EAAzB;AACA+C,qBAAO9C,YAAP,GAAsB,EAAtB;AACA8C,qBAAO7C,YAAP,GAAsB,CAAtB;AACA6C,qBAAO5C,eAAP,GAAyB,IAAzB;AACA4C,qBAAO3C,cAAP,GAAwB,GAAxB;AACA2C,qBAAO1C,SAAP,GAAmB,EAAnB;AACA0C,qBAAOzC,KAAP,GAAe,EAAf;AACAyC,qBAAOxC,SAAP,GAAmB,EAAnB;AACAwC,qBAAOvC,UAAP,GAAoB,EAApB;AACAuC,qBAAOtC,iBAAP,GAA2B,EAA3B;AACAsC,qBAAOrC,sBAAP,GAAgC,EAAhC;AACAqC,qBAAOpC,MAAP,GAAgB,KAAhB;AACAoC,qBAAOlC,YAAP,GAAsB,EAAtB;AACAkC,qBAAOjC,UAAP,GAAoB,KAApB;AACAiC,qBAAOhC,iBAAP,GAA2B,EAA3B;AACAgC,qBAAO/B,oBAAP,GAA8B,EAA9B;AACA+B,qBAAO9B,KAAP,GAAe,KAAf;AACA8B,qBAAO7B,MAAP,GAAgB,GAAhB;AACA6B,qBAAO5B,eAAP,GAAyB,GAAzB;AACA4B,qBAAO3B,gBAAP,GAA0B,CAA1B;AACA2B,qBAAO1B,gBAAP,GAA0B,CAA1B;AACA0B,qBAAOzB,iBAAP,GAA2B,EAA3B;AACAyB,qBAAOxB,kBAAP,GAA4B,KAA5B;AACAwB,qBAAOvB,qBAAP,GAA+B,CAA/B;AACAuB,qBAAOtB,sBAAP,GAAgC,CAAhC;AACAsB,qBAAOlB,aAAP,GAAuB,IAAvB;AACD;;AAED;;;AAGA,WAASwH,cAAT,GAA0B;AACxB;;;AAGA,QAAItG,iBAAOjD,KAAP,CAAauD,MAAb,IAAuBN,iBAAOjD,KAAP,CAAa+D,WAAb,IAA4B,CAAvD,EAA0D;AACxDd,uBAAOhB,YAAP,GAAsB,SAAtB;AACD;;AAED;;;;AAIA,QAAIgB,iBAAOjD,KAAP,CAAauD,MAAb,IAAuBN,iBAAOjD,KAAP,CAAa+D,WAAb,GAA2B,CAAtD,EAAyD;AACvDd,uBAAOhB,YAAP,GAAsB,QAAtB;AACD;;AAED;;;AAGA,QAAI,CAACgB,iBAAOjD,KAAP,CAAauD,MAAlB,EAA0B;AACxBN,uBAAOhB,YAAP,GAAsB,SAAtB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLqH,iBAAaA,WADR;AAELC,oBAAgBA;AAFX,GAAP;AAID,CAzEiB,EAAlB,C,CAXA;;;;kBAsFeF,W;;;;;;;;;;;;;;AClFf;;;;AAMA;;;;;;AAEA;;;;;AAZA;;;;AAiBA,IAAIrF,YAAa,YAAW;AAC1B;;;AAGA,WAASwF,UAAT,GAAsB;AACpB;;;;AAIAvG,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,OAA9B,EAAuC,YAAW;AAChD1G,UAAI,OAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,OAA9B,EAAuC,YAAW;AAChD1G,UAAI,OAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,YAA9B,EAA4C,YAAW;AACrD1G,UAAI,YAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,gBAA9B,EAAgD,YAAW;AACzD1G,UAAI,gBAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,WAA9B,EAA2C,YAAW;AACpD1G,UAAI,WAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,OAA9B,EAAuC,YAAW;AAChD1G,UAAI,OAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,SAA9B,EAAyC,YAAW;AAClD1G,UAAI,SAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,MAA9B,EAAsC,YAAW;AAC/C1G,UAAI,MAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,UAA9B,EAA0C,YAAW;AACnD1G,UAAI,UAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,YAA9B,EAA4C,YAAW;AACrD1G,UAAI,YAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,QAA9B,EAAwC,YAAW;AACjD1G,UAAI,QAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,SAA9B,EAAyC,YAAW;AAClD1G,UAAI,SAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,SAA9B,EAAyC,YAAW;AAClD1G,UAAI,SAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,SAA9B,EAAyC,YAAW;AAClD1G,UAAI,SAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,YAA9B,EAA4C,YAAW;AACrD1G,UAAI,YAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,cAA9B,EAA8C,YAAW;AACvD1G,UAAI,cAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,SAA9B,EAAyC,YAAW;AAClD1G,UAAI,SAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,SAA9B,EAAyC,YAAW;AAClD1G,UAAI,SAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,gBAA9B,EAAgD,YAAW;AACzD1G,UAAI,gBAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,gBAA9B,EAAgD,YAAW;AACzD1G,UAAI,gBAAJ;AACD,KAFD;;AAIA;;;;AAIAkF,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,OAA9B,EAAuC,YAAW;AAChD1G,UAAI,OAAJ;AACD,KAFD;AAGD;;AAED;;;;;;;;AAQA,WAASA,GAAT,CAAa0L,YAAb,EAA2B;AACzB;;;;AAIA,QAAIxG,iBAAO1C,SAAP,CAAiBkJ,YAAjB,CAAJ,EAAoC;AAClC;;;AAGA,UAAIC,mBAAmBzG,iBAAO1C,SAAP,CAAiBkJ,YAAjB,CAAvB;;AAEA;;;AAGA/E,sBAAMC,YAAN,CAAmB,uBAAuB8E,YAA1C;;AAEA;;;AAGA,UAAI;AACFC;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACd,YAAIA,MAAMlB,OAAN,IAAiB,cAArB,EAAqC;AACnC,gBAAMkB,KAAN;AACD,SAFD,MAEO;AACLjF,0BAAMC,YAAN,CAAmB,qBAAqBgF,MAAMlB,OAA9C;AACD;AACF;AACF;AACF;;AAED,SAAO;AACLe,gBAAYA,UADP;AAELzL,SAAKA;AAFA,GAAP;AAID,CAzNe,EAAhB;;AAXA;;;;kBAsOeiG,S;;;;;;;;;;;;;;ACxOf;;;;;;AAEA;;;;;AAKA,IAAIoE,mBAAoB,YAAW;AACjC;;;;;;;;AAQA,WAASC,eAAT,GAA2B;AACzB;;;;AAIA,QAAIuB,oBAAoB,CACtB,eADsB,EAEtB,iBAFsB,EAGtB,+BAHsB,CAAxB;;AAMA;;;AAGA,QAAIC,mBAAmBpE,SAASC,gBAAT,CACrB,4BADqB,CAAvB;;AAIA;;;;;AAKA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIyL,iBAAiBnM,MAArC,EAA6CU,GAA7C,EAAkD;AAChD;;;;AAIA,UAAI0L,OAAOD,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CAAiC,0BAAjC,CAAX;;AAEA;;;AAGA,UAAID,WAAWkE,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYgB,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CACd,2BADc,CAAhB;;AAIA;;;;;;;AAOA,UACEiD,aAAa,IAAb,KACC5F,iBAAO5C,eAAP,IAA0BsF,QAA1B,IACEA,YAAY,IAAZ,IAAoBkD,aAAa,IAFpC,CADF,EAIE;AACA;;;;;AAKA,YAAIkB,MAAO9G,iBAAO/C,eAAP,CAAuB4J,IAAvB,KAAgCrG,SAAjC,GAA8CR,iBAAO/C,eAAP,CAAuB4J,IAAvB,CAA9C,GAA6E,IAAvF;AACA,YAAIF,kBAAkBI,OAAlB,CAA0BF,IAA1B,KAAmC,CAAvC,EAA0C;AACxCC,gBAAMA,OAAO9G,iBAAOhC,iBAApB;AACA4I,2BAAiBzL,CAAjB,EAAoB6L,YAApB,CACE,KADF,EAEEF,GAFF;AAID,SAND,MAMO;AACLA,gBAAMA,OAAO,EAAb;AACAF,2BAAiBzL,CAAjB,EAAoB8L,SAApB,GAAgCH,GAAhC;AACD;AACF;AACF;AACF;;AAED;;;AAGA,WAASI,uBAAT,GAAmC;AACjC;;;;AAIA,QAAIP,oBAAoB,CAAC,WAAD,CAAxB;;AAEA;;;AAGA,QAAIQ,uBAAuB3E,SAASC,gBAAT,CACzB,gCADyB,CAA3B;;AAIA;;;;;AAKA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIgM,qBAAqB1M,MAAzC,EAAiDU,GAAjD,EAAsD;AACpD;;;;AAIA,UAAI0L,OAAOM,qBAAqBhM,CAArB,EAAwBwH,YAAxB,CACT,8BADS,CAAX;AAGA,UAAID,WAAWyE,qBAAqBhM,CAArB,EAAwBwH,YAAxB,CACb,yBADa,CAAf;;AAIA,UAAI3C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BmE,IAA3B,KAAoCrG,SAAxC,EAAmD;AACjD,YAAImG,kBAAkBI,OAAlB,CAA0BF,IAA1B,KAAmC,CAAvC,EAA0C;AACxCM,+BAAqBhM,CAArB,EAAwB6L,YAAxB,CACE,KADF,EAEEhH,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BmE,IAA3B,CAFF;AAID,SALD,MAKO;AACLM,+BAAqBhM,CAArB,EAAwB8L,SAAxB,GAAoCjH,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BmE,IAA3B,CAApC;AACD;AACF,OATD,MASO;AACL;;;;;;AAMA,YAAIF,kBAAkBI,OAAlB,CAA0BF,IAA1B,KAAmC,CAAvC,EAA0C;AACxC,cAAI7G,iBAAO/B,oBAAP,IAA+B,EAAnC,EAAuC;AACrCkJ,iCAAqBhM,CAArB,EAAwB6L,YAAxB,CACE,KADF,EAEEhH,iBAAO/B,oBAFT;AAID,WALD,MAKO;AACLkJ,iCAAqBhM,CAArB,EAAwB6L,YAAxB,CAAqC,KAArC,EAA4C,EAA5C;AACD;AACF,SATD,MASO;AACLG,+BAAqBhM,CAArB,EAAwB8L,SAAxB,GAAoC,EAApC;AACD;AACF;AACF;AACF;;AAED;;;;;;;AAOA,WAASG,sBAAT,CAAgCxE,IAAhC,EAAsCF,QAAtC,EAAgD;AAC9C;;;;AAIA,QAAIiE,oBAAoB,CACtB,eADsB,EAEtB,iBAFsB,EAGtB,+BAHsB,CAAxB;;AAMA;;;AAGA,QAAIC,mBAAmBpE,SAASC,gBAAT,CACrB,yDAAyDC,QAAzD,GAAoE,IAD/C,CAAvB;;AAIA;;;;;AAKA,SAAK,IAAIvH,IAAI,CAAb,EAAgBA,IAAIyL,iBAAiBnM,MAArC,EAA6CU,GAA7C,EAAkD;AAChD;;;;AAIA,UAAI0L,OAAOD,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CAAiC,0BAAjC,CAAX;;AAEA;;;AAGA,UAAI0E,kBAAkBT,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CACpB,yBADoB,CAAtB;;AAIA;;;;AAIA,UAAI0E,mBAAmB3E,QAAvB,EAAiC;AAC/B;;;;;AAKA,YAAIE,KAAKiE,IAAL,KAAcrG,SAAlB,EAA6B;AAC3B,cAAImG,kBAAkBI,OAAlB,CAA0BF,IAA1B,KAAmC,CAAvC,EAA0C;AACxCD,6BAAiBzL,CAAjB,EAAoB6L,YAApB,CAAiC,KAAjC,EAAwCpE,KAAKiE,IAAL,CAAxC;AACD,WAFD,MAEO;AACLD,6BAAiBzL,CAAjB,EAAoB8L,SAApB,GAAgCrE,KAAKiE,IAAL,CAAhC;AACD;AACF,SAND,MAMO;AACL;;;;;;AAMA,cAAIF,kBAAkBI,OAAlB,CAA0BF,IAA1B,KAAmC,CAAvC,EAA0C;AACxC,gBAAIjE,KAAK5E,iBAAL,IAA0B,EAA9B,EAAkC;AAChC4I,+BAAiBzL,CAAjB,EAAoB6L,YAApB,CAAiC,KAAjC,EAAwCpE,KAAK5E,iBAA7C;AACD,aAFD,MAEO;AACL4I,+BAAiBzL,CAAjB,EAAoB6L,YAApB,CAAiC,KAAjC,EAAwC,EAAxC;AACD;AACF,WAND,MAMO;AACLJ,6BAAiBzL,CAAjB,EAAoB8L,SAApB,GAAgC,EAAhC;AACD;AACF;AACF;AACF;AACF;;AAED;;;AAGA,WAASK,YAAT,GAAwB;AACtB;;;;AAIA,QAAIX,oBAAoB,CACtB,eADsB,EAEtB,iBAFsB,EAGtB,+BAHsB,CAAxB;;AAMA;;;AAGA,QAAIC,mBAAmBpE,SAASC,gBAAT,CACrB,4BADqB,CAAvB;;AAIA;;;;;AAKA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIyL,iBAAiBnM,MAArC,EAA6CU,GAA7C,EAAkD;AAChD,UAAIyK,YAAYgB,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CACd,2BADc,CAAhB;AAGA,UAAID,WAAWkE,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CACb,yBADa,CAAf;;AAIA,UAAIiD,aAAa,IAAb,IAAqBlD,YAAY,IAArC,EAA2C;AACzC,YAAImE,OAAOD,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CAAiC,0BAAjC,CAAX;;AAEA;;;;;;;;AAQA,YAAImE,MAAM9G,iBAAOzC,KAAP,CAAaqI,SAAb,EAAwBiB,IAAxB,KAAiCrG,SAAjC,GAA6CR,iBAAOzC,KAAP,CAAaqI,SAAb,EAAwBiB,IAAxB,CAA7C,GAA6E,IAAvF;AACA;;;;AAIA,YAAIF,kBAAkBI,OAAlB,CAA0BF,IAA1B,KAAmC,CAAvC,EAA0C;AACxC;;;;AAIAC,gBAAMA,OAAO9G,iBAAOhC,iBAApB;AACA4I,2BAAiBzL,CAAjB,EAAoB6L,YAApB,CACE,KADF,EAEEF,GAFF;AAID,SAVD,MAUO;AACLF,2BAAiBzL,CAAjB,EAAoB8L,SAApB,GAAgCH,GAAhC;AACD;AACF;;AAED;;;AAGA,UAAIlB,aAAa,IAAb,IAAqBlD,YAAY,IAArC,EAA2C;AACzC;;;AAGA,YAAImE,QAAOD,iBAAiBzL,CAAjB,EAAoBwH,YAApB,CAAiC,0BAAjC,CAAX;;AAEA;;;AAGA,YAAI3C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqI,SAAjC,EAA4CiB,KAA5C,KAAqDrG,SAAzD,EAAoE;AAClE,cAAImG,kBAAkBI,OAAlB,CAA0BF,KAA1B,KAAmC,CAAvC,EAA0C;AACxCD,6BAAiBzL,CAAjB,EAAoB6L,YAApB,CACE,KADF,EAEEhH,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqI,SAAjC,EAA4CiB,KAA5C,CAFF;AAID,WALD,MAKO;AACLD,6BAAiBzL,CAAjB,EAAoB8L,SAApB,GACEjH,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqI,SAAjC,EAA4CiB,KAA5C,CADF;AAED;AACF;AACF;AACF;;AAED;;;AAGAK;AACD;;AAED;;;AAGA,SAAO;AACL9B,qBAAiBA,eADZ;AAELgC,4BAAwBA,sBAFnB;AAGLE,kBAAcA,YAHT;AAILJ,6BAAyBA;AAJpB,GAAP;AAMD,CA9UsB,EAAvB,C,CAXA;;;;kBA2Ve/B,gB;;;;;;;;;;;;;;ACvVf;;;;;;AAEA;;;;;;AAMA,IAAIoC,iBAAkB,YAAW;AAC/B;;;;;;AAMA,WAASC,UAAT,GAAsB;AACpB;;;AAGA,QAAIC,gBAAgBjF,SAASkF,sBAAT,CAAgC,kBAAhC,CAApB;;AAEA;;;;;;AAMA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIsM,cAAchN,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7C,UAAI6E,iBAAOpC,MAAX,EAAmB;AACjB6J,sBAActM,CAAd,EAAiBkI,SAAjB,CAA2BC,GAA3B,CAA+B,qBAA/B;AACAmE,sBAActM,CAAd,EAAiBkI,SAAjB,CAA2BE,MAA3B,CAAkC,sBAAlC;AACD,OAHD,MAGO;AACLkE,sBAActM,CAAd,EAAiBkI,SAAjB,CAA2BE,MAA3B,CAAkC,qBAAlC;AACAkE,sBAActM,CAAd,EAAiBkI,SAAjB,CAA2BC,GAA3B,CAA+B,sBAA/B;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASqE,kBAAT,CAA4BjF,QAA5B,EAAsC;AACpC;;;AAGA,QAAIkF,gBAAgBpF,SAASkF,sBAAT,CAAgC,kBAAhC,CAApB;;AAEA;;;AAGA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIyM,cAAcnN,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7C;;;;AAIA,UACEyM,cAAczM,CAAd,EAAiBwH,YAAjB,CAA8B,yBAA9B,KAA4DD,QAD9D,EAEE;AACA;;;;;;AAMA,YAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B9E,MAA/B,EAAuC;AACrCgK,wBAAczM,CAAd,EAAiBkI,SAAjB,CAA2BC,GAA3B,CAA+B,qBAA/B;AACAsE,wBAAczM,CAAd,EAAiBkI,SAAjB,CAA2BE,MAA3B,CAAkC,sBAAlC;AACD,SAHD,MAGO;AACLqE,wBAAczM,CAAd,EAAiBkI,SAAjB,CAA2BC,GAA3B,CAA+B,sBAA/B;AACAsE,wBAAczM,CAAd,EAAiBkI,SAAjB,CAA2BE,MAA3B,CAAkC,qBAAlC;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASsE,cAAT,GAA0B;AACxB;;;AAGA,QAAIC,oBAAoBtF,SAASkF,sBAAT,CACtB,uBADsB,CAAxB;;AAIA;;;;;;AAMA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI2M,kBAAkBrN,MAAtC,EAA8CU,GAA9C,EAAmD;AACjD,UAAI6E,iBAAOnC,WAAX,EAAwB;AACtBiK,0BAAkB3M,CAAlB,EAAqBkI,SAArB,CAA+BC,GAA/B,CAAmC,0BAAnC;AACAwE,0BAAkB3M,CAAlB,EAAqBkI,SAArB,CAA+BE,MAA/B,CAAsC,2BAAtC;AACD,OAHD,MAGO;AACLuE,0BAAkB3M,CAAlB,EAAqBkI,SAArB,CAA+BE,MAA/B,CAAsC,0BAAtC;AACAuE,0BAAkB3M,CAAlB,EAAqBkI,SAArB,CAA+BC,GAA/B,CAAmC,2BAAnC;AACD;AACF;AACF;;AAED;;;AAGA,SAAO;AACLkE,gBAAYA,UADP;AAELG,wBAAoBA,kBAFf;AAGLE,oBAAgBA;AAHX,GAAP;AAKD,CA5GoB,EAArB,C,CAZA;;;;kBA0HeN,c;;;;;;;;;;;;;AC1Hf;;;;;AAKA,IAAIQ,eAAgB,YAAW;AAC7B;;;;;;;AAOA,WAASC,QAAT,CAAkB1F,KAAlB,EAAyB;AACvB;;;AAGA,QAAI2F,cAAczF,SAASkF,sBAAT,CAAgC,gBAAhC,CAAlB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI8M,YAAYxN,MAAhC,EAAwCU,GAAxC,EAA6C;AAC3C,UAAI,CAACmH,KAAL,EAAY;AACV2F,oBAAY9M,CAAZ,EAAekI,SAAf,CAAyBC,GAAzB,CAA6B,qBAA7B;AACA2E,oBAAY9M,CAAZ,EAAekI,SAAf,CAAyBE,MAAzB,CAAgC,iBAAhC;AACD,OAHD,MAGO;AACL0E,oBAAY9M,CAAZ,EAAekI,SAAf,CAAyBE,MAAzB,CAAgC,qBAAhC;AACA0E,oBAAY9M,CAAZ,EAAekI,SAAf,CAAyBC,GAAzB,CAA6B,iBAA7B;AACD;AACF;AACF;;AAED,SAAO;AACL0E,cAAUA;AADL,GAAP;AAGD,CAjCkB,EAAnB;;kBAmCeD,Y;;;;;;;;;;;;;;ACpCf;;;;;;AAEA;;;;AAIA,IAAIG,uBAAwB,YAAW;AACrC;;;;;;AAMA,WAASjG,IAAT,GAAgB;AACd,QAAIkG,gBAAgB3F,SAASkF,sBAAT,CAClB,yBADkB,CAApB;;AAIA;;;;AAIA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIgN,cAAc1N,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7CgN,oBAAchN,CAAd,EAAiBiN,KAAjB,GAAyBpI,iBAAOjD,KAAP,CAAaoB,MAAb,GAAsB,GAA/C;AACD;AACF;;AAED;;;AAGA,SAAO;AACL8D,UAAMA;AADD,GAAP;AAGD,CA3B0B,EAA3B,C,CAVA;;;;kBAuCeiG,oB;;;;;;;;;;;;;;ACnCf;;;;;;AAEA;;;;;AAKA,IAAIG,WAAY,YAAW;AACzB;;;;;;AAMA,WAASC,SAAT,CAAmB1K,MAAnB,EAA2B;AACzB;;;AAGAoC,qBAAOpC,MAAP,GAAgBA,MAAhB;AACD;;AAED;;;;;;;AAOA,WAAS2K,iBAAT,CAA2B3K,MAA3B,EAAmC8E,QAAnC,EAA6C;AAC3C;;;AAGA1C,qBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B9E,MAA3B,GAAoCA,MAApC;AACD;;AAED;;;;;;AAMA,WAAS4K,aAAT,CAAuB5K,MAAvB,EAA+B;AAC7BoC,qBAAOnC,WAAP,GAAqBD,MAArB;AACD;;AAED;;;AAGA,SAAO;AACL0K,eAAWA,SADN;AAELC,uBAAmBA,iBAFd;AAGLC,mBAAeA;AAHV,GAAP;AAKD,CA9Cc,EAAf,C,CAXA;;;;kBA2DeH,Q;;;;;;;;;;;;;;ACvDf;;;;;;AAEA;;;;;;AAMA,IAAII,WAAY,YAAW;AACzB;;;;;;AAMA,WAASC,UAAT,CAAoBxE,OAApB,EAA6B;AAC3BlE,qBAAOjC,UAAP,GAAoBmG,OAApB;;AAEA,QAAIA,OAAJ,EAAa;AACXyE;AACD,KAFD,MAEO;AACL3I,uBAAOlC,YAAP,GAAsB,EAAtB;AACD;AACF;;AAED;;;;;AAKA,WAAS8K,aAAT,GAAyB;AACvB;;;;AAIA,QAAI5I,iBAAOjC,UAAX,EAAuB;AACrBiC,uBAAOjC,UAAP,GAAoB,KAApB;AACAiC,uBAAOlC,YAAP,GAAsB,EAAtB;AACD,KAHD,MAGO;AACLkC,uBAAOjC,UAAP,GAAoB,IAApB;AACA4K;AACD;AACF;;AAED;;;;;;;AAOA,WAASE,kBAAT,CAA4BnG,QAA5B,EAAsCwB,OAAtC,EAA+C;AAC7ClE,qBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA3B,GAAqCA,OAArC;;AAEA,QAAIlE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtC4E,2BAAqBpG,QAArB;AACD,KAFD,MAEO;AACL1C,uBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,GAA0C,EAA1C;AACD;AACF;;AAED;;;;;;AAMA,WAASiL,qBAAT,CAA+BrG,QAA/B,EAAyC;AACvC;;;;AAIA,QAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtClE,uBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA3B,GAAqC,KAArC;AACAlE,uBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,GAA0C,EAA1C;AACD,KAHD,MAGO;AACLkC,uBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA3B,GAAqC,IAArC;AACA4E,2BAAqBpG,QAArB;AACD;AACF;;AAED;;;;;;;;AAQA,WAASiG,YAAT,GAAwB;AACtB;;;AAGA,QAAIK,cAAc,IAAI/N,KAAJ,CAAU+E,iBAAOzC,KAAP,CAAa9C,MAAvB,CAAlB;;AAEA;;;AAGA,SAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOzC,KAAP,CAAa9C,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C6N,kBAAY7N,CAAZ,IAAiB6E,iBAAOzC,KAAP,CAAapC,CAAb,CAAjB;AACD;;AAED;;;;AAIA,SAAK,IAAIA,KAAI6E,iBAAOzC,KAAP,CAAa9C,MAAb,GAAsB,CAAnC,EAAsCU,KAAI,CAA1C,EAA6CA,IAA7C,EAAkD;AAChD,UAAI8N,UAAUC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBpJ,iBAAOzC,KAAP,CAAa9C,MAA7B,GAAsC,CAAjD,CAAd;AACA4O,kBAAYL,WAAZ,EAAyB7N,EAAzB,EAA4B8N,UAAU,CAAtC;AACD;;AAED;;;AAGAjJ,qBAAOlC,YAAP,GAAsBkL,WAAtB;AACD;;AAED;;;;;;;;AAQA,WAASF,oBAAT,CAA8BpG,QAA9B,EAAwC;AACtC;;;AAGA,QAAIsG,cAAc,IAAI/N,KAAJ,CAAU+E,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAA3C,CAAlB;;AAEA;;;AAGA,SAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAArD,EAA6DU,GAA7D,EAAkE;AAChE6N,kBAAY7N,CAAZ,IAAiB6E,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCpC,CAAjC,CAAjB;AACD;;AAED;;;;AAIA,SAAK,IAAIA,MAAI6E,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAAjC,GAA0C,CAAvD,EAA0DU,MAAI,CAA9D,EAAiEA,KAAjE,EAAsE;AACpE,UAAI8N,UAAUC,KAAKC,KAAL,CACZD,KAAKE,MAAL,KAAgBpJ,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAAjD,GAA0D,CAD9C,CAAd;AAGA4O,kBAAYL,WAAZ,EAAyB7N,GAAzB,EAA4B8N,UAAU,CAAtC;AACD;;AAED;;;AAGAjJ,qBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,GAA0CkL,WAA1C;AACD;;AAED;;;;;;;;AAQA,WAASK,WAAT,CAAqBC,WAArB,EAAkCC,QAAlC,EAA4CH,MAA5C,EAAoD;AAClD,QAAII,OAAOF,YAAYC,QAAZ,CAAX;AACAD,gBAAYC,QAAZ,IAAwBD,YAAYF,MAAZ,CAAxB;AACAE,gBAAYF,MAAZ,IAAsBI,IAAtB;AACD;;AAED;;;AAGA,SAAO;AACLd,gBAAYA,UADP;AAELE,mBAAeA,aAFV;AAGLC,wBAAoBA,kBAHf;AAILE,2BAAuBA,qBAJlB;AAKLJ,kBAAcA,YALT;AAMLG,0BAAsBA;AANjB,GAAP;AAQD,CA5Kc,EAAf,C,CAZA;;;;kBA0LeL,Q;;;;;;;;;;;;;;ACtLf;;;;;;AAEA;;;;AAIA,IAAI7D,qBAAsB,YAAW;AACnC;;;;;;;;AAQA,WAAS3C,IAAT,CAAcwH,QAAd,EAAwB/G,QAAxB,EAAkCkD,SAAlC,EAA6C;AAC3C8D,aAASD,QAAT;AACAtH,iBAAasH,QAAb,EAAuB/G,QAAvB;AACAN,aAASqH,QAAT,EAAmB7D,SAAnB;AACAvD,uBAAmBoH,QAAnB,EAA6B/G,QAA7B;AACD;;AAED;;;;;;AAMA,WAASgH,QAAT,CAAkBD,QAAlB,EAA4B;AAC1B;;;AAGAA,eAAW,CAACvD,MAAMuD,QAAN,CAAD,GAAmBA,QAAnB,GAA8B,CAAzC;;AAEA;;;AAGA,QAAME,kBAAkBnH,SAASC,gBAAT,CAA0B,wBAA1B,CAAxB;;AAEA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIwO,gBAAgBlP,MAApC,EAA4CU,GAA5C,EAAiD;AAC/C;;;AAGA,UAAIuH,WAAWiH,gBAAgBxO,CAAhB,EAAmBwH,YAAnB,CAAgC,yBAAhC,CAAf;AACA,UAAIC,OAAO+G,gBAAgBxO,CAAhB,EAAmBwH,YAAnB,CAAgC,2BAAhC,CAAX;;AAEA;;;;;AAKA,UAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC+G,wBAAgBxO,CAAhB,EAAmBiN,KAAnB,GAA2BqB,QAA3B;AACD;AACF;AACF;;AAED;;;;;;;AAOA,WAAStH,YAAT,CAAsBsH,QAAtB,EAAgC/G,QAAhC,EAA0C;AACxC;;;AAGA+G,eAAW,CAACvD,MAAMuD,QAAN,CAAD,GAAmBA,QAAnB,GAA8B,CAAzC;;AAEA;;;AAGA,QAAMG,sBAAsBpH,SAASC,gBAAT,CAC1B,qDAAqDC,QAArD,GAAgE,IADtC,CAA5B;;AAIA;;;;AAIA,SAAK,IAAIvH,IAAI,CAAb,EAAgBA,IAAIyO,oBAAoBnP,MAAxC,EAAgDU,GAAhD,EAAqD;AACnD;;;AAGA,UAAI0O,oBAAoBD,oBAAoBzO,CAApB,EAAuBwH,YAAvB,CACtB,yBADsB,CAAxB;AAGA,UAAImH,gBAAgBF,oBAAoBzO,CAApB,EAAuBwH,YAAvB,CAClB,2BADkB,CAApB;;AAIA;;;;;AAKA,UAAIkH,qBAAqBnH,QAArB,IAAiCoH,iBAAiB,IAAtD,EAA4D;AAC1DF,4BAAoBzO,CAApB,EAAuBiN,KAAvB,GAA+BqB,QAA/B;AACD;AACF;AACF;;AAED;;;;;;;AAOA,WAASrH,QAAT,CAAkBqH,QAAlB,EAA4B7D,SAA5B,EAAuC;AACrC;;;AAGA,QAAI5F,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC;;;AAGAqM,iBAAW,CAACvD,MAAMuD,QAAN,CAAD,GAAmBA,QAAnB,GAA8B,CAAzC;;AAEA;;;AAGA,UAAMM,cAAcvH,SAASC,gBAAT,CAClB,uDAAuDmD,SAAvD,GAAmE,IADjD,CAApB;;AAIA;;;;AAIA,WAAK,IAAIzK,IAAI,CAAb,EAAgBA,IAAI4O,YAAYtP,MAAhC,EAAwCU,GAAxC,EAA6C;AAC3C;;;AAGA,YAAI0O,oBAAoBE,YAAY5O,CAAZ,EAAewH,YAAf,CACtB,yBADsB,CAAxB;AAGA,YAAImH,gBAAgBC,YAAY5O,CAAZ,EAAewH,YAAf,CAClB,2BADkB,CAApB;;AAIA;;;;;AAKA,YAAIkH,qBAAqB,IAArB,IAA6BC,iBAAiBlE,SAAlD,EAA6D;AAC3DmE,sBAAY5O,CAAZ,EAAeiN,KAAf,GAAuBqB,QAAvB;AACD;AACF;AACF;AACF;;AAED;;;;;;;AAOA,WAASpH,kBAAT,CAA4BoH,QAA5B,EAAsC/G,QAAtC,EAAgD;AAC9C;;;AAGA+G,eAAW,CAACvD,MAAMuD,QAAN,CAAD,GAAmBA,QAAnB,GAA8B,CAAzC;;AAEA,QAAIxG,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA;;;AAGA,QAAM6M,wBAAwBxH,SAASC,gBAAT,CAC5B,qDACEC,QADF,GAEE,gCAFF,GAGEO,mBAHF,GAIE,IAL0B,CAA9B;;AAQA;;;;AAIA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAI6O,sBAAsBvP,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD6O,4BAAsB7O,CAAtB,EAAyBiN,KAAzB,GAAiCqB,QAAjC;AACD;AACF;;AAED;;;;;;AAMA,WAAS5E,aAAT,GAAyB;AACvB,QAAIkF,cAAcvH,SAASkF,sBAAT,CAAgC,uBAAhC,CAAlB;;AAEA;;;;AAIA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI4O,YAAYtP,MAAhC,EAAwCU,GAAxC,EAA6C;AAC3C4O,kBAAY5O,CAAZ,EAAeiN,KAAf,GAAuB,CAAvB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLnG,UAAMA,IADD;AAELyH,cAAUA,QAFL;AAGLvH,kBAAcA,YAHT;AAILC,cAAUA,QAJL;AAKLC,wBAAoBA,kBALf;AAMLwC,mBAAeA;AANV,GAAP;AAQD,CA3NwB,EAAzB,C,CAVA;;;;kBAuOeD,kB;;;;;;;;;;;;;;ACnOf;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;AAqDA,IAAIG,eAAgB,YAAW;AAC7B;;;AAGA,WAASC,iBAAT,GAA6B;AAC3BiF,kCAAoBC,UAApB;AACAC,kCAAoBD,UAApB;AACAE,oCAAsBF,UAAtB;AACAG,oCAAsBH,UAAtB;AACD;;AAED;;;;;AAKA,WAASI,gBAAT,CAA0BxJ,WAA1B,EAAuC;AACrCmJ,kCAAoBhI,IAApB,CAAyBnB,WAAzB;AACAqJ,kCAAoBlI,IAApB,CAAyBnB,YAAYyJ,KAArC;AACAH,oCAAsBnI,IAAtB,CAA2BnB,YAAY0J,OAAvC;AACAH,oCAAsBpI,IAAtB,CAA2BnB,YAAYS,OAAvC;AACD;;AAED;;;AAGA,WAASgE,kBAAT,GAA8B;AAC5BkF,4CAA8BP,UAA9B;AACAQ,mCAAqBR,UAArB;AACAS,qCAAuBT,UAAvB;AACAU,qCAAuBV,UAAvB;AACAW,mCAAqBX,UAArB;AACD;;AAED;;;;;;AAMA,WAASY,iBAAT,CAA2BhK,WAA3B,EAAwCiK,YAAxC,EAAsD;AACpDN,4CAA8BxI,IAA9B,CAAmCnB,WAAnC,EAAgDiK,YAAhD;AACAF,mCAAqB5I,IAArB,CAA0B8I,YAA1B;AACAL,mCAAqBzI,IAArB,CAA0B8I,aAAaR,KAAvC;AACAI,qCAAuB1I,IAAvB,CAA4B8I,aAAaP,OAAzC;AACAI,qCAAuB3I,IAAvB,CAA4B8I,aAAaxJ,OAAzC;AACD;;AAED;;;AAGA,SAAO;AACLyD,uBAAmBA,iBADd;AAELsF,sBAAkBA,gBAFb;AAGL/E,wBAAoBA,kBAHf;AAILuF,uBAAmBA;AAJd,GAAP;AAMD,CAzDkB,EAAnB;;AAXA;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;kBAsHe/F,Y;;;;;;;;;;;;;;AClHf;;;;AAMA;;;;;;AAEA;;;;;AAZA;;;;AAiBA,IAAIjF,iBAAkB,YAAW;AAC/B;;;AAGA,WAAShF,GAAT,GAAe;AACb;;;AAGA,QAAIkQ,wBAAwBxI,SAASC,gBAAT,CAC1B,0BAD0B,CAA5B;;AAIA;;;AAGA,QAAIzC,iBAAOf,uBAAX,EAAoC;AAClC;;;;AAIA,UACEgM,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C7E,MAA7C,GAAsD,CAAtD,IACAuQ,sBAAsBvQ,MAAtB,GAA+B,CAFjC,EAGE;AACA;;;;AAIA,aAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI6P,sBAAsBvQ,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD;;;;AAIA,cAAIuH,WAAWsI,sBAAsB7P,CAAtB,EAAyBwH,YAAzB,CACb,yBADa,CAAf;AAGA,cAAIC,OAAOoI,sBAAsB7P,CAAtB,EAAyBwH,YAAzB,CACT,2BADS,CAAX;;AAIA;;;AAGA,cAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpCuI,mCAAuBH,sBAAsB7P,CAAtB,CAAvB;AACD;;AAED;;;;AAIA,cAAIuH,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpCwI,qCAAyBJ,sBAAsB7P,CAAtB,CAAzB,EAAmDuH,QAAnD;AACD;;AAED;;;AAGA,cAAIA,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpCyI,iCAAqBL,sBAAsB7P,CAAtB,CAArB,EAA+CyH,IAA/C;AACD;;AAED;;;;AAIA,cAAIF,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC0I,2CACEN,sBAAsB7P,CAAtB,CADF,EAEEuH,QAFF,EAGEE,IAHF;AAKD;AACF;AACF;AACF,KA5DD,MA4DO;AACL2I;AACD;AACF;;AAED;;;;;AAKA,WAASJ,sBAAT,CAAgC/H,OAAhC,EAAyC;AACvC;;;;AAIA,QAAIoI,2BAA2BxL,iBAAOyL,aAAtC;AACA,QAAIC,+BACF1L,iBAAO7C,YAAP,IAAuB,IAAvB,GACI6C,iBAAOzC,KAAP,CAAayC,iBAAO7C,YAApB,EAAkCsO,aADtC,GAEIzL,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCG,KAAzC,CACEyC,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD3C,EAEEsO,aALR;;AAOA;;;;AAIA,QACEC,gCAAgClL,SAAhC,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCoM,4BAAhC,KAAiElL,SAFnE,EAGE;AACAmL,gCAA0BD,4BAA1B,EAAwDtI,OAAxD;;AAEA;;;AAGD,KATD,MASO,IACLoI,4BAA4BhL,SAA5B,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCkM,wBAAhC,KAA6DhL,SAFxD,EAGL;AACAmL,gCAA0BH,wBAA1B,EAAoDpI,OAApD;;AAEA;;;;AAID,KAVM,MAUA;AACL;;;AAGA,UAAIwI,qBACFX,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C7E,MAA7C,GAAsD,CAAtD,GACIwQ,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C,CAA7C,CADJ,GAEI,IAHN;;AAKA,UAAIsM,sBAAsB,IAA1B,EAAgC;AAC9BD,kCAA0BC,kBAA1B,EAA8CxI,OAA9C;AACD;AACF;AACF;;AAED;;;;;;AAMA,WAASgI,wBAAT,CAAkChI,OAAlC,EAA2CV,QAA3C,EAAqD;AACnD;;;AAGA,QAAIA,YAAY1C,iBAAO5C,eAAvB,EAAwC;AACtC;;;;AAIA,UAAIsO,+BACF1L,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCG,KAAzC,CACEyC,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD3C,EAEEsO,aAHJ;AAIA,UAAII,mCACF7L,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCqO,aAD3C;AAEA,UAAID,2BAA2BxL,iBAAOyL,aAAtC;;AAEA;;;AAGA,UACEC,gCAAgClL,SAAhC,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCoM,4BAAhC,KACElL,SAHJ,EAIE;AACAmL,kCAA0BD,4BAA1B,EAAwDtI,OAAxD;;AAEA;;;AAGD,OAVD,MAUO,IACLyI,oCAAoCrL,SAApC,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCuM,gCAAhC,KACErL,SAHG,EAIL;AACAmL,kCAA0BE,gCAA1B,EAA4DzI,OAA5D;;AAEA;;;AAGD,OAVM,MAUA,IACLoI,4BAA4BhL,SAA5B,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCkM,wBAAhC,KAA6DhL,SAFxD,EAGL;AACAmL,kCAA0BH,wBAA1B,EAAoDpI,OAApD;AACD,OALM,MAKA;AACL;;;AAGA,YAAIwI,qBACFX,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C7E,MAA7C,GAAsD,CAAtD,GACIwQ,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C,CAA7C,CADJ,GAEI,IAHN;;AAKA,YAAIsM,sBAAsB,IAA1B,EAAgC;AAC9BD,oCAA0BC,kBAA1B,EAA8CxI,OAA9C;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASiI,oBAAT,CAA8BjI,OAA9B,EAAuCR,IAAvC,EAA6C;AAC3C;;;AAGA,QAAIA,QAAQ5C,iBAAO7C,YAAnB,EAAiC;AAC/B;;;AAGA,UAAIuO,+BACF1L,iBAAOzC,KAAP,CAAayC,iBAAO7C,YAApB,EAAkCsO,aADpC;AAEA,UAAID,2BAA2BxL,iBAAOyL,aAAtC;;AAEA;;;AAGA,UACEC,gCAAgClL,SAAhC,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCoM,4BAAhC,KACElL,SAHJ,EAIE;AACAmL,kCAA0BD,4BAA1B,EAAwDtI,OAAxD;;AAEA;;;AAGD,OAVD,MAUO,IACLoI,4BAA4BhL,SAA5B,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCkM,wBAAhC,KAA6DhL,SAFxD,EAGL;AACAmL,kCAA0BH,wBAA1B,EAAoDpI,OAApD;AACD,OALM,MAKA;AACL;;;AAGA,YAAIwI,qBACFX,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C7E,MAA7C,GAAsD,CAAtD,GACIwQ,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C,CAA7C,CADJ,GAEI,IAHN;;AAKA,YAAIsM,sBAAsB,IAA1B,EAAgC;AAC9BD,oCAA0BC,kBAA1B,EAA8CxI,OAA9C;AACD;AACF;AACF;AACF;;AAED;;;;;;;AAOA,WAASkI,8BAAT,CAAwClI,OAAxC,EAAiDV,QAAjD,EAA2DE,IAA3D,EAAiE;AAC/D;;;;AAIA,QACEF,YAAY1C,iBAAO5C,eAAnB,IACA4C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,IAA2CyF,IAF7C,EAGE;AACA;;;;AAIA,UAAI8I,+BACF1L,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCG,KAAzC,CACEyC,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD3C,EAEEsO,aAHJ;AAIA,UAAII,mCACF7L,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCqO,aAD3C;AAEA,UAAID,2BAA2BxL,iBAAOyL,aAAtC;;AAEA;;;AAGA,UACEC,gCAAgClL,SAAhC,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCoM,4BAAhC,KACElL,SAHJ,EAIE;AACAmL,kCAA0BD,4BAA1B,EAAwDtI,OAAxD;;AAEA;;;AAGD,OAVD,MAUO,IACLyI,oCAAoCrL,SAApC,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCuM,gCAAhC,KACErL,SAHG,EAIL;AACAmL,kCAA0BE,gCAA1B,EAA4DzI,OAA5D;;AAEA;;;AAGD,OAVM,MAUA,IACLoI,4BAA4BhL,SAA5B,IACAR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCkM,wBAAhC,KAA6DhL,SAFxD,EAGL;AACAmL,kCAA0BH,wBAA1B,EAAoDpI,OAApD;AACD,OALM,MAKA;AACL;;;AAGA,YAAIwI,qBACFX,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C7E,MAA7C,GAAsD,CAAtD,GACIwQ,OAAOC,IAAP,CAAYlL,iBAAOX,cAAP,CAAsBC,SAAlC,EAA6C,CAA7C,CADJ,GAEI,IAHN;;AAKA,YAAIsM,sBAAsB,IAA1B,EAAgC;AAC9BD,oCAA0BC,kBAA1B,EAA8CxI,OAA9C;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASuI,yBAAT,CAAmCG,GAAnC,EAAwC1I,OAAxC,EAAiD;AAC/C,QAAIqI,gBAAgB,IAAIzL,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCwM,GAAhC,EAAqC,QAArC,CAAJ,EAApB;AACAL,kBAAcM,cAAd,CACE/L,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCwM,GAAhC,EAAqC,aAArC,CADF;AAGAL,kBAAcO,kBAAd,CAAiC5I,OAAjC;AACApD,qBAAOX,cAAP,CAAsBE,MAAtB,CAA6BnE,IAA7B,CAAkCqQ,aAAlC;AACD;;AAED;;;AAGA,WAAS1L,IAAT,GAAgB;AACd;;;AAGA,SAAK,IAAI5E,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOX,cAAP,CAAsBE,MAAtB,CAA6B9E,MAAjD,EAAyDU,GAAzD,EAA8D;AAC5D6E,uBAAOX,cAAP,CAAsBE,MAAtB,CAA6BpE,CAA7B,EAAgC8Q,iBAAhC;AACD;;AAED;;;AAGAjM,qBAAOX,cAAP,CAAsBE,MAAtB,GAA+B,EAA/B;AACD;;AAED;;;;;;AAMA,WAAS2M,QAAT,CAAkBT,aAAlB,EAAiCU,WAAjC,EAA8C;AAC5C;;;AAGA,QAAIC,mBAAmB,IAAIX,aAAJ,EAAvB;;AAEA;;;;;;AAOAzL,qBAAOX,cAAP,CAAsBC,SAAtB,CAAgC8M,iBAAiBC,KAAjB,EAAhC,IAA4D,IAAIpR,KAAJ,EAA5D;AACA+E,qBAAOX,cAAP,CAAsBC,SAAtB,CAAgC8M,iBAAiBC,KAAjB,EAAhC,EACE,QADF,IAEIZ,aAFJ;AAGAzL,qBAAOX,cAAP,CAAsBC,SAAtB,CAAgC8M,iBAAiBC,KAAjB,EAAhC,EACE,aADF,IAEIF,WAFJ;AAGD;;AAED;;;AAGA,WAASZ,cAAT,GAA0B;AACxB;;;AAGA,QAAIP,wBAAwBxI,SAASC,gBAAT,CAC1B,0BAD0B,CAA5B;;AAIA,QAAIuI,sBAAsBvQ,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,WAAK,IAAI6R,IAAI,CAAb,EAAgBA,IAAItB,sBAAsBvQ,MAA1C,EAAkD6R,GAAlD,EAAuD;AACrD;;;;AAIA,YAAI5J,WAAWsI,sBAAsBsB,CAAtB,EAAyB3J,YAAzB,CACb,yBADa,CAAf;AAGA,YAAIC,OAAOoI,sBAAsBsB,CAAtB,EAAyB3J,YAAzB,CACT,2BADS,CAAX;;AAIA;;;AAGA,YAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC2J,8BAAoBvB,sBAAsBsB,CAAtB,CAApB;AACD;;AAED;;;;AAIA,YAAI5J,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC4J,gCAAsBxB,sBAAsBsB,CAAtB,CAAtB,EAAgD5J,QAAhD;AACD;;AAED;;;AAGA,YAAIA,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC6J,4BAAkBzB,sBAAsBsB,CAAtB,CAAlB,EAA4C1J,IAA5C;AACD;;AAED;;;;AAIA,YAAIF,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC8J,sCAA4B1B,sBAAsBsB,CAAtB,CAA5B,EAAsD5J,QAAtD,EAAgEE,IAAhE;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAAS2J,mBAAT,CAA6BnJ,OAA7B,EAAsC;AACpCA,YAAQuJ,KAAR,CAAcC,eAAd,GACE,SAAS5M,iBAAO/C,eAAP,CAAuB4P,aAAhC,GAAgD,GADlD;AAED;;AAED;;;;;;AAMA,WAASL,qBAAT,CAA+BpJ,OAA/B,EAAwCV,QAAxC,EAAkD;AAChD,QAAI1C,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtCU,cAAQuJ,KAAR,CAAcC,eAAd,GACE,SAAS5M,iBAAO/C,eAAP,CAAuB4P,aAAhC,GAAgD,GADlD;AAED;AACF;;AAED;;;;;;AAMA,WAASJ,iBAAT,CAA2BrJ,OAA3B,EAAoCR,IAApC,EAA0C;AACxC,QAAI5C,iBAAO7C,YAAP,IAAuByF,IAA3B,EAAiC;AAC/BQ,cAAQuJ,KAAR,CAAcC,eAAd,GACE,SAAS5M,iBAAO/C,eAAP,CAAuB4P,aAAhC,GAAgD,GADlD;AAED;AACF;;AAED;;;;;;AAMA,WAASH,2BAAT,CAAqCtJ,OAArC,EAA8CV,QAA9C,EAAwDE,IAAxD,EAA8D;AAC5D,QACE5C,iBAAO5C,eAAP,IAA0BsF,QAA1B,IACA1C,iBAAOxC,SAAP,CAAiBJ,eAAjB,EAAkCD,YAAlC,IAAkDyF,IAFpD,EAGE;AACAQ,cAAQuJ,KAAR,CAAcC,eAAd,GACE,SAAS5M,iBAAO/C,eAAP,CAAuB4P,aAAhC,GAAgD,GADlD;AAED;AACF;;AAED;;;AAGA,SAAO;AACL/R,SAAKA,GADA;AAELiF,UAAMA,IAFD;AAGLmM,cAAUA;AAHL,GAAP;AAKD,CAzfoB,EAArB;;AAXA;;;;kBAsgBepM,c;;;;;;;;;;;;;;ACxgBf;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;AAmBA,IAAIgN,aAAc,YAAW;AAC3B;;;;AAIA,MAAIC,iBAAiB,EAArB;;AAEA;;;;;;;;AAQA,WAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAClC;;;;AAIAF,qBAAiBE,UAAjB;;AAEA;;;AAGA,QAAIC,OAAO1K,SAAS2K,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAX;AACA,QAAIC,SAAS5K,SAAS6K,aAAT,CAAuB,QAAvB,CAAb;;AAEAD,WAAOE,IAAP,GAAc,iBAAd;;AAEA;;;AAGAF,WAAOzL,GAAP,GAAa,uCAAb;AACAyL,WAAOG,kBAAP,GAA4BC,cAA5B;AACAJ,WAAOK,MAAP,GAAgBD,cAAhB;;AAEA;;;AAGAN,SAAKQ,WAAL,CAAiBN,MAAjB;AACD;;AAED;;;;;AAKA,WAASI,cAAT,GAA0B;AACxB;;;;;AAKAG,OAAGpH,UAAH,CAAc;AACZqH,iBAAW5N,iBAAOzB;AADN,KAAd;;AAIA;;;;;;AAMAsP;AACD;;AAED;;;;;;;;AAQA,WAASA,iBAAT,GAA6B;AAC3B;;;AAGA,QAAIC,mBAAmB,4CAAvB;;AAEA,SAAK,IAAI3S,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOzC,KAAP,CAAa9C,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C;;;;;AAKA,UAAI6E,iBAAOzC,KAAP,CAAapC,CAAb,EAAgB0G,GAAhB,CAAoBkM,KAApB,CAA0BD,gBAA1B,CAAJ,EAAiD;AAC/C9N,yBAAOvB,qBAAP;AACAuP,0BAAkBhO,iBAAOzC,KAAP,CAAapC,CAAb,EAAgB0G,GAAlC,EAAuC1G,CAAvC;AACD;AACF;AACF;;AAED;;;;;;;;;AASA,WAAS8S,8BAAT,CACEpM,GADF,EAEEa,QAFF,EAGEoB,KAHF,EAKE;AAAA,QADAoK,gBACA,uEADmB,KACnB;;AACAP,OAAGQ,GAAH,CAAO,mBAAmBtM,GAA1B,EAA+B,UAASuM,KAAT,EAAgB;AAC7C;;;;;AAKA,UAAIA,MAAMC,UAAV,EAAsB;AACpB,YAAI3L,YAAY,IAAhB,EAAsB;AACpB1C,2BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,EAAwCjC,GAAxC,GACEuM,MAAME,UAAN,GAAmB,aAAnB,GAAmCtO,iBAAOzB,iBAD5C;;AAGA,cAAI2P,gBAAJ,EAAsB;AACpBlO,6BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwCgG,KAAxC,EAA+CjC,GAA/C,GACEuM,MAAME,UAAN,GAAmB,aAAnB,GAAmCtO,iBAAOzB,iBAD5C;AAED;AACD;;;;AAIA,cAAIyB,iBAAOxB,kBAAX,EAA+B;AAC7BwB,6BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,EAAwC+I,aAAxC,GACEuB,MAAMG,WADR;;AAGA,gBAAIL,gBAAJ,EAAsB;AACpBlO,+BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwCgG,KAAxC,EAA+C+I,aAA/C,GACEuB,MAAMG,WADR;AAED;AACF;;AAED;;;;;AAKAvO,2BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,EAAwC0K,eAAxC,GAA0DJ,KAA1D;;AAEA,cAAIF,gBAAJ,EAAsB;AACpBlO,6BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CACEgG,KADF,EAEE0K,eAFF,GAEoBJ,KAFpB;AAGD;AACF,SAlCD,MAkCO;AACLpO,2BAAOzC,KAAP,CAAauG,KAAb,EAAoBjC,GAApB,GACEuM,MAAME,UAAN,GAAmB,aAAnB,GAAmCtO,iBAAOzB,iBAD5C;;AAGA,cAAI2P,gBAAJ,EAAsB;AACpBlO,6BAAOlC,YAAP,CAAoBgG,KAApB,EAA2BwK,UAA3B,GACE,aADF,GAEEtO,iBAAOzB,iBAFT;AAGD;;AAED;;;;AAIA,cAAIyB,iBAAOxB,kBAAX,EAA+B;AAC7BwB,6BAAOzC,KAAP,CAAauG,KAAb,EAAoB+I,aAApB,GAAoCuB,MAAMG,WAA1C;;AAEA,gBAAIL,gBAAJ,EAAsB;AACpBlO,+BAAOlC,YAAP,CAAoBgG,KAApB,EAA2B+I,aAA3B,GAA2CuB,MAAMG,WAAjD;AACD;AACF;;AAED;;;;;AAKAvO,2BAAOzC,KAAP,CAAauG,KAAb,EAAoB0K,eAApB,GAAsCJ,KAAtC;;AAEA,cAAIF,gBAAJ,EAAsB;AACpBlO,6BAAOlC,YAAP,CAAoBgG,KAApB,EAA2B0K,eAA3B,GAA6CJ,KAA7C;AACD;AACF;AACF,OApED,MAoEO;AACL,YAAI1L,YAAY,IAAhB,EAAsB;AACpB+L,2BAAiBC,iBAAjB,CACE1O,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,EAAwCrH,IAAxC,GACE,MADF,GAEEuD,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,EAAwC6K,MAF1C,GAGE,0CAJJ;AAMD,SAPD,MAOO;AACL;;;;;AAKAF,2BAAiBC,iBAAjB,CACE1O,iBAAOzC,KAAP,CAAauG,KAAb,EAAoBrH,IAApB,GACE,MADF,GAEEuD,iBAAOzC,KAAP,CAAauG,KAAb,EAAoB6K,MAFtB,GAGE,0CAJJ;AAMD;AACF;AACF,KAhGD;AAiGD;;AAED;;;;;;;;;AASA,WAASX,iBAAT,CAA2BnM,GAA3B,EAAgCiC,KAAhC,EAAuC;AACrC6J,OAAGQ,GAAH,CAAO,mBAAmBtM,GAA1B,EAA+B,UAASuM,KAAT,EAAgB;AAC7C;;;;;AAKA,UAAIA,MAAMC,UAAV,EAAsB;AACpBrO,yBAAOzC,KAAP,CAAauG,KAAb,EAAoBjC,GAApB,GACEuM,MAAME,UAAN,GAAmB,aAAnB,GAAmCtO,iBAAOzB,iBAD5C;;AAGA;;;;AAIA,YAAIyB,iBAAOxB,kBAAX,EAA+B;AAC7BwB,2BAAOzC,KAAP,CAAauG,KAAb,EAAoB+I,aAApB,GAAoCuB,MAAMG,WAA1C;AACD;;AAED;;;;;AAKAvO,yBAAOzC,KAAP,CAAauG,KAAb,EAAoB0K,eAApB,GAAsCJ,KAAtC;AACD,OAlBD,MAkBO;AACL;;;;;AAKAK,yBAAiBC,iBAAjB,CACE1O,iBAAOzC,KAAP,CAAauG,KAAb,EAAoBrH,IAApB,GACE,MADF,GAEEuD,iBAAOzC,KAAP,CAAauG,KAAb,EAAoB6K,MAFtB,GAGE,0CAJJ;AAMD;AACD;;;AAGA3O,uBAAOtB,sBAAP;;AAEA;;;;AAIA,UAAIsB,iBAAOtB,sBAAP,IAAiCsB,iBAAOvB,qBAA5C,EAAmE;AACjEmQ,uBAAqBC,SAArB,CAA+B9B,cAA/B;AACD;AACF,KAjDD;AAkDD;;AAED;;;;;AAKA,WAAS+B,eAAT,CAAyBjN,GAAzB,EAA8B;AAC5B,QAAIiM,mBAAmB,4CAAvB;;AAEA,WAAOjM,IAAIkM,KAAJ,CAAUD,gBAAV,CAAP;AACD;;AAED;;;AAGA,SAAO;AACLd,oBAAgBA,cADX;AAELiB,oCAAgCA,8BAF3B;AAGLa,qBAAiBA;AAHZ,GAAP;AAKD,CAjSgB,EAAjB;;AAbA;;;;kBAgTehC,U;;;;;;;;;;;;;;AClTf;;;;;;AAEA;;;;AAIA,IAAIiC,wBAAyB,YAAW;AACtC;;;;;;;AAOA,WAAS9M,IAAT,GAAgB;AACd;;;AAGA,QAAI+M,uBAAuBxM,SAASkF,sBAAT,CACzB,0BADyB,CAA3B;;AAIA;;;;AAIA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI6T,qBAAqBvU,MAAzC,EAAiDU,GAAjD,EAAsD;AACpD;;;AAGA6T,2BAAqB7T,CAArB,EAAwBkI,SAAxB,CAAkCE,MAAlC,CAAyC,6BAAzC;AACAyL,2BAAqB7T,CAArB,EAAwBkI,SAAxB,CAAkCE,MAAlC,CAAyC,6BAAzC;AACAyL,2BAAqB7T,CAArB,EAAwBkI,SAAxB,CAAkCE,MAAlC,CAAyC,6BAAzC;;AAEA;;;;AAIA,cAAQvD,iBAAO3C,cAAf;AACE,aAAK,CAAL;AACE2R,+BAAqB7T,CAArB,EAAwBkI,SAAxB,CAAkCC,GAAlC,CAAsC,6BAAtC;AACA;AACF,aAAK,GAAL;AACE0L,+BAAqB7T,CAArB,EAAwBkI,SAAxB,CAAkCC,GAAlC,CAAsC,6BAAtC;AACA;AACF,aAAK,CAAL;AACE0L,+BAAqB7T,CAArB,EAAwBkI,SAAxB,CAAkCC,GAAlC,CAAsC,6BAAtC;AACA;AATJ;AAWD;AACF;;AAED;;;AAGA,SAAO;AACLrB,UAAMA;AADD,GAAP;AAGD,CApD2B,EAA5B,C,CAVA;;;;kBAgEe8M,qB;;;;;;;;;;;;;;AC5Df;;;;;;AAEA;;;;AAIA,IAAIE,kBAAmB,YAAW;AAChC;;;;;AAKA,WAASvF,QAAT,GAAoB;AAClB;;;AAGA,QAAIwF,iBAAiB1M,SAASkF,sBAAT,CAAgC,mBAAhC,CAArB;;AAEA;;;AAGA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI+T,eAAezU,MAAnC,EAA2CU,GAA3C,EAAgD;AAC9C;;;;AAIA,UAAI+T,eAAe/T,CAAf,EAAkBwH,YAAlB,CAA+B,yBAA/B,KAA6D,IAAjE,EAAuE;AACrE;;;;;;AAMA,YAAI3C,iBAAOjC,UAAX,EAAuB;AACrBmR,yBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,sBAAhC;AACA4L,yBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BE,MAA5B,CAAmC,uBAAnC;AACD,SAHD,MAGO;AACL2L,yBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,uBAAhC;AACA4L,yBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BE,MAA5B,CAAmC,sBAAnC;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASpB,YAAT,CAAsBO,QAAtB,EAAgC;AAC9B;;;AAGA,QAAIwM,iBAAiB1M,SAASC,gBAAT,CACnB,iDAAiDC,QAAjD,GAA4D,IADzC,CAArB;;AAIA;;;AAGA,SAAK,IAAIvH,IAAI,CAAb,EAAgBA,IAAI+T,eAAezU,MAAnC,EAA2CU,GAA3C,EAAgD;AAC9C;;;;;;AAMA,UAAI6E,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtCgL,uBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,sBAAhC;AACA4L,uBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BE,MAA5B,CAAmC,uBAAnC;AACD,OAHD,MAGO;AACL2L,uBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,uBAAhC;AACA4L,uBAAe/T,CAAf,EAAkBkI,SAAlB,CAA4BE,MAA5B,CAAmC,sBAAnC;AACD;AACF;AACF;;AAED;;;AAGA,SAAO;AACLmG,cAAUA,QADL;AAELvH,kBAAcA;AAFT,GAAP;AAID,CA/EqB,EAAtB,C,CAVA;;;;kBA2Fe8M,e;;;;;;;;;;;;;;ACvFf;;;;;;AAEA;;;;;AAKA,IAAInK,6BAA8B,YAAW;AAC3C;;;;;;AAMA,WAAS7C,IAAT,CAAckN,oBAAd,EAAoC;AAClCjN,eAAWiN,oBAAX;AACAhN,iBAAagN,oBAAb;AACA/M,aAAS+M,oBAAT;AACA9M,uBAAmB8M,oBAAnB;AACD;;AAED;;;;;;AAMA,WAASjN,UAAT,CAAoBkN,UAApB,EAAgC;AAC9B;;;AAGA,QAAI,CAAClJ,MAAMkJ,UAAN,CAAL,EAAwB;AACtB;;;AAGA,UAAIC,yBAAyB7M,SAASC,gBAAT,CAC3B,iCAD2B,CAA7B;;AAIA,WAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIkU,uBAAuB5U,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,YAAIuH,WAAW2M,uBAAuBlU,CAAvB,EAA0BwH,YAA1B,CACb,yBADa,CAAf;AAGA,YAAIiD,YAAYyJ,uBAAuBlU,CAAvB,EAA0BwH,YAA1B,CACd,2BADc,CAAhB;;AAIA,YAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzC,cAAI0J,MAAMD,uBAAuBlU,CAAvB,EAA0BmU,GAApC;;AAEAD,iCAAuBlU,CAAvB,EAA0BiN,KAA1B,GAAmCgH,aAAa,GAAd,GAAqBE,GAAvD;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASnN,YAAT,CAAsBiN,UAAtB,EAAkC;AAChC;;;AAGA,QAAI,CAAClJ,MAAMkJ,UAAN,CAAL,EAAwB;AACtB;;;AAGA,UAAIC,yBAAyB7M,SAASC,gBAAT,CAC3B,8DACEzC,iBAAO5C,eADT,GAEE,IAHyB,CAA7B;;AAMA,WAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIkU,uBAAuB5U,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,YAAIyH,OAAOyM,uBAAuBlU,CAAvB,EAA0BwH,YAA1B,CACT,2BADS,CAAX;;AAIA,YAAIC,QAAQ,IAAZ,EAAkB;AAChB,cAAI0M,MAAMD,uBAAuBlU,CAAvB,EAA0BmU,GAApC;;AAEAD,iCAAuBlU,CAAvB,EAA0BiN,KAA1B,GAAmCgH,aAAa,GAAd,GAAqBE,GAAvD;AACD;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASlN,QAAT,CAAkBgN,UAAlB,EAA8B;AAC5B,QAAIpP,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC;;;AAGA,UAAI,CAAC8I,MAAMkJ,UAAN,CAAL,EAAwB;AACtB;;;AAGA,YAAIC,yBAAyB7M,SAASC,gBAAT,CAC3B,gEACEzC,iBAAO7C,YADT,GAEE,IAHyB,CAA7B;;AAMA,aAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAIkU,uBAAuB5U,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,cAAIuH,WAAW2M,uBAAuBlU,CAAvB,EAA0BwH,YAA1B,CACb,yBADa,CAAf;;AAIA,cAAID,YAAY,IAAhB,EAAsB;AACpB,gBAAI4M,MAAMD,uBAAuBlU,CAAvB,EAA0BmU,GAApC;;AAEAD,mCAAuBlU,CAAvB,EAA0BiN,KAA1B,GAAmCgH,aAAa,GAAd,GAAqBE,GAAvD;AACD;AACF;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASjN,kBAAT,CAA4B+M,UAA5B,EAAwC;AACtC;;;AAGA,QAAI,CAAClJ,MAAMkJ,UAAN,CAAL,EAAwB;AACtB,UAAInM,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA;;;AAGA,UAAIkS,yBAAyB7M,SAASC,gBAAT,CAC3B,8DACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALyB,CAA7B;;AAQA;;;;AAIA,WAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAIkU,uBAAuB5U,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,YAAIuH,WAAW2M,uBAAuBlU,CAAvB,EAA0BwH,YAA1B,CACb,yBADa,CAAf;AAGA,YAAIiD,YAAYyJ,uBAAuBlU,CAAvB,EAA0BwH,YAA1B,CACd,2BADc,CAAhB;;AAIA,YAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzC,cAAI0J,MAAMD,uBAAuBlU,CAAvB,EAA0BmU,GAApC;;AAEAD,iCAAuBlU,CAAvB,EAA0BiN,KAA1B,GAAmCgH,aAAa,GAAd,GAAqBE,GAAvD;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASzK,aAAT,GAAyB;AACvB,QAAIwK,yBAAyB7M,SAASkF,sBAAT,CAC3B,gCAD2B,CAA7B;;AAIA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIkU,uBAAuB5U,MAA3C,EAAmDU,GAAnD,EAAwD;AACtDkU,6BAAuBlU,CAAvB,EAA0BiN,KAA1B,GAAkC,CAAlC;AACD;AACF;;AAED,SAAO;AACLnG,UAAMA,IADD;AAEL4C,mBAAeA;AAFV,GAAP;AAID,CA1LgC,EAAjC,C,CAXA;;;;kBAuMeC,0B;;;;;;;;;;;;;;8QCvMf;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;AAGA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AA7HA;;;;AAMA;;;;AAMA;;;;AASA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAMA,IAAIyK,cAAe,YAAW;AAC5B;;;;;;;;AAQA,WAAShJ,UAAT,CAAoB0G,UAApB,EAAgC;AAC9B,QAAIuC,QAAQ,KAAZ;;AAEA;;;;AAIApJ,0BAAYC,WAAZ;;AAEA;;;;;AAKAoJ,qBAAOlJ,UAAP;;AAEA;;;AAGAxF,wBAAUwF,UAAV;;AAEA;;;;AAIAvG,qBAAO9B,KAAP,GAAe+O,WAAW/O,KAAX,IAAoBsC,SAApB,GAAgCyM,WAAW/O,KAA3C,GAAmD,KAAlE;;AAEA;;;AAGAwR,WAAOzC,UAAP;;AAEA;;;AAGA,QAAIA,WAAW1P,KAAf,EAAsB;AACpB;;;AAGA,UAAI0P,WAAW1P,KAAX,CAAiB9C,MAAjB,IAA2B,CAA/B,EAAkC;AAChC;;;;AAIAuF,yBAAOzC,KAAP,GAAe0P,WAAW1P,KAA1B;AACA;;;AAGAiS,gBAAQ,IAAR;AACD,OAVD,MAUO;AACL/N,wBAAMC,YAAN,CAAmB,8CAAnB;AACD;AACF,KAjBD,MAiBO;AACLD,sBAAMC,YAAN,CACE,uDADF;AAGD;;AAED;;;;AAIA,QAAIiO,aAAGC,oBAAH,EAAJ,EAA+B;AAC7B,UAAID,aAAGE,mBAAH,EAAJ,EAA8B;AAC5B;;;AAGAF,qBAAGG,oBAAH;;AAEA;;;AAGAtN,iBAASuN,eAAT,CAAyBvO,gBAAzB,CACE,WADF,EACe,YAAU;AACrB,cAAIxB,iBAAOd,OAAP,CAAeoD,KAAf,KAAyB,SAA7B,EAAwC;AACtCtC,6BAAOd,OAAP,CAAe8Q,MAAf;AACD;AACF,SALH;;AAOExN,iBAASuN,eAAT,CAAyBvO,gBAAzB,CACA,SADA,EACW,YAAU;AACnB,cAAIxB,iBAAOd,OAAP,CAAeoD,KAAf,KAAyB,SAA7B,EAAwC;AACtCtC,6BAAOd,OAAP,CAAe8Q,MAAf;AACD;AACF,SALD;;AAOAxN,iBAASuN,eAAT,CAAyBvO,gBAAzB,CACE,OADF,EACW,YAAU;AACjB,cAAIxB,iBAAOd,OAAP,CAAeoD,KAAf,KAAyB,SAA7B,EAAwC;AACtCtC,6BAAOd,OAAP,CAAe8Q,MAAf;AACD;AACJ,SALD;;AASA;;;AAGA,YACE/C,WAAWxN,SAAX,IAAwBe,SAAxB,IACAyM,WAAWxN,SAAX,CAAqBC,WAArB,IAAoCc,SAFtC,EAGE;AACAR,2BAAOP,SAAP,CAAiBC,WAAjB,GAA+BuN,WAAWxN,SAAX,CAAqBC,WAApD;AACD;;AAED;;;AAGAuQ,2BAASC,IAAT;;AAEA;;;;AAIA,YACEjD,WAAW5N,cAAX,IAA6BmB,SAA7B,IACAyM,WAAW5N,cAAX,CAA0B5E,MAA1B,GAAmC,CAFrC,EAGE;AACA;;;;AAIA,eAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAI8R,WAAW5N,cAAX,CAA0B5E,MAA9C,EAAsDU,GAAtD,EAA2D;AACzD2E,qCAAeoM,QAAf,CACEe,WAAW5N,cAAX,CAA0BlE,CAA1B,EAA6BgV,MAD/B,EAEElD,WAAW5N,cAAX,CAA0BlE,CAA1B,EAA6BiV,MAF/B;AAID;AACF;AACJ;AACF,KApED,MAoEO;AACL3O,sBAAMC,YAAN,CACE,yFADF;AAGD;;AAED;;;AAGA2O;;AAEA;;;AAGAC;;AAEA;;;AAGA,QAAId,KAAJ,EAAW;AACT;;;;AAIAxP,uBAAOzB,iBAAP,GACE0O,WAAW1O,iBAAX,IAAgCiC,SAAhC,GACIyM,WAAW1O,iBADf,GAEI,EAHN;;AAKA;;;AAGAyB,uBAAOxB,kBAAP,GACEyO,WAAWzO,kBAAX,IAAiCgC,SAAjC,GACIyM,WAAWzO,kBADf,GAEI,EAHN;;AAKA;;;;;;;AAOA,UAAIuO,iBAAiB,EAArB;;AAEA;;;;AAIA,UAAI/M,iBAAOzB,iBAAP,IAA4B,EAAhC,EAAoC;AAClCwO,yBAAiBE,UAAjB;;AAEA;;;AAGAH,6BAAWE,cAAX,CAA0BD,cAA1B;AACD,OAPD,MAOO;AACL;;;;AAIA8B,kBAAU5B,UAAV;AACD;AACF;;AAED;;;AAGAxL,oBAAMC,YAAN,CAAmB,oBAAnB;AACAD,oBAAMC,YAAN,CAAmB1B,gBAAnB;AACD;;AAED;;;;;;AAMA,WAASuQ,aAAT,GAAyB;AACvBd,qBAAOlJ,UAAP;AACApB,+BAAiBC,eAAjB;AACD;;AAED;;;;;;;;;;;;;;;;AAgBA,WAASyJ,SAAT,CAAmB5B,UAAnB,EAA+B;AAC7B;;;;AAIA,QAAIA,WAAWzP,SAAX,IAAwBgT,eAAevD,WAAWzP,SAA1B,IAAuC,CAAnE,EAAsE;AACpEiT,0BAAqBlK,UAArB,CAAgC0G,WAAWzP,SAA3C;AACD;;AAED;;;AAGA,QAAIyP,WAAWxP,UAAX,IAAyB+C,SAAzB,IAAsCyM,WAAWvP,iBAArD,EAAwE;AACtE;;;AAGA,UAAIuH,iBAAOe,KAAP,CAAaiH,WAAWxP,UAAxB,CAAJ,EAAyC;AACvC+F,kCAAgBQ,UAAhB,CACEhE,iBAAOzC,KAAP,CAAa0P,WAAWxP,UAAxB,CADF,EAEEwP,WAAWxP,UAFb;AAID,OALD,MAKO;AACLgE,wBAAMC,YAAN,CACE,qDADF;AAGD;AACF,KAdD,MAcO;AACL8B,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAa,CAAb,CAA3B,EAA4C,CAA5C;AACD;;AAED;;;;AAIA,QAAI0P,WAAWlP,UAAX,IAAyByC,SAAzB,IAAsCyM,WAAWlP,UAArD,EAAiE;AAC/DiC,uBAAOjC,UAAP,GAAoB,IAApB;AACA0K,yBAASE,YAAT;;AAEAnF,gCAAgBQ,UAAhB,CAA2BhE,iBAAOlC,YAAP,CAAoB,CAApB,CAA3B,EAAmD,CAAnD;AACD;;AAED;;;;;AAKAkC,qBAAOlB,aAAP,GACEmO,WAAWnO,aAAX,IAA4B0B,SAA5B,GAAwCyM,WAAWnO,aAAnD,GAAmE,IADrE;;AAGA;;;;;AAKAkB,qBAAO3C,cAAP,GACE4P,WAAW5P,cAAX,IAA6BmD,SAA7B,GAAyCyM,WAAW5P,cAApD,GAAqE,GADvE;;AAGA;;;AAGAuC,mBAAKkC,gBAAL,CAAsB9B,iBAAO3C,cAA7B;;AAEA;;;;;AAKA2C,qBAAOjD,KAAP,CAAa2T,OAAb,GACEzD,WAAWyD,OAAX,IAAsBlQ,SAAtB,GAAkCyM,WAAWyD,OAA7C,GAAuD,MADzD;;AAGA;;;;;AAKA1Q,qBAAO1C,SAAP,GACE2P,WAAW3P,SAAX,IAAwBkD,SAAxB,GAAoCyM,WAAW3P,SAA/C,GAA2D,EAD7D;;AAGA;;;;;AAKA0C,qBAAOnB,QAAP,GACEoO,WAAWpO,QAAX,IAAuB2B,SAAvB,GAAmCyM,WAAWpO,QAA9C,GAAyD,EAD3D;;AAGA;;;;;;AAMAmB,qBAAO7B,MAAP,GAAgB8O,WAAW9O,MAAX,IAAqBqC,SAArB,GAAiCyM,WAAW9O,MAA5C,GAAqD,EAArE;;AAEA;;;AAGA6B,qBAAOjB,KAAP,GAAekO,WAAWlO,KAAX,IAAoByB,SAApB,GAAgCyM,WAAWlO,KAA3C,GAAmD,CAAlE;;AAEA;;;;;AAKAiB,qBAAO3B,gBAAP,GACE4O,WAAW5O,gBAAX,IAA+BmC,SAA/B,GACIyM,WAAW5O,gBADf,GAEI,CAHN;;AAKA2B,qBAAO1B,gBAAP,GACE2O,WAAW3O,gBAAX,IAA+BkC,SAA/B,GACIyM,WAAW3O,gBADf,GAEI,CAHN;;AAKA;;;;AAIAsB,mBAAKoB,SAAL,CAAehB,iBAAO7B,MAAtB;;AAEA;;;AAGAuR,WAAOzC,UAAP;;AAEA;;;AAGA0D;;AAEA;;;;AAIA,QACE1D,WAAWvP,iBAAX,IAAgC8C,SAAhC,IACAyM,WAAWvP,iBAAX,IAAgC,EAFlC,EAGE;AACA;;;AAGAsC,uBAAO5C,eAAP,GAAyB6P,WAAWvP,iBAApC;;AAEA;;;AAGA,UACEuP,WAAWtP,sBAAX,IAAqC6C,SAArC,IACAyM,WAAWtP,sBAAX,IAAqC,EAFvC,EAGE;AACA;;;AAGA,YACE,QAAOsP,WAAWzP,SAAX,CAAqByP,WAAWvP,iBAAhC,EAAmDH,KAAnD,CACLwG,SAASkJ,WAAWtP,sBAApB,CADK,CAAP,KAEK6C,SAHP,EAIE;AACA;;;AAGAgD,oCAAgBY,kBAAhB,CACEpE,iBAAO5C,eADT,EAEE6P,WAAWzP,SAAX,CAAqByP,WAAWvP,iBAAhC,EAAmDH,KAAnD,CACEwG,SAASkJ,WAAWtP,sBAApB,CADF,CAFF,EAKEoG,SAASkJ,WAAWtP,sBAApB,CALF;AAOD,SAfD,MAeO;AACL;;;AAGA6F,oCAAgBY,kBAAhB,CACEpE,iBAAO5C,eADT,EAEE6P,WAAWzP,SAAX,CAAqByP,WAAWvP,iBAAhC,EAAmDH,KAAnD,CAAyD,CAAzD,CAFF,EAGE,CAHF;AAKA;;;AAGAkE,0BAAMC,YAAN,CACE,kBACEuL,WAAWtP,sBADb,GAEE,kCAFF,GAGEsP,WAAWvP,iBAJf;AAMD;AACF,OAzCD,MAyCO;AACL;;;AAGA8F,kCAAgBQ,UAAhB,CACEhE,iBAAO5C,eADT,EAEE6P,WAAWzP,SAAX,CAAqByP,WAAWvP,iBAAhC,EAAmDH,KAAnD,CAAyD,CAAzD,CAFF,EAGE,CAHF;AAKD;;AAED;;;AAGAyE,kCAAkBC,IAAlB;AACD;;AAED;;;AAGAlB,wBAAUjG,GAAV,CAAc,aAAd;AACD;;AAED;;;;;;;AAOA,WAAS4U,MAAT,CAAgBzC,UAAhB,EAA2B;AACzB;;;;AAIA,QAAIA,WAAWjP,iBAAX,IAAgCwC,SAApC,EAA+C;AAC7CR,uBAAOhC,iBAAP,GAA2BiP,WAAWjP,iBAAtC;AACD,KAFD,MAEO;AACLgC,uBAAOhC,iBAAP,GAA2B,EAA3B;AACD;;AAED;;;;AAIA,QAAIiP,WAAWhP,oBAAX,IAAmCuC,SAAvC,EAAkD;AAChDR,uBAAO/B,oBAAP,GAA8BgP,WAAWhP,oBAAzC;AACD,KAFD,MAEO;AACL+B,uBAAO/B,oBAAP,GAA8B,EAA9B;AACD;AACF;;AAED;;;;;;AAMA,WAAS0S,kBAAT,GAA8B;AAC5B;;;AAGA1B,8BAAgBvF,QAAhB;;AAEA;;;AAGA3B,2BAAaC,QAAb,CAAsBhI,iBAAO7B,MAAP,IAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAAlD;;AAEA;;;AAGA+J,mCAAqBjG,IAArB;;AAEA;;;AAGA8M,oCAAsB9M,IAAtB;;AAEA;;;AAGA8C,2BAAaC,iBAAb;;AAEA;;;AAGAhD,gCAAkBmB,WAAlB;;AAEA;;;AAGAgC,+BAAiBmC,YAAjB;;AAEA;;;AAGAC,6BAAeM,cAAf;AACD;;AAED;;;;;;;;;AASA,WAAS2I,cAAT,CAAwBhT,SAAxB,EAAmC;AACjC;;;;AAIA,QAAIoT,OAAO,CAAX;AAAA,QACE9E,YADF;;AAGA;;;;AAIA,SAAKA,GAAL,IAAYtO,SAAZ,EAAuB;AACrB,UAAIA,UAAUqT,cAAV,CAAyB/E,GAAzB,CAAJ,EAAmC;AACjC8E;AACD;AACF;;AAED;;;AAGAnP,oBAAMC,YAAN,CAAmB,cAAckP,IAAd,GAAqB,6BAAxC;;AAEA;;;AAGA,WAAOA,IAAP;AACD;;AAED;;;;;AAKA,WAASP,6BAAT,GAAyC;AACvC,SAAK,IAAIlV,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOzC,KAAP,CAAa9C,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C,UAAI6E,iBAAOzC,KAAP,CAAapC,CAAb,EAAgB8E,IAAhB,IAAwBO,SAA5B,EAAuC;AACrCR,yBAAOzC,KAAP,CAAapC,CAAb,EAAgB8E,IAAhB,GAAuB,KAAvB;AACD;AACF;AACF;;AAED;;;;;;AAMA,WAASqQ,4BAAT,GAAuC;AACrC,SAAK,IAAInV,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOzC,KAAP,CAAa9C,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C6E,uBAAOzC,KAAP,CAAapC,CAAb,EAAgB2I,KAAhB,GAAwB3I,CAAxB;AACD;AACF;;AAGD;;;AAGA,SAAO;AACLoL,gBAAYA,UADP;AAELsI,eAAWA,SAFN;AAGL0B,mBAAeA;AAHV,GAAP;AAKD,CAtlBiB,EAAlB;;kBAwlBehB,W;;;;;;;;;;;;;;ACjuBf;;;;;;AAEA;;;;;AAKA,IAAIU,WAAY,YAAW;AACzB;;;AAGA,MAAIa,SAAS,EAAb;AACA,MAAIC,aAAa/Q,iBAAOP,SAAP,CAAiBC,WAAlC;AACA,MAAIsR,QAAQ,EAAZ;;AAEA,WAASd,IAAT,GAAgB;AACd;;;AAGA,QAAIzQ,YAAY+C,SAASC,gBAAT,CAA0B,sBAA1B,CAAhB;;AAEA;;;;AAIA,QAAIhD,UAAUhF,MAAV,GAAmB,CAAvB,EAA0B;AACxB;;;AAGA,WAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAIsE,UAAUhF,MAA9B,EAAsCU,GAAtC,EAA2C;AACzC;;;AAGAsE,kBAAUtE,CAAV,EAAa8L,SAAb,GAAyB,EAAzB;;AAEA;;;AAGA,YAAIgK,MAAMzO,SAAS0O,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAV;AACAD,YAAIjK,YAAJ,CAAiB,SAAjB,EAA4B,UAAU+J,UAAV,GAAuB,IAAnD;AACAE,YAAIjK,YAAJ,CAAiB,qBAAjB,EAAwC,MAAxC;;AAEA;;;AAGA,YAAImK,IAAI3O,SAAS0O,eAAT,CAAyB,4BAAzB,EAAuD,GAAvD,CAAR;AACAD,YAAIvD,WAAJ,CAAgByD,CAAhB;;AAEA;;;AAGA,YAAIC,OAAO5O,SAAS0O,eAAT,CACT,4BADS,EAET,MAFS,CAAX;AAIAE,aAAKpK,YAAL,CAAkB,GAAlB,EAAuB,EAAvB;AACAoK,aAAKpK,YAAL,CAAkB,IAAlB,EAAwB,UAAxB;;AAEAmK,UAAEzD,WAAF,CAAc0D,IAAd;;AAEA;;;AAGA3R,kBAAUtE,CAAV,EAAauS,WAAb,CAAyBuD,GAAzB;AACD;AACF;AACF;;AAED;;;AAGA,WAASI,KAAT,GAAiB;AACf,QAAIrR,iBAAOf,uBAAX,EAAoC;AAClC;;;;AAIA,UACEe,iBAAOP,SAAP,CAAiBE,KAAjB,CACEuJ,KAAKoI,GAAL,CACEtR,iBAAOjD,KAAP,CAAa4E,GAAb,CAAiB4P,KAAjB,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC/CD,YAAI,CAACA,KAAK,CAAN,IAAWA,CAAX,GAAeC,EAAEC,UAAF,CAAa,CAAb,CAAnB;AACA,eAAOF,IAAIA,CAAX;AACD,OAHD,EAGG,CAHH,CADF,CADF,KAOKjR,SARP,EASE;AACA;;;AAGA,YAAIoR,MAAM,IAAIC,cAAJ,EAAV;;AAEA;;;AAGAD,YAAIE,IAAJ,CAAS,KAAT,EAAgB9R,iBAAOjD,KAAP,CAAa4E,GAA7B,EAAkC,IAAlC;AACAiQ,YAAIG,YAAJ,GAAmB,aAAnB;;AAEA;;;;AAIAH,YAAIrE,kBAAJ,GAAyB,UAAS1T,CAAT,EAAY;AACnC;;;;AAIA,cAAI+X,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACvB;;;;AAIA,gBAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAuB;AACrB;;;AAGAjS,+BAAOd,OAAP,CAAegT,eAAf,CAA+BN,IAAIO,QAAnC,EAA6C,UAC3CC,aAD2C,EAE3C;AACA;;;AAGAtB,yBAASsB,aAAT;;AAEA;;;AAGApB,wBAAQqB,SAAStB,UAAT,EAAqBD,MAArB,CAAR;;AAEA;;;AAGA1X,wBAAQ2X,UAAR,EAAoBD,MAApB,EAA4BE,KAA5B;AACD,eAjBD;AAkBD;AACF;AACF,SAlCD;AAmCAY,YAAIU,IAAJ;AACD,OA7DD,MA6DO;AACL;;;;;AAKAC,yBACEvS,iBAAOP,SAAP,CAAiBE,KAAjB,CACEuJ,KAAKoI,GAAL,CACEtR,iBAAOjD,KAAP,CAAa4E,GAAb,CAAiB4P,KAAjB,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC/CD,cAAI,CAACA,KAAK,CAAN,IAAWA,CAAX,GAAeC,EAAEC,UAAF,CAAa,CAAb,CAAnB;AACA,iBAAOF,IAAIA,CAAX;AACD,SAHD,EAGG,CAHH,CADF,CADF,CADF;AAUD;AACF;AACF;;AAED;;;;;;;AAOA,WAASrY,OAAT,CAAiB2X,UAAjB,EAA6BD,MAA7B,EAAqCE,KAArC,EAA4C;AAC1C;;;AAGA,QAAIF,MAAJ,EAAY;AACV;;;AAGA,UAAI0B,aAAaxB,MAAMvW,MAAvB;;AAEA;;;AAGA,UAAIgY,IAAI,EAAR;AACA,WAAK,IAAIC,aAAa,CAAtB,EAAyBA,aAAaF,UAAtC,EAAkDE,YAAlD,EAAgE;AAC9D,YAAIA,aAAa,CAAb,KAAmB,CAAvB,EAA0B;AACxBD,sBAAU,CAAC,EAAEC,aAAa,CAAf,CAAX,UAAiC1B,MAAM2B,KAAN,EAAjC;AACD,SAFD,MAEO;AACLF,sBAAU,CAAC,EAAEC,aAAa,CAAf,CAAX,UAAiC1B,MAAM2B,KAAN,EAAjC;AACD;AACF;;AAED;;;AAGA3S,uBAAOP,SAAP,CAAiBE,KAAjB,CACEuJ,KAAKoI,GAAL,CACEtR,iBAAOjD,KAAP,CAAa4E,GAAb,CAAiB4P,KAAjB,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC/CD,YAAI,CAACA,KAAK,CAAN,IAAWA,CAAX,GAAeC,EAAEC,UAAF,CAAa,CAAb,CAAnB;AACA,eAAOF,IAAIA,CAAX;AACD,OAHD,EAGG,CAHH,CADF,CADF,IAOIgB,CAPJ;;AASA;;;AAGAF,uBACEvS,iBAAOP,SAAP,CAAiBE,KAAjB,CACEuJ,KAAKoI,GAAL,CACEtR,iBAAOjD,KAAP,CAAa4E,GAAb,CAAiB4P,KAAjB,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC/CD,YAAI,CAACA,KAAK,CAAN,IAAWA,CAAX,GAAeC,EAAEC,UAAF,CAAa,CAAb,CAAnB;AACA,eAAOF,IAAIA,CAAX;AACD,OAHD,EAGG,CAHH,CADF,CADF,CADF;AAUD;AACF;;AAED;;;;;;AAMA,WAASY,QAAT,CAAkB5X,MAAlB,EAA0BqW,MAA1B,EAAkC;AAChC;;;AAGA,QAAM8B,aAAa9B,OAAOrW,MAAP,GAAgBA,MAAnC;AACA,QAAMoY,aAAa,CAAC,EAAED,aAAa,EAAf,CAAD,IAAuB,CAA1C;AACA,QAAME,mBAAmBhC,OAAOgC,gBAAhC;AACA,QAAMC,cAAc,EAApB;;AAEA;;;AAGA,SACE,IAAIC,gBAAgB,CADtB,EAEEA,gBAAgBF,gBAFlB,EAGEE,eAHF,EAIE;AACA;;;;AAIA,UAAMhC,SAAQ,EAAd;AACA,UAAMiC,cAAcnC,OAAOoC,cAAP,CAAsBF,aAAtB,CAApB;;AAEA;;;AAGA,WAAK,IAAIN,aAAa,CAAtB,EAAyBA,aAAajY,MAAtC,EAA8CiY,YAA9C,EAA4D;AAC1D;;;AAGA,YAAMS,QAAQ,CAAC,EAAET,aAAaE,UAAf,CAAf;AACA,YAAMQ,MAAM,CAAC,EAAED,QAAQP,UAAV,CAAb;;AAEA;;;AAGA,YAAIS,MAAMJ,YAAY,CAAZ,CAAV;AACA,YAAI3D,MAAM2D,YAAY,CAAZ,CAAV;;AAEA;;;;AAIA,aACE,IAAIK,cAAcH,KADpB,EAEEG,cAAcF,GAFhB,EAGEE,eAAeT,UAHjB,EAIE;AACA,cAAMzK,QAAQ6K,YAAYK,WAAZ,CAAd;;AAEA,cAAIlL,QAAQkH,GAAZ,EAAiB;AACfA,kBAAMlH,KAAN;AACD;AACD,cAAIA,QAAQiL,GAAZ,EAAiB;AACfA,kBAAMjL,KAAN;AACD;AACF;;AAED;;;AAGA4I,eAAM,IAAI0B,UAAV,IAAwBpD,GAAxB;AACA0B,eAAM,IAAI0B,UAAJ,GAAiB,CAAvB,IAA4BW,GAA5B;;AAEA;;;AAGA,YAAIL,kBAAkB,CAAlB,IAAuB1D,MAAMyD,YAAY,IAAIL,UAAhB,CAAjC,EAA8D;AAC5DK,sBAAY,IAAIL,UAAhB,IAA8BpD,GAA9B;AACD;;AAED,YAAI0D,kBAAkB,CAAlB,IAAuBK,MAAMN,YAAY,IAAIL,UAAJ,GAAiB,CAA7B,CAAjC,EAAkE;AAChEK,sBAAY,IAAIL,UAAJ,GAAiB,CAA7B,IAAkCW,GAAlC;AACD;AACF;AACF;;AAED;;;AAGA,WAAON,WAAP;AACD;;AAED;;;;;AAKA,WAASR,gBAAT,CAA0BtB,GAA1B,EAA+B;AAC7B,QAAIsC,mBAAmB/Q,SAASC,gBAAT,CAA0B,sBAA1B,CAAvB;;AAEA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIoY,iBAAiB9Y,MAArC,EAA6CU,GAA7C,EAAkD;AAChD;;;AAGA,UAAIuH,WAAW6Q,iBAAiBpY,CAAjB,EAAoBwH,YAApB,CACb,yBADa,CAAf;;AAIA;;;AAGA,UAAIC,OAAO2Q,iBAAiBpY,CAAjB,EAAoBwH,YAApB,CAAiC,2BAAjC,CAAX;;AAEA;;;AAGA,UAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC4Q,8BAAsBD,iBAAiBpY,CAAjB,CAAtB,EAA2C8V,GAA3C;AACD;;AAED;;;AAGA,UAAIvO,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC6Q,gCAAwBF,iBAAiBpY,CAAjB,CAAxB,EAA6C8V,GAA7C,EAAkDvO,QAAlD;AACD;;AAED;;;;AAIA,UAAIA,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC8Q,4BAAoBH,iBAAiBpY,CAAjB,CAApB,EAAyC8V,GAAzC,EAA8CrO,IAA9C;AACD;;AAED;;;AAGA,UAAIF,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC+Q,sCAA8BJ,iBAAiBpY,CAAjB,CAA9B,EAAmD8V,GAAnD,EAAwDvO,QAAxD,EAAkEE,IAAlE;AACD;AACF;AACF;;AAED;;;;;;AAMA,WAAS4Q,qBAAT,CAA+BpQ,OAA/B,EAAwC6N,GAAxC,EAA6C;AAC3C,QAAI2C,eAAexQ,QAAQyQ,aAAR,CAAsB,YAAtB,CAAnB;;AAEAD,iBAAa5M,YAAb,CAA0B,GAA1B,EAA+BiK,GAA/B;AACD;;AAED;;;;;;;AAOA,WAASwC,uBAAT,CAAiCrQ,OAAjC,EAA0C6N,GAA1C,EAA+CvO,QAA/C,EAAyD;AACvD;;;AAGA,QAAI1C,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtC,UAAIkR,eAAexQ,QAAQyQ,aAAR,CAAsB,YAAtB,CAAnB;;AAEAD,mBAAa5M,YAAb,CAA0B,GAA1B,EAA+BiK,GAA/B;AACD;AACF;;AAED;;;;;;;;AAQA,WAASyC,mBAAT,CAA6BtQ,OAA7B,EAAsC6N,GAAtC,EAA2CrO,IAA3C,EAAiD;AAC/C;;;AAGA,QAAI5C,iBAAO7C,YAAP,IAAuByF,IAA3B,EAAiC;AAC/B,UAAIgR,eAAexQ,QAAQyQ,aAAR,CAAsB,YAAtB,CAAnB;;AAEAD,mBAAa5M,YAAb,CAA0B,GAA1B,EAA+BiK,GAA/B;AACD;AACF;;AAED;;;;;;;;AAQA,WAAS0C,6BAAT,CAAuCvQ,OAAvC,EAAgD6N,GAAhD,EAAqDvO,QAArD,EAA+DE,IAA/D,EAAqE;AACnE;;;AAGA,QACE5C,iBAAO5C,eAAP,IAA0BsF,QAA1B,IACA1C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAAzC,IAAyDyF,IAF3D,EAGE;AACA,UAAIgR,eAAexQ,QAAQyQ,aAAR,CAAsB,YAAtB,CAAnB;;AAEAD,mBAAa5M,YAAb,CAA0B,GAA1B,EAA+BiK,GAA/B;AACD;AACF;;AAED;;;AAGA,WAAS6C,yBAAT,GAAoC;AAClC,QAAIrU,YAAY+C,SAASC,gBAAT,CAA0B,sBAA1B,CAAhB;;AAEA,QAAIhD,UAAUhF,MAAV,GAAmB,CAAvB,EAA0B;AACxB,aAAO,IAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAP;AACD;AACF;;AAED;;;AAGA,SAAO;AACLyV,UAAMA,IADD;AAELmB,WAAOA,KAFF;AAGLyC,+BAA2BA;AAHtB,GAAP;AAKD,CA9bc,EAAf,C,CAXA;;;;kBA2ce7D,Q;;;;;;;;;;;;;;ACvcf;;;;;;AAEA;;;;AAIA,IAAI8D,OAAQ,YAAW;AACrB;;;;;;AAMA,WAASC,mBAAT,GAA+B;AAC7B;;;AAGA,QAAIlT,cAAc,EAAlB;;AAEA;;;AAGA,QAAImT,iBACF,CAAC/K,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAa+D,WAAb,GAA2B,EAAtC,IAA4C,EAA5C,GAAiD,GAAjD,GAAuD,EAAxD,IACAoI,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAa+D,WAAb,GAA2B,EAAtC,CAFF;;AAIA;;;AAGA,QAAIoT,iBAAiBhL,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAa+D,WAAb,GAA2B,EAAtC,CAArB;;AAEA;;;AAGA,QAAIqT,eAAe,IAAnB;;AAEA;;;AAGA,QAAID,iBAAiB,EAArB,EAAyB;AACvBA,uBAAiB,MAAMA,cAAvB;AACD;;AAED;;;;AAIA,QAAIA,kBAAkB,EAAtB,EAA0B;AACxBC,qBAAejL,KAAKC,KAAL,CAAW+K,iBAAiB,EAA5B,CAAf;AACAA,uBAAiBA,iBAAiB,EAAlC;;AAEA;;;;AAIA,UAAIA,iBAAiB,EAArB,EAAyB;AACvBA,yBAAiB,MAAMA,cAAvB;AACD;AACF;;AAED;;;AAGApT,gBAAYS,OAAZ,GAAsB0S,cAAtB;AACAnT,gBAAY0J,OAAZ,GAAsB0J,cAAtB;AACApT,gBAAYyJ,KAAZ,GAAoB4J,YAApB;;AAEA,WAAOrT,WAAP;AACD;;AAED;;;;;;AAMA,WAASsT,mBAAT,GAA+B;AAC7B;;;AAGA,QAAIrJ,eAAe,EAAnB;;AAEA;;;AAGA,QAAIsJ,sBACF,CAACnL,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAasE,QAAb,GAAwB,EAAnC,IAAyC,EAAzC,GAA8C,GAA9C,GAAoD,EAArD,IACA6H,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAasE,QAAb,GAAwB,EAAnC,CAFF;;AAIA;;;AAGA,QAAIiT,sBAAsBpL,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAasE,QAAb,GAAwB,EAAnC,CAA1B;;AAEA;;;AAGA,QAAIkT,oBAAoB,IAAxB;;AAEA;;;AAGA,QAAID,sBAAsB,EAA1B,EAA8B;AAC5BA,4BAAsB,MAAMA,mBAA5B;AACD;;AAED;;;;AAIA,QAAIA,uBAAuB,EAA3B,EAA+B;AAC7BC,0BAAoBrL,KAAKC,KAAL,CAAWmL,sBAAsB,EAAjC,CAApB;AACAA,4BAAsBA,sBAAsB,EAA5C;;AAEA;;;;AAIA,UAAIA,sBAAsB,EAA1B,EAA8B;AAC5BA,8BAAsB,MAAMA,mBAA5B;AACD;AACF;;AAED;;;AAGAvJ,iBAAaxJ,OAAb,GAAuB2E,MAAMmO,mBAAN,IACnB,IADmB,GAEnBA,mBAFJ;AAGAtJ,iBAAaP,OAAb,GAAuBtE,MAAMoO,mBAAN,IACnB,IADmB,GAEnBA,mBAFJ;AAGAvJ,iBAAaR,KAAb,GAAqBrE,MAAMqO,iBAAN,IACjB,IADiB,GAEjBA,kBAAkBC,QAAlB,EAFJ;;AAIA,WAAOzJ,YAAP;AACD;;AAED;;;;;AAKA,WAAS0J,+BAAT,GAA2C;AACzC,WAAQzU,iBAAOjD,KAAP,CAAa+D,WAAb,GAA2Bd,iBAAOjD,KAAP,CAAasE,QAAzC,GAAqD,GAA5D;AACD;;AAED;;;;;AAKA,WAASqT,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B;;;AAGA,QAAI,CAAC3U,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChC;;;AAGA,UAAI2U,SAASD,IAAT,CAAJ,EAAoB;AAClB3U,yBAAOjD,KAAP,CAAa+D,WAAb,GAA2B6T,IAA3B;AACD;AACF;AACF;;AAED;;;AAGA,SAAO;AACLX,yBAAqBA,mBADhB;AAELI,yBAAqBA,mBAFhB;AAGLK,qCAAiCA,+BAH5B;AAILC,oBAAgBA;AAJX,GAAP;AAMD,CA1KU,EAAX,C,CAVA;;;;kBAsLeX,I;;;;;;;;;;;;;;AClLf;;;;;;AAEA;;;;;AAKA,IAAIc,2BAA4B,YAAW;AACzC;;;;;AAKA,WAAS5S,IAAT,GAAgB;AACdC;AACAC;AACAC;AACAC;AACD;;AAED;;;AAGA,WAASH,UAAT,GAAsB;AACpB;;;AAGA,QAAM4S,2BAA2BtS,SAASkF,sBAAT,CAC/B,6BAD+B,CAAjC;;AAIA;;;;AAIA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI2Z,yBAAyBra,MAA7C,EAAqDU,GAArD,EAA0D;AACxD,UAAIuH,WAAWoS,yBAAyB3Z,CAAzB,EAA4BwH,YAA5B,CACb,yBADa,CAAf;AAGA,UAAIC,OAAOkS,yBAAyB3Z,CAAzB,EAA4BwH,YAA5B,CACT,2BADS,CAAX;;AAIA,UAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpCkS,iCAAyB3Z,CAAzB,EAA4BiN,KAA5B,GAAoC2M,WAClCA,WAAW/U,iBAAOpB,QAAlB,IAA8B,GADI,CAApC;AAGD;AACF;AACF;;AAED;;;AAGA,WAASuD,YAAT,GAAwB;AACtB;;;AAGA,QAAM6S,mCAAmCxS,SAASC,gBAAT,CACvC,2DACEzC,iBAAO5C,eADT,GAEE,IAHqC,CAAzC;;AAMA;;;;AAIA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI6Z,iCAAiCva,MAArD,EAA6DU,GAA7D,EAAkE;AAChE,UAAIyH,OAAOoS,iCAAiC7Z,CAAjC,EAAoCwH,YAApC,CACT,2BADS,CAAX;;AAIA,UAAIC,QAAQ,IAAZ,EAAkB;AAChBoS,yCAAiC7Z,CAAjC,EAAoCiN,KAApC,GAA4C2M,WAC1CA,WAAW/U,iBAAOpB,QAAlB,IAA8B,GADY,CAA5C;AAGD;AACF;AACF;;AAED;;;AAGA,WAASwD,QAAT,GAAoB;AAClB;;;AAGA,QAAM6S,gCAAgCzS,SAASC,gBAAT,CACpC,6DACEzC,iBAAO7C,YADT,GAEE,IAHkC,CAAtC;;AAMA;;;;AAIA,SAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAI8Z,8BAA8Bxa,MAAlD,EAA0DU,GAA1D,EAA+D;AAC7D,UAAIuH,WAAWuS,8BAA8B9Z,CAA9B,EAAiCwH,YAAjC,CACb,yBADa,CAAf;;AAIA,UAAID,YAAY,IAAhB,EAAsB;AACpBuS,sCAA8B9Z,CAA9B,EAAiCiN,KAAjC,GAAyC2M,WACvCA,WAAW/U,iBAAOpB,QAAlB,IAA8B,GADS,CAAzC;AAGD;AACF;AACF;;AAED;;;AAGA,WAASyD,kBAAT,GAA8B;AAC5B,QAAIY,sBACFjD,iBAAO5C,eAAP,IAA0B,IAA1B,IAAkC4C,iBAAO5C,eAAP,IAA0B,EAA5D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA;;;AAGA,QAAM+X,0CAA0C1S,SAASC,gBAAT,CAC9C,6DACEQ,mBADF,GAEE,8BAFF,GAGEjD,iBAAO5C,eAHT,GAIE,IAL4C,CAAhD;;AAQA;;;;AAIA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI+Z,wCAAwCza,MAA5D,EAAoEU,GAApE,EAAyE;AACvE+Z,8CAAwC/Z,CAAxC,EAA2CiN,KAA3C,GAAmD2M,WACjDA,WAAW/U,iBAAOpB,QAAlB,IAA8B,GADmB,CAAnD;AAGD;AACF;;AAED;;;;;AAKA,WAASuW,KAAT,GAAiB;AACf;;;AAGA,QAAIL,2BAA2BtS,SAASkF,sBAAT,CAC7B,6BAD6B,CAA/B;;AAIA;;;;AAIA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI2Z,yBAAyBra,MAA7C,EAAqDU,GAArD,EAA0D;AACxD2Z,+BAAyB3Z,CAAzB,EAA4BiN,KAA5B,GAAoC,CAApC;AACD;AACF;;AAED;;;AAGA,SAAO;AACLnG,UAAMA,IADD;AAELkT,WAAOA;AAFF,GAAP;AAID,CApK8B,EAA/B,C,CAXA;;;;kBAiLeN,wB;;;;;;;;;;;;;;AC7Kf;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;AA6BA,IAAIO,QAAS,YAAW;AACtB;;;;;;;AAOA,WAASC,MAAT,GAAkB;AAChB;;;;AAIAzb,eAAW,YAAW;AACpB;;;AAGA,UAAIoG,iBAAOlB,aAAX,EAA0B;AACxB;;;;AAIA,YAAIkB,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClEoG,oCAAgBC,OAAhB,CAAwB,IAAxB;AACD,SAFD,MAEO;AACLD,oCAAgBS,eAAhB,CAAgCjE,iBAAO5C,eAAvC,EAAwD,IAAxD;AACD;AACF,OAVD,MAUO;AACL,YAAI,CAAC4C,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA2W,wBAAcvV,IAAd;;AAEA;;;AAGAiC,sCAAkBC,IAAlB;AACD;AACF;AACF,KA3BD,EA2BGjC,iBAAOjB,KA3BV;AA4BD;;AAED;;;AAGA,SAAO;AACLsW,YAAQA;AADH,GAAP;AAGD,CAjDW,EAAZ;;AAXA;;;;;;AAZA;;;;AAZA;;;;kBAsFeD,K;;;;;;;;;;;;;;AClFf;;;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAKA;;;;;;AAEA;;;;;;;;AA9BA;;;AAoCA,IAAI3F,SAAU,YAAW;AACvB;;;;;AAKA,WAASlJ,UAAT,GAAsB;AACpB;;;AAGA9E,oBAAMC,YAAN,CAAmB,8CAAnB;;AAEA;;;AAGAc,aAAShB,gBAAT,CAA0B,WAA1B,EAAuC,YAAW;AAChDxB,uBAAOrB,eAAP,GAAyB,IAAzB;AACD,KAFD;;AAIA;;;;AAIA6D,aAAShB,gBAAT,CAA0B,UAA1B,EAAsC,YAAW;AAC/C,UAAIxB,iBAAOrB,eAAX,EAA4B;AAC1BqB,yBAAOrB,eAAP,GAAyB,KAAzB;AACD;AACF,KAJD;;AAMA;;;;AAIA4W;;AAEA;;;AAGAC;;AAEA;;;;;;;AAOAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;AACD;;AAED;;;;;;AAMA,WAASpB,cAAT,GAA0B;AACxB;;;AAGAvV,qBAAOjD,KAAP,CAAa6Z,mBAAb,CAAiC,YAAjC,EAA+CC,qBAAWxB,MAA1D;AACArV,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,YAA9B,EAA4CqV,qBAAWxB,MAAvD;;AAEA;;;AAGArV,qBAAOjD,KAAP,CAAa6Z,mBAAb,CAAiC,gBAAjC,EAAmDC,qBAAWxB,MAA9D;AACArV,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,gBAA9B,EAAgDqV,qBAAWxB,MAA3D;AACD;;AAED;;;;;;;AAOA,WAASG,wBAAT,GAAoC;AAClChT,aAASoU,mBAAT,CAA6B,SAA7B,EAAwCE,kBAAQzB,MAAhD;AACA7S,aAAShB,gBAAT,CAA0B,SAA1B,EAAqCsV,kBAAQzB,MAA7C;AACD;;AAED;;;;;;;;;AASA,WAASI,aAAT,GAAyB;AACvBzV,qBAAOjD,KAAP,CAAa6Z,mBAAb,CAAiC,OAAjC,EAA0CxB,gBAAMC,MAAhD;AACArV,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,OAA9B,EAAuC4T,gBAAMC,MAA7C;AACD;;AAED;;;;;;;AAOA,WAASK,YAAT,GAAwB;AACtB1V,qBAAOjD,KAAP,CAAa6Z,mBAAb,CAAiC,UAAjC,EAA6CG,mBAAS1B,MAAtD;AACArV,qBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,UAA9B,EAA0CuV,mBAAS1B,MAAnD;AACD;;AAED;;;;;AAKA,WAASM,QAAT,GAAoB;AAClB;;;AAGA,QAAIqB,eAAexU,SAASkF,sBAAT,CAAgC,gBAAhC,CAAnB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI6b,aAAavc,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA2W,qBAAa7b,CAAb,EAAgByb,mBAAhB,CAAoC,UAApC,EAAgDK,eAAK5B,MAArD;AACA2B,qBAAa7b,CAAb,EAAgBqG,gBAAhB,CAAiC,UAAjC,EAA6CyV,eAAK5B,MAAlD;AACD,OAPD,MAOO;AACL2B,qBAAa7b,CAAb,EAAgByb,mBAAhB,CAAoC,OAApC,EAA6CK,eAAK5B,MAAlD;AACA2B,qBAAa7b,CAAb,EAAgBqG,gBAAhB,CAAiC,OAAjC,EAA0CyV,eAAK5B,MAA/C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASO,SAAT,GAAqB;AACnB;;;AAGA,QAAIsB,gBAAgB1U,SAASkF,sBAAT,CAAgC,iBAAhC,CAApB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI+b,cAAczc,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7C,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA6W,sBAAc/b,CAAd,EAAiByb,mBAAjB,CAAqC,UAArC,EAAiDO,gBAAM9B,MAAvD;AACA6B,sBAAc/b,CAAd,EAAiBqG,gBAAjB,CAAkC,UAAlC,EAA8C2V,gBAAM9B,MAApD;AACD,OAPD,MAOO;AACL6B,sBAAc/b,CAAd,EAAiByb,mBAAjB,CAAqC,OAArC,EAA8CO,gBAAM9B,MAApD;AACA6B,sBAAc/b,CAAd,EAAiBqG,gBAAjB,CAAkC,OAAlC,EAA2C2V,gBAAM9B,MAAjD;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASQ,aAAT,GAAyB;AACvB;;;AAGA,QAAIuB,qBAAqB5U,SAASkF,sBAAT,CACvB,sBADuB,CAAzB;;AAIA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIic,mBAAmB3c,MAAvC,EAA+CU,GAA/C,EAAoD;AAClD,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA+W,2BAAmBjc,CAAnB,EAAsByb,mBAAtB,CAA0C,UAA1C,EAAsDS,oBAAUhC,MAAhE;AACA+B,2BAAmBjc,CAAnB,EAAsBqG,gBAAtB,CAAuC,UAAvC,EAAmD6V,oBAAUhC,MAA7D;AACD,OAPD,MAOO;AACL+B,2BAAmBjc,CAAnB,EAAsByb,mBAAtB,CAA0C,OAA1C,EAAmDS,oBAAUhC,MAA7D;AACA+B,2BAAmBjc,CAAnB,EAAsBqG,gBAAtB,CAAuC,OAAvC,EAAgD6V,oBAAUhC,MAA1D;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASS,QAAT,GAAoB;AAClB;;;AAGA,QAAIwB,eAAe9U,SAASkF,sBAAT,CAAgC,gBAAhC,CAAnB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAImc,aAAa7c,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACAiX,qBAAanc,CAAb,EAAgByb,mBAAhB,CAAoC,UAApC,EAAgDW,eAAKlC,MAArD;AACAiC,qBAAanc,CAAb,EAAgBqG,gBAAhB,CAAiC,UAAjC,EAA6C+V,eAAKlC,MAAlD;AACD,OAPD,MAOO;AACLiC,qBAAanc,CAAb,EAAgByb,mBAAhB,CAAoC,OAApC,EAA6CW,eAAKlC,MAAlD;AACAiC,qBAAanc,CAAb,EAAgBqG,gBAAhB,CAAiC,OAAjC,EAA0C+V,eAAKlC,MAA/C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASU,QAAT,GAAoB;AAClB;;;AAGA,QAAIyB,eAAehV,SAASkF,sBAAT,CAAgC,gBAAhC,CAAnB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIqc,aAAa/c,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C;;;;;AAKA,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA;;;;AAIA,YAAI,oBAAoBF,IAApB,CAAyBC,UAAUC,SAAnC,CAAJ,EAAmD;AACjDoB,0BAAMC,YAAN,CACE,wQADF;AAGD,SAJD,MAIO;AACL8V,uBAAarc,CAAb,EAAgByb,mBAAhB,CAAoC,UAApC,EAAgDa,eAAKpC,MAArD;AACAmC,uBAAarc,CAAb,EAAgBqG,gBAAhB,CAAiC,UAAjC,EAA6CiW,eAAKpC,MAAlD;AACD;AACF,OAjBD,MAiBO;AACLmC,qBAAarc,CAAb,EAAgByb,mBAAhB,CAAoC,OAApC,EAA6Ca,eAAKpC,MAAlD;AACAmC,qBAAarc,CAAb,EAAgBqG,gBAAhB,CAAiC,OAAjC,EAA0CiW,eAAKpC,MAA/C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASW,YAAT,GAAwB;AACtB;;;AAGA,QAAI0B,oBAAoBlV,SAASkF,sBAAT,CACtB,qBADsB,CAAxB;;AAIA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIuc,kBAAkBjd,MAAtC,EAA8CU,GAA9C,EAAmD;AACjD;;;;;AAKA,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA;;;;AAIA,YAAI,oBAAoBF,IAApB,CAAyBC,UAAUC,SAAnC,CAAJ,EAAmD;AACjDoB,0BAAMC,YAAN,CACE,wQADF;AAGD,SAJD,MAIO;AACLgW,4BAAkBvc,CAAlB,EAAqByb,mBAArB,CAAyC,UAAzC,EAAqDe,mBAAStC,MAA9D;AACAqC,4BAAkBvc,CAAlB,EAAqBqG,gBAArB,CAAsC,UAAtC,EAAkDmW,mBAAStC,MAA3D;AACD;AACF,OAjBD,MAiBO;AACLqC,0BAAkBvc,CAAlB,EAAqByb,mBAArB,CAAyC,OAAzC,EAAkDe,mBAAStC,MAA3D;AACAqC,0BAAkBvc,CAAlB,EAAqBqG,gBAArB,CAAsC,OAAtC,EAA+CmW,mBAAStC,MAAxD;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASY,cAAT,GAA0B;AACxB;;;AAGA,QAAI2B,sBAAsBpV,SAASkF,sBAAT,CACxB,uBADwB,CAA1B;;AAIA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIyc,oBAAoBnd,MAAxC,EAAgDU,GAAhD,EAAqD;AACnD;;;;;AAKA,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA;;;;AAIA,YAAI,oBAAoBF,IAApB,CAAyBC,UAAUC,SAAnC,CAAJ,EAAmD;AACjDoB,0BAAMC,YAAN,CACE,wQADF;AAGD,SAJD,MAIO;AACLkW,8BAAoBzc,CAApB,EAAuByb,mBAAvB,CACE,UADF,EAEEiB,qBAAWxC,MAFb;AAIAuC,8BAAoBzc,CAApB,EAAuBqG,gBAAvB,CACE,UADF,EAEEqW,qBAAWxC,MAFb;AAID;AACF,OAvBD,MAuBO;AACLuC,4BAAoBzc,CAApB,EAAuByb,mBAAvB,CAA2C,OAA3C,EAAoDiB,qBAAWxC,MAA/D;AACAuC,4BAAoBzc,CAApB,EAAuBqG,gBAAvB,CAAwC,OAAxC,EAAiDqW,qBAAWxC,MAA5D;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASa,cAAT,GAA0B;AACxB;;;;AAIA,QAAI4B,KAAKC,OAAO3X,SAAP,CAAiBC,SAA1B;AACA,QAAI2X,OAAOF,GAAG/Q,OAAH,CAAW,OAAX,CAAX;;AAEA;;;AAGA,QAAIkR,eAAezV,SAASkF,sBAAT,CAAgC,uBAAhC,CAAnB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI8c,aAAaxd,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C,UAAI6c,OAAO,CAAP,IAAY,CAAC,CAAC5X,UAAUC,SAAV,CAAoB0N,KAApB,CAA0B,mBAA1B,CAAlB,EAAkE;AAChEkK,qBAAa9c,CAAb,EAAgByb,mBAAhB,CAAoC,QAApC,EAA8CsB,qBAAW7C,MAAzD;AACA4C,qBAAa9c,CAAb,EAAgBqG,gBAAhB,CAAiC,QAAjC,EAA2C0W,qBAAW7C,MAAtD;AACD,OAHD,MAGO;AACL4C,qBAAa9c,CAAb,EAAgByb,mBAAhB,CAAoC,OAApC,EAA6CsB,qBAAW7C,MAAxD;AACA4C,qBAAa9c,CAAb,EAAgBqG,gBAAhB,CAAiC,OAAjC,EAA0C0W,qBAAW7C,MAArD;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASc,gBAAT,GAA4B;AAC1B;;;;AAIA,QAAI2B,KAAKC,OAAO3X,SAAP,CAAiBC,SAA1B;AACA,QAAI2X,OAAOF,GAAG/Q,OAAH,CAAW,OAAX,CAAX;;AAEA;;;AAGA,QAAIoR,iBAAiB3V,SAASkF,sBAAT,CACnB,yBADmB,CAArB;;AAIA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIgd,eAAe1d,MAAnC,EAA2CU,GAA3C,EAAgD;AAC9C;;;;;AAKA,UAAI,oBAAoBgF,IAApB,CAAyBC,UAAUC,SAAnC,CAAJ,EAAmD;AACjDoB,wBAAMC,YAAN,CACE,wQADF;AAGD,OAJD,MAIO;AACL,YAAIsW,OAAO,CAAP,IAAY,CAAC,CAAC5X,UAAUC,SAAV,CAAoB0N,KAApB,CAA0B,mBAA1B,CAAlB,EAAkE;AAChEoK,yBAAehd,CAAf,EAAkByb,mBAAlB,CAAsC,QAAtC,EAAgDwB,uBAAa/C,MAA7D;AACA8C,yBAAehd,CAAf,EAAkBqG,gBAAlB,CAAmC,QAAnC,EAA6C4W,uBAAa/C,MAA1D;AACD,SAHD,MAGO;AACL8C,yBAAehd,CAAf,EAAkByb,mBAAlB,CAAsC,OAAtC,EAA+CwB,uBAAa/C,MAA5D;AACA8C,yBAAehd,CAAf,EAAkBqG,gBAAlB,CAAmC,OAAnC,EAA4C4W,uBAAa/C,MAAzD;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASe,QAAT,GAAoB;AAClB;;;AAGA,QAAIiC,eAAe7V,SAASkF,sBAAT,CAAgC,gBAAhC,CAAnB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIkd,aAAa5d,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACAgY,qBAAald,CAAb,EAAgByb,mBAAhB,CAAoC,UAApC,EAAgD0B,eAAKjD,MAArD;AACAgD,qBAAald,CAAb,EAAgBqG,gBAAhB,CAAiC,UAAjC,EAA6C8W,eAAKjD,MAAlD;AACD,OAPD,MAOO;AACLgD,qBAAald,CAAb,EAAgByb,mBAAhB,CAAoC,OAApC,EAA6C0B,eAAKjD,MAAlD;AACAgD,qBAAald,CAAb,EAAgBqG,gBAAhB,CAAiC,OAAjC,EAA0C8W,eAAKjD,MAA/C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASgB,QAAT,GAAoB;AAClB;;;AAGA,QAAIkC,eAAe/V,SAASkF,sBAAT,CAAgC,gBAAhC,CAAnB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIod,aAAa9d,MAAjC,EAAyCU,GAAzC,EAA8C;AAC5C,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACAkY,qBAAapd,CAAb,EAAgByb,mBAAhB,CAAoC,UAApC,EAAgD4B,eAAKnD,MAArD;AACAkD,qBAAapd,CAAb,EAAgBqG,gBAAhB,CAAiC,UAAjC,EAA6CgX,eAAKnD,MAAlD;AACD,OAPD,MAOO;AACLkD,qBAAapd,CAAb,EAAgByb,mBAAhB,CAAoC,OAApC,EAA6C4B,eAAKnD,MAAlD;AACAkD,qBAAapd,CAAb,EAAgBqG,gBAAhB,CAAiC,OAAjC,EAA0CgX,eAAKnD,MAA/C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASiB,WAAT,GAAuB;AACrB;;;AAGA,QAAImC,kBAAkBjW,SAASkF,sBAAT,CAAgC,mBAAhC,CAAtB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIsd,gBAAgBhe,MAApC,EAA4CU,GAA5C,EAAiD;AAC/C;;;;AAIAsd,sBAAgBtd,CAAhB,EAAmBkI,SAAnB,CAA6BE,MAA7B,CAAoC,sBAApC;AACAkV,sBAAgBtd,CAAhB,EAAmBkI,SAAnB,CAA6BC,GAA7B,CAAiC,uBAAjC;;AAEA,UACE,iEAAiEnD,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACAoY,wBAAgBtd,CAAhB,EAAmByb,mBAAnB,CAAuC,UAAvC,EAAmD8B,kBAAQrD,MAA3D;AACAoD,wBAAgBtd,CAAhB,EAAmBqG,gBAAnB,CAAoC,UAApC,EAAgDkX,kBAAQrD,MAAxD;AACD,OAPD,MAOO;AACLoD,wBAAgBtd,CAAhB,EAAmByb,mBAAnB,CAAuC,OAAvC,EAAgD8B,kBAAQrD,MAAxD;AACAoD,wBAAgBtd,CAAhB,EAAmBqG,gBAAnB,CAAoC,OAApC,EAA6CkX,kBAAQrD,MAArD;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASkB,UAAT,GAAsB;AACpB;;;AAGA,QAAIoC,iBAAiBnW,SAASkF,sBAAT,CAAgC,kBAAhC,CAArB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAIwd,eAAele,MAAnC,EAA2CU,GAA3C,EAAgD;AAC9C;;;;AAIAwd,qBAAexd,CAAf,EAAkBkI,SAAlB,CAA4BE,MAA5B,CAAmC,qBAAnC;AACAoV,qBAAexd,CAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,sBAAhC;;AAEA,UACE,iEAAiEnD,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACAsY,uBAAexd,CAAf,EAAkByb,mBAAlB,CAAsC,UAAtC,EAAkDgC,iBAAOvD,MAAzD;AACAsD,uBAAexd,CAAf,EAAkBqG,gBAAlB,CAAmC,UAAnC,EAA+CoX,iBAAOvD,MAAtD;AACD,OAPD,MAOO;AACLsD,uBAAexd,CAAf,EAAkByb,mBAAlB,CAAsC,OAAtC,EAA+CgC,iBAAOvD,MAAtD;AACAsD,uBAAexd,CAAf,EAAkBqG,gBAAlB,CAAmC,OAAnC,EAA4CoX,iBAAOvD,MAAnD;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASmB,cAAT,GAA0B;AACxB;;;AAGA,QAAIqC,sBAAsBrW,SAASkF,sBAAT,CACxB,uBADwB,CAA1B;;AAIA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI0d,oBAAoBpe,MAAxC,EAAgDU,GAAhD,EAAqD;AACnD;;;;AAIA0d,0BAAoB1d,CAApB,EAAuBkI,SAAvB,CAAiCE,MAAjC,CAAwC,qBAAxC;AACAsV,0BAAoB1d,CAApB,EAAuBkI,SAAvB,CAAiCC,GAAjC,CAAqC,sBAArC;;AAEA,UACE,iEAAiEnD,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACAwY,4BAAoB1d,CAApB,EAAuByb,mBAAvB,CACE,UADF,EAEEkC,qBAAWzD,MAFb;AAIAwD,4BAAoB1d,CAApB,EAAuBqG,gBAAvB,CAAwC,UAAxC,EAAoDsX,qBAAWzD,MAA/D;AACD,OAVD,MAUO;AACLwD,4BAAoB1d,CAApB,EAAuByb,mBAAvB,CAA2C,OAA3C,EAAoDkC,qBAAWzD,MAA/D;AACAwD,4BAAoB1d,CAApB,EAAuBqG,gBAAvB,CAAwC,OAAxC,EAAiDsX,qBAAWzD,MAA5D;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASoB,iBAAT,GAA6B;AAC3B;;;AAGA,QAAIsC,yBAAyBvW,SAASkF,sBAAT,CAC3B,0BAD2B,CAA7B;;AAIA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI4d,uBAAuBte,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA0Y,+BAAuB5d,CAAvB,EAA0Byb,mBAA1B,CACE,UADF,EAEEoC,wBAAc3D,MAFhB;AAIA0D,+BAAuB5d,CAAvB,EAA0BqG,gBAA1B,CACE,UADF,EAEEwX,wBAAc3D,MAFhB;AAID,OAbD,MAaO;AACL0D,+BAAuB5d,CAAvB,EAA0Byb,mBAA1B,CACE,OADF,EAEEoC,wBAAc3D,MAFhB;AAIA0D,+BAAuB5d,CAAvB,EAA0BqG,gBAA1B,CACE,OADF,EAEEwX,wBAAc3D,MAFhB;AAID;AACF;AACF;;AAED;;;;;AAKA,WAASqB,UAAT,GAAsB;AACpB;;;AAGA,QAAIuC,gBAAgBzW,SAASkF,sBAAT,CAAgC,mBAAhC,CAApB;;AAEA;;;;;AAKA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI8d,cAAcxe,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7C,UACE,iEAAiEgF,IAAjE,CACEC,UAAUC,SADZ,CADF,EAIE;AACA4Y,sBAAc9d,CAAd,EAAiByb,mBAAjB,CAAqC,UAArC,EAAiDsC,iBAAO7D,MAAxD;AACA4D,sBAAc9d,CAAd,EAAiBqG,gBAAjB,CAAkC,UAAlC,EAA8C0X,iBAAO7D,MAArD;AACD,OAPD,MAOO;AACL4D,sBAAc9d,CAAd,EAAiByb,mBAAjB,CAAqC,OAArC,EAA8CsC,iBAAO7D,MAArD;AACA4D,sBAAc9d,CAAd,EAAiBqG,gBAAjB,CAAkC,OAAlC,EAA2C0X,iBAAO7D,MAAlD;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASsB,kBAAT,GAA8B;AAC5B,QAAI1G,mBAAS6D,yBAAT,EAAJ,EAA0C;AACxC9T,uBAAOjD,KAAP,CAAa6Z,mBAAb,CAAiC,gBAAjC,EAAmD3G,mBAASoB,KAA5D;AACArR,uBAAOjD,KAAP,CAAayE,gBAAb,CAA8B,gBAA9B,EAAgDyO,mBAASoB,KAAzD;AACD;AACF;;AAED;;;AAGA,SAAO;AACL9K,gBAAYA;AADP,GAAP;AAGD,CA5zBY,EAAb;;AAXA;;;AA/BA;;;;kBAw2BekJ,M;;;;;;;;;;;;;;ACp2Bf;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;AAyCA,IAAIqH,UAAW,YAAW;AACxB;;;;;;;;;AASA,WAASzB,MAAT,CAAgB8D,KAAhB,EAAuB;AACrBC,gBAAYD,MAAME,KAAlB;AACD;;AAED;;;;;;AAMA,WAASD,WAAT,CAAqBtN,GAArB,EAA0B;AACxB;;;AAGA,QAAI9L,iBAAOnB,QAAP,CAAgBiN,GAAhB,KAAwBtL,SAA5B,EAAuC;AACrC;;;AAGA,cAAQR,iBAAOnB,QAAP,CAAgBiN,GAAhB,CAAR;AACE;;;AAGA,aAAK,YAAL;AACEwN;AACA;;AAEF;;;AAGA,aAAK,MAAL;AACEC;AACA;;AAEF;;;AAGA,aAAK,MAAL;AACEC;AACA;;AAEF;;;AAGA,aAAK,MAAL;AACEC;AACA;;AAEF;;;AAGA,aAAK,SAAL;AACEC;AACA;;AAEF;;;AAGA,aAAK,QAAL;AACEC;AACA;AAzCJ;AA2CD;AACF;;AAED;;;AAGA,WAASL,wBAAT,GAAoC;AAClC;;;;AAIA,QAAItZ,iBAAOjD,KAAP,CAAauD,MAAjB,EAAyB;AACvBV,qBAAKC,IAAL;AACD,KAFD,MAEO;AACLD,qBAAKgB,KAAL;AACD;;AAED;;;;;AAKAoB,gCAAkBC,IAAlB;AACD;;AAED;;;AAGA,WAASsX,mBAAT,GAA+B;AAC7B;;;;AAIA,QAAIvZ,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClEoG,gCAAgBC,OAAhB;AACD,KAFD,MAEO;AACLD,gCAAgBS,eAAhB,CAAgCjE,iBAAO5C,eAAvC;AACD;AACF;;AAED;;;AAGA,WAASoc,mBAAT,GAA+B;AAC7B;;;;AAIA,QAAIxZ,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClEoG,gCAAgBa,WAAhB;AACD,KAFD,MAEO;AACLb,gCAAgBgB,mBAAhB,CAAoCxE,iBAAO5C,eAA3C;AACD;AACF;;AAED;;;AAGA,WAASqc,mBAAT,GAA+B;AAC7B;;;AAGAzX,gCAAkBmB,WAAlB;;AAEA;;;AAGAvD,mBAAKG,IAAL;AACD;;AAED;;;AAGA,WAAS2Z,sBAAT,GAAkC;AAChC;;;;AAIA,QAAI1Z,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClEsb,yBAAQ9P,aAAR;AACD,KAFD,MAEO;AACL8P,yBAAQ3P,qBAAR,CAA8B/I,iBAAO5C,eAArC;AACD;AACF;;AAED;;;AAGA,WAASuc,qBAAT,GAAiC;AAC/B;;;AAGAtR,uBAASC,SAAT,CAAmB,CAACtI,iBAAOpC,MAA3B;;AAEA;;;AAGA2J,6BAAeC,UAAf;AACD;;AAED;;;AAGA,SAAO;AACL6N,YAAQA;AADH,GAAP;AAGD,CAjLa,EAAd;;AAXA;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;kBAkOeyB,O;;;;;;;;;;;;;;AC/Nf;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAXA;;;AA2BA,IAAIW,OAAQ,YAAW;AACrB;;;;;;;AAOA,WAASpC,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;;;;AAQA,UAAIqB,iBAAO7B,MAAP,IAAiB,CAArB,EAAwB;AACtByB,uBAAKoB,SAAL,CAAehB,iBAAO5B,eAAtB;AACD,OAFD,MAEO;AACL4B,yBAAO5B,eAAP,GAAyB4B,iBAAO7B,MAAhC;AACAyB,uBAAKoB,SAAL,CAAe,CAAf;AACD;;AAED;;;AAGA+G,6BAAaC,QAAb,CAAsBhI,iBAAO7B,MAAP,IAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAAlD;;AAEA;;;;;AAKA+J,qCAAqBjG,IAArB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CAjDU,EAAX;;AAVA;;;;;;AAZA;;;;kBAyEeoC,I;;;;;;;;;;;;;;AC1Ef;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;AAyCA,IAAIa,OAAQ,YAAW;AACrB;;;;;;;;;;AAUA,WAASjD,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA,UAAI+D,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;;AAEA;;;AAGA,UAAID,YAAY,IAAhB,EAAsB;AACpBkX;AACD;;AAED;;;AAGA,UAAIlX,YAAY,IAAhB,EAAsB;AACpBmX,2BAAmBnX,QAAnB;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASkX,gBAAT,GAA4B;AAC1B;;;;;AAKA,QAAI5Z,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClEoG,gCAAgBC,OAAhB;AACD,KAFD,MAEO;AACLD,gCAAgBS,eAAhB,CAAgCjE,iBAAO5C,eAAvC;AACD;AACF;;AAED;;;;;;AAMA,WAASyc,kBAAT,CAA4BnX,QAA5B,EAAsC;AACpC;;;;AAIA,QAAIA,YAAY1C,iBAAO5C,eAAvB,EAAwC;AACtCoG,gCAAgBS,eAAhB,CAAgCvB,QAAhC;AACD,KAFD,MAEO;AACLjB,sBAAMC,YAAN,CACE,yEADF;AAGD;AACF;;AAED;;;AAGA,SAAO;AACL2T,YAAQA;AADH,GAAP;AAGD,CAlFU,EAAX;;AAXA;;;;;;AAZA;;;;;;AAZA;;;;kBAuHeiD,I;;;;;;;;;;;;;;ACzHf;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAZA;;;;AA4BA,IAAInB,QAAS,YAAW;AACtB;;;;;;;;;;;;AAYA,WAAS9B,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;;;;AAOA,UAAImb,qBAAqB,KAAKnX,YAAL,CAAkB,2BAAlB,CAAzB;AACA,UAAIkH,oBAAoB,KAAKlH,YAAL,CAAkB,yBAAlB,CAAxB;;AAEA;;;AAGA,UAAIkH,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DC;AACD;;AAED;;;AAGA,UAAIlQ,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DE,4BAAoBnQ,iBAApB;AACD;;AAED;;;AAGA,UAAIA,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DG,wBAAgBH,kBAAhB;AACD;;AAED;;;AAGA,UAAIjQ,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DI,kCAA0BrQ,iBAA1B,EAA6CiQ,kBAA7C;AACD;;AAED1T,4BAAYE,cAAZ;AACD;AACF;;AAED;;;;;;AAMA,WAASyT,iBAAT,GAA6B;AAC3B;;;AAGAna,mBAAKgB,KAAL;;AAEA;;;AAGAoB,gCAAkBC,IAAlB;AACD;;AAED;;;;;;AAMA,WAAS+X,mBAAT,CAA6BtX,QAA7B,EAAuC;AACrC;;;AAGA,QAAI1C,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtC;;;AAGA9C,qBAAKgB,KAAL;;AAEA;;;AAGAoB,kCAAkBC,IAAlB;AACD;AACF;;AAED;;;;;;AAMA,WAASgY,eAAT,CAAyBrX,IAAzB,EAA+B;AAC7B;;;;AAIA,QACE,CAAC5C,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA3D,KACA4C,iBAAO7C,YAAP,IAAuByF,IAFzB,EAGE;AACA;;;AAGAhD,qBAAKgB,KAAL;;AAEA;;;AAGAoB,kCAAkBC,IAAlB;AACD;AACF;;AAED;;;;;;;AAOA,WAASiY,yBAAT,CAAmCxX,QAAnC,EAA6CE,IAA7C,EAAmD;AACjD;;;;;AAKA,QACE5C,iBAAO5C,eAAP,IAA0BsF,QAA1B,IACA1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,IAA2CyF,IAF7C,EAGE;AACA;;;AAGAhD,qBAAKgB,KAAL;;AAEA;;;AAGAoB,kCAAkBC,IAAlB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CApKW,EAAZ;;AAVA;;;;;;AAZA;;;;kBA4Le8B,K;;;;;;;;;;;;;;AC9Lf;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;AAwCA,IAAIF,OAAQ,YAAW;AACrB;;;;;;;;;;;;AAYA,WAAS5B,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;;;;AAOA,UAAImb,qBAAqB,KAAKnX,YAAL,CAAkB,2BAAlB,CAAzB;AACA,UAAIkH,oBAAoB,KAAKlH,YAAL,CAAkB,yBAAlB,CAAxB;;AAEA;;;AAGA,UAAIkH,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DK;AACD;;AAED;;;AAGA,UAAItQ,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DM,2BAAmBvQ,iBAAnB;AACD;;AAED;;;AAGA,UAAIA,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DO,uBAAeP,kBAAf;AACD;;AAED;;;AAGA,UAAIjQ,qBAAqB,IAArB,IAA6BiQ,sBAAsB,IAAvD,EAA6D;AAC3DQ,iCAAyBzQ,iBAAzB,EAA4CiQ,kBAA5C;AACD;;AAED1T,4BAAYE,cAAZ;AACD;AACF;;AAED;;;;;;AAMA,WAAS6T,gBAAT,GAA4B;AAC1B;;;AAGAva,mBAAKC,IAAL;;AAEA;;;AAGAmC,gCAAkBC,IAAlB;AACD;;AAED;;;;;;AAMA,WAASmY,kBAAT,CAA4B1X,QAA5B,EAAsC;AACpC;;;AAGA,QAAIuC,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChC;;;AAGAc,gCAAgBW,iBAAhB,CAAkCzB,QAAlC;;AAEA;;;;;;AAOA,UAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtCV,kCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwC,CAAxC,CAFF,EAGE,CAHF;AAKD,OAND,MAMO;AACL0F,kCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC,CAAjC,CAFF,EAGE,CAHF;AAKD;AACF;;AAED;;;AAGAqC,mBAAKC,IAAL;;AAEA;;;;AAIAmC,gCAAkBC,IAAlB;AACD;;AAED;;;;;;AAMA,WAASoY,cAAT,CAAwBzX,IAAxB,EAA8B;AAC5B;;;;;;AAMA;;;;AAIA,QAAIqC,iBAAOY,WAAP,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B;;;;AAIArC,gCAAgBW,iBAAhB,CAAkC,IAAlC;;AAEA;;;AAGAX,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAaqF,IAAb,CAA3B,EAA+CA,IAA/C;AACD;;AAED;;;;;;AAMA,QAAIqC,iBAAOU,OAAP,CAAe,IAAf,EAAqB/C,IAArB,CAAJ,EAAgC;AAC9B;;;;AAIAY,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAaqF,IAAb,CAA3B,EAA+CA,IAA/C;AACD;;AAED;;;AAGAhD,mBAAKC,IAAL;;AAEA;;;;AAIAmC,gCAAkBC,IAAlB;AACD;;AAED;;;;;;;AAOA,WAASqY,wBAAT,CAAkC5X,QAAlC,EAA4CE,IAA5C,EAAkD;AAChD;;;;;;AAMA;;;;AAIA,QAAIqC,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChC;;;;AAIAc,gCAAgBW,iBAAhB,CAAkCzB,QAAlC;;AAEA;;;AAGAc,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqF,IAAjC,CAFF,EAGEA,IAHF;AAKD;;AAED;;;;;;AAMA,QAAIqC,iBAAOU,OAAP,CAAejD,QAAf,EAAyBE,IAAzB,CAAJ,EAAoC;AAClC;;;;AAIAY,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqF,IAAjC,CAFF,EAGEA,IAHF;AAKD;;AAED;;;AAGAhD,mBAAKC,IAAL;;AAEA;;;;;AAKAmC,gCAAkBC,IAAlB;AACD;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CAjQU,EAAX;;AAVA;;;;;;AAZA;;;;;;AAZA;;;;kBAqSe4B,I;;;;;;;;;;;;;;ACvSf;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;AAwCA,IAAII,YAAa,YAAW;AAC1B;;;;;;;;;;;;AAYA,WAAShC,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;AAIA,UAAI+D,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;AACA,UAAIC,OAAO,KAAKD,YAAL,CAAkB,2BAAlB,CAAX;;AAEA;;;AAGA,UAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC2X;AACD;;AAED;;;AAGA,UAAI7X,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC4X,gCAAwB9X,QAAxB;AACD;;AAED;;;AAGA,UAAIA,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC6X,4BAAoB7X,IAApB;AACD;;AAED;;;AAGA,UAAIF,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC8X,sCAA8BhY,QAA9B,EAAwCE,IAAxC;AACD;;AAEDwD,4BAAYE,cAAZ;AACD;AACF;;AAED;;;;AAIA,WAASiU,qBAAT,GAAiC;AAC/B;;;;AAIA,QAAIva,iBAAOjD,KAAP,CAAauD,MAAjB,EAAyB;AACvBV,qBAAKC,IAAL;AACD,KAFD,MAEO;AACLD,qBAAKgB,KAAL;AACD;;AAED;;;;;AAKAoB,gCAAkBC,IAAlB;AACD;;AAED;;;;;AAKA,WAASuY,uBAAT,CAAiC9X,QAAjC,EAA2C;AACzC;;;;;AAKA,QAAIuC,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChC;;;AAGAc,gCAAgBW,iBAAhB,CAAkCzB,QAAlC;;AAEA;;;;;;AAOA,UAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtCV,kCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwC,CAAxC,CAFF,EAGE,CAHF;AAKD,OAND,MAMO;AACL0F,kCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC,CAAjC,CAFF,EAGE,CAHF;AAKD;AACF;;AAED;;;;AAIA,QAAIyC,iBAAOjD,KAAP,CAAauD,MAAjB,EAAyB;AACvBV,qBAAKC,IAAL;AACD,KAFD,MAEO;AACLD,qBAAKgB,KAAL;AACD;;AAED;;;;;AAKAoB,gCAAkBC,IAAlB;AACD;;AAED;;;;;AAKA,WAASwY,mBAAT,CAA6B7X,IAA7B,EAAmC;AACjC;;;;;;AAMA;;;;AAIA,QAAIqC,iBAAOY,WAAP,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B;;;;AAIArC,gCAAgBW,iBAAhB,CAAkC,IAAlC;;AAEA;;;AAGAX,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAaqF,IAAb,CAA3B,EAA+CA,IAA/C;AACD;;AAED;;;;;;AAMA,QAAIqC,iBAAOU,OAAP,CAAe,IAAf,EAAqB/C,IAArB,CAAJ,EAAgC;AAC9B;;;;AAIAY,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAaqF,IAAb,CAA3B,EAA+CA,IAA/C;AACD;;AAED;;;;AAIA,QAAI5C,iBAAOjD,KAAP,CAAauD,MAAjB,EAAyB;AACvBV,qBAAKC,IAAL;AACD,KAFD,MAEO;AACLD,qBAAKgB,KAAL;AACD;;AAED;;;;;AAKAoB,gCAAkBC,IAAlB;AACD;;AAED;;;;;;;AAOA,WAASyY,6BAAT,CAAuChY,QAAvC,EAAiDE,IAAjD,EAAuD;AACrD;;;;;;AAMA;;;;AAIA,QAAIqC,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChC;;;;AAIAc,gCAAgBW,iBAAhB,CAAkCzB,QAAlC;;AAEA;;;AAGAc,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqF,IAAjC,CAFF,EAGEA,IAHF;AAKD;;AAED;;;;;;AAMA,QAAIqC,iBAAOU,OAAP,CAAejD,QAAf,EAAyBE,IAAzB,CAAJ,EAAoC;AAClC;;;;AAIAY,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqF,IAAjC,CAFF,EAGEA,IAHF;AAKD;;AAED;;;;AAIA,QAAI5C,iBAAOjD,KAAP,CAAauD,MAAjB,EAAyB;AACvBV,qBAAKC,IAAL;AACD,KAFD,MAEO;AACLD,qBAAKgB,KAAL;AACD;;AAED;;;;;AAKAoB,gCAAkBC,IAAlB;AACD;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CApRe,EAAhB;;AAVA;;;;;;AAZA;;;;;;AAZA;;;;kBAwTegC,S;;;;;;;;;;;;;;AC1Tf;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;AAiBA,IAAI2B,gBAAiB,YAAW;AAC9B;;;;;;;AAOA,WAAS3D,MAAT,GAAkB;AAChB,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;;;AAMA,cAAQqB,iBAAO3C,cAAf;AACE,aAAK,CAAL;AACEuC,yBAAKkC,gBAAL,CAAsB,GAAtB;AACA;AACF,aAAK,GAAL;AACElC,yBAAKkC,gBAAL,CAAsB,CAAtB;AACA;AACF,aAAK,CAAL;AACElC,yBAAKkC,gBAAL,CAAsB,CAAtB;AACA;AATJ;;AAYA;;;AAGAiN,sCAAsB9M,IAAtB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CAzCmB,EAApB;;AAXA;;;;AAZA;;;;kBAkEe2D,a;;;;;;;;;;;;;;AC9Df;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;AAiBA,IAAIR,OAAQ,YAAW;AACrB;;;;;;;;;;AAUA,WAASnD,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA,UAAI+D,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;;AAEA;;;AAGA,UAAID,YAAY,IAAhB,EAAsB;AACpBiY;AACD;;AAED;;;AAGA,UAAIjY,YAAY,IAAhB,EAAsB;AACpBkY,2BAAmBlY,QAAnB;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASiY,gBAAT,GAA4B;AAC1B;;;;;AAKA,QAAI3a,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClEoG,gCAAgBa,WAAhB;AACD,KAFD,MAEO;AACLb,gCAAgBgB,mBAAhB,CAAoCxE,iBAAO5C,eAA3C;AACD;AACF;;AAED;;;;;;AAMA,WAASwd,kBAAT,CAA4BlY,QAA5B,EAAsC;AACpC;;;;AAIA,QAAIA,YAAY1C,iBAAO5C,eAAvB,EAAwC;AACtCoG,gCAAgBgB,mBAAhB,CAAoCxE,iBAAO5C,eAA3C;AACD,KAFD,MAEO;AACLqE,sBAAMC,YAAN,CACE,6EADF;AAGD;AACF;;AAED;;;AAGA,SAAO;AACL2T,YAAQA;AADH,GAAP;AAGD,CAlFU,EAAX;;AAXA;;;;AAZA;;;;kBA2GemD,I;;;;;;;;;;;;;;ACvGf;;;;AAMA;;;;;;AAEA;;;;;AAZA;;;;AAiBA,IAAIzB,WAAY,YAAW;AACzB;;;;;;;;AAQA,WAAS1B,MAAT,GAAkB;AAChB;;;AAGA,QAAIrV,iBAAOjD,KAAP,CAAa6B,QAAb,CAAsBnE,MAAtB,GAA+B,CAA/B,IAAoC,CAAxC,EAA2C;AACzC,UAAIogB,cAAc7a,iBAAOjD,KAAP,CAAa6B,QAAb,CAAsBwU,GAAtB,CAChBpT,iBAAOjD,KAAP,CAAa6B,QAAb,CAAsBnE,MAAtB,GAA+B,CADf,CAAlB;AAGA,UAAI4G,WAAWrB,iBAAOjD,KAAP,CAAasE,QAA5B;;AAEA;;;AAGArB,uBAAOpB,QAAP,GAAmBic,cAAcxZ,QAAf,GAA2B,GAA7C;AACD;;AAED;;;AAGAwT,uCAAyB5S,IAAzB;AACD;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CArCc,EAAf;;AAXA;;;;kBAkDe0B,Q;;;;;;;;;;;;;;ACpDf;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;AAiBA,IAAI6B,SAAU,YAAW;AACvB;;;;;;;;;;AAUA,WAASvD,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA,UAAI+D,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;;AAEA;;;AAGA,UAAID,YAAY,IAAhB,EAAsB;AACpBoY;AACD;;AAED;;;AAGA,UAAIpY,YAAY,IAAhB,EAAsB;AACpBqY,6BAAqBrY,QAArB;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASoY,kBAAT,GAA8B;AAC5B;;;AAGAzS,uBAASC,SAAT,CAAmB,CAACtI,iBAAOpC,MAA3B;;AAEA;;;AAGA2J,6BAAeC,UAAf;AACD;;AAED;;;;;;AAMA,WAASuT,oBAAT,CAA8BrY,QAA9B,EAAwC;AACtC;;;AAGA2F,uBAASE,iBAAT,CAA2B,CAACvI,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B9E,MAAvD,EAA+D8E,QAA/D;;AAEA;;;AAGA6E,6BAAeI,kBAAf,CAAkCjF,QAAlC;AACD;;AAED;;;AAGA,SAAO;AACL2S,YAAQA;AADH,GAAP;AAGD,CA/EY,EAAb;;AAXA;;;;AAZA;;;;kBAwGeuD,M;;;;;;;;;;;;;;ACpGf;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;AAiBA,IAAIE,aAAc,YAAW;AAC3B;;;;;;;AAOA,WAASzD,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA0J,yBAASG,aAAT,CAAuB,CAACxI,iBAAOnC,WAA/B;;AAEA;;;AAGA0J,+BAAeM,cAAf;AACD;AACF;;AAED;;;AAGA,SAAO;AACLwN,YAAQA;AADH,GAAP;AAGD,CAhCgB,EAAjB;;AAXA;;;;AAZA;;;;kBAyDeyD,U;;;;;;;;;;;;;;ACrDf;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAgBA,IAAIJ,UAAW,YAAW;AACxB;;;;;;;;;;AAUA,WAASrD,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA,UAAI+D,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;;AAEA;;;AAGA,UAAID,YAAY,IAAhB,EAAsB;AACpBsY;AACD,OAFD,MAEO;AACLC,8BAAsBvY,QAAtB;AACD;AACF;AACF;;AAED;;;AAGA,WAASsY,mBAAT,GAA+B;AAC7B;;;AAGAvS,uBAASG,aAAT;;AAEA;;;AAGAqG,8BAAgBvF,QAAhB,CAAyB1J,iBAAOjC,UAAhC;AACD;;AAED;;;;;AAKA,WAASkd,qBAAT,CAA+BvY,QAA/B,EAAyC;AACvC;;;AAGA+F,uBAASM,qBAAT,CAA+BrG,QAA/B;;AAEA;;;AAGAuM,8BAAgB9M,YAAhB,CAA6BO,QAA7B;AACD;;AAED;;;AAGA,SAAO;AACL2S,YAAQA;AADH,GAAP;AAGD,CAvEa,EAAd;;AAVA;;;;AAZA;;;;kBA+FeqD,O;;;;;;;;;;;;;;AC3Ff;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;AAyCA,IAAIQ,SAAU,YAAW;AACvB;;;;;;;;;;AAUA,WAAS7D,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA,UAAI+D,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;AACA,UAAIiD,YAAY,KAAKjD,YAAL,CAAkB,2BAAlB,CAAhB;AACA,UAAI8G,WAAW,KAAK9G,YAAL,CAAkB,yBAAlB,CAAf;;AAEA;;;;AAIA,UAAI8G,YAAY,IAAhB,EAAsB;AACpBhI,wBAAMC,YAAN,CACE,qGADF;AAGD;;AAED;;;;AAIA,UAAIkE,aAAa,IAAjB,EAAuB;AACrBnE,wBAAMC,YAAN,CACE,4FADF;AAGD;;AAED;;;AAGA,UAAI+H,YAAY,IAAZ,IAAoB7D,aAAa,IAArC,EAA2C;AACzC;;;AAGA,YAAIlD,YAAY,IAAhB,EAAsB;AACpBwY,2BAAiBnX,SAAS6B,SAAT,CAAjB,EAAsC7B,SAAS0F,QAAT,CAAtC;AACD,SAFD,MAEO;AACL0R,+BACEzY,QADF,EAEEqB,SAAS6B,SAAT,CAFF,EAGE7B,SAAS0F,QAAT,CAHF;AAKD;AACF;AACF;AACF;;AAED;;;;;;;AAOA,WAASyR,gBAAT,CAA0BtV,SAA1B,EAAqC6D,QAArC,EAA+C;AAC7C;;;;AAIAjG,8BAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAaqI,SAAb,CAA3B,EAAoDA,SAApD;AACAhG,mBAAKC,IAAL;;AAEA;;;AAGAmC,gCAAkBE,UAAlB;AACAF,gCAAkBI,QAAlB;;AAEA;;;AAGAxC,mBAAK0B,cAAL,CAAoBmI,QAApB;AACD;;AAED;;;;;;;;AAQA,WAAS0R,oBAAT,CAA8BzY,QAA9B,EAAwCkD,SAAxC,EAAmD6D,QAAnD,EAA6D;AAC3D;;;AAGA,QAAIxE,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChCc,gCAAgBW,iBAAhB,CAAkCzB,QAAlC;AACD;;AAED;;;;AAIAc,8BAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqI,SAAjC,CAFF,EAGEA,SAHF;AAKAhG,mBAAKC,IAAL;;AAEA;;;AAGAmC,gCAAkBE,UAAlB;AACAF,gCAAkBG,YAAlB;AACAH,gCAAkBI,QAAlB;;AAEA;;;AAGAxC,mBAAK0B,cAAL,CAAoBmI,QAApB;AACD;;AAED;;;AAGA,SAAO;AACL4L,YAAQA;AADH,GAAP;AAGD,CAzIY,EAAb;;AAXA;;;;;;AAZA;;;;;;AAZA;;;;kBA8Ke6D,M;;;;;;;;;;;;;;AChLf;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;AAiBA,IAAIhB,aAAc,YAAW;AAC3B;;;;;;;;;;;;AAYA,WAAS7C,MAAT,GAAkB;AAChB;;;AAGA,QAAI+F,qBAAqB,KAAKhT,KAA9B;;AAEA;;;AAGA,QAAIiT,eAAerb,iBAAOjD,KAAP,CAAasE,QAAb,IAAyB+Z,qBAAqB,GAA9C,CAAnB;;AAEA;;;AAGA,QAAI1Y,WAAW,KAAKC,YAAL,CAAkB,yBAAlB,CAAf;AACA,QAAIC,OAAO,KAAKD,YAAL,CAAkB,2BAAlB,CAAX;;AAEA;;;AAGA,QAAID,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC0Y,6BAAuBD,YAAvB,EAAqCD,kBAArC;AACD;;AAED;;;AAGA,QAAI1Y,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC2Y,+BAAyBF,YAAzB,EAAuCD,kBAAvC,EAA2D1Y,QAA3D;AACD;;AAED;;;AAGA,QAAIA,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC4Y,2BAAqBH,YAArB,EAAmCD,kBAAnC,EAAuDxY,IAAvD;AACD;;AAED;;;;AAIA,QAAIF,YAAY,IAAZ,IAAoBE,QAAQ,IAAhC,EAAsC;AACpC6Y,qCACEJ,YADF,EAEED,kBAFF,EAGE1Y,QAHF,EAIEE,IAJF;AAMD;AACF;;AAED;;;;;;;AAOA,WAAS0Y,sBAAT,CAAgCD,YAAhC,EAA8CD,kBAA9C,EAAkE;AAChE;;;AAGA,QAAI,CAACpb,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChC8T,qBAAKW,cAAL,CAAoB2G,YAApB;;AAEA;;;AAGAzW,mCAAmB3C,IAAnB,CACEmZ,kBADF,EAEEpb,iBAAO5C,eAFT,EAGE4C,iBAAO7C,YAHT;AAKD;AACF;;AAED;;;;;;;;AAQA,WAASoe,wBAAT,CACEF,YADF,EAEED,kBAFF,EAGE1Y,QAHF,EAIE;AACA;;;;AAIA,QAAI1C,iBAAO5C,eAAP,IAA0BsF,QAA9B,EAAwC;AACtC;;;AAGA,UAAI,CAAC1C,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChC8T,uBAAKW,cAAL,CAAoB2G,YAApB;;AAEA;;;AAGAzW,qCAAmB3C,IAAnB,CACEmZ,kBADF,EAEE1Y,QAFF,EAGE1C,iBAAO7C,YAHT;AAKD;AACF;AACF;;AAED;;;;;;;;AAQA,WAASqe,oBAAT,CAA8BH,YAA9B,EAA4CD,kBAA5C,EAAgExV,SAAhE,EAA2E;AACzE;;;;AAIA,QAAI5F,iBAAO7C,YAAP,IAAuByI,SAAvB,IAAoC5F,iBAAO5C,eAAP,IAA0B,IAAlE,EAAwE;AACtE;;;AAGA,UAAI,CAAC4C,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChC8T,uBAAKW,cAAL,CAAoB2G,YAApB;;AAEA;;;AAGAzW,qCAAmB3C,IAAnB,CACEmZ,kBADF,EAEEpb,iBAAO5C,eAFT,EAGEwI,SAHF;AAKD;AACF;AACF;;AAED;;;;;;;;;AASA,WAAS6V,8BAAT,CACEJ,YADF,EAEED,kBAFF,EAGE1Y,QAHF,EAIEkD,SAJF,EAKE;AACA;;;;;AAKA,QACE5F,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BvF,YAA3B,IAA2CyI,SAA3C,IACA5F,iBAAO5C,eAAP,IAA0BsF,QAF5B,EAGE;AACA;;;AAGA,UAAI,CAAC1C,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChC8T,uBAAKW,cAAL,CAAoB2G,YAApB;;AAEA;;;AAGAzW,qCAAmB3C,IAAnB,CAAwBmZ,kBAAxB,EAA4C1Y,QAA5C,EAAsDkD,SAAtD;AACD;AACF;AACF;;AAED;;;AAGA,SAAO;AACLyP,YAAQA;AADH,GAAP;AAGD,CA1MgB,EAAjB;;AAXA;;;;AAZA;;;;kBAmOe6C,U;;;;;;;;;;;;;;AC/Nf;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAZA;;;;AA4BA,IAAIX,OAAQ,YAAW;AACrB;;;;;;;AAOA,WAASlC,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGAqD,kCAAkBmB,WAAlB;;AAEA;;;AAGAvD,qBAAKG,IAAL;;AAEA;;;AAGAqG,4BAAYE,cAAZ;AACD;AACF;;AAED;;;AAGA,SAAO;AACL+O,YAAQA;AADH,GAAP;AAGD,CArCU,EAAX;;AAVA;;;;;;AAZA;;;;kBA6DekC,I;;;;;;;;;;;;;;AC/Df;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;AAyCA,IAAIV,aAAc,YAAW;AAC3B;;;;;;;AAOA,WAASxB,MAAT,GAAkB;AAChB;;;AAGAqG;;AAEA;;;AAGA7G,uCAAyB5S,IAAzB;;AAEA;;;AAGA0Z;;AAEA;;;AAGAC;AACD;;AAED;;;AAGA,WAASF,mBAAT,GAA+B;AAC7B;;;AAGA,QAAI1b,iBAAOjD,KAAP,CAAa6B,QAAb,CAAsBnE,MAAtB,GAA+B,CAA/B,IAAoC,CAAxC,EAA2C;AACzC,UAAIogB,cAAc7a,iBAAOjD,KAAP,CAAa6B,QAAb,CAAsBwU,GAAtB,CAChBpT,iBAAOjD,KAAP,CAAa6B,QAAb,CAAsBnE,MAAtB,GAA+B,CADf,CAAlB;AAGA,UAAI4G,WAAWrB,iBAAOjD,KAAP,CAAasE,QAA5B;;AAEArB,uBAAOpB,QAAP,GAAmBic,cAAcxZ,QAAf,GAA2B,GAA7C;AACD;AACF;;AAED;;;;AAIA,WAASsa,qBAAT,GAAiC;AAC/B;;;;;;AAMA,QAAI,CAAC3b,iBAAO/C,eAAP,CAAuBgD,IAA5B,EAAkC;AAChC;;;AAGA,UAAIa,cAAciT,eAAKC,mBAAL,EAAlB;;AAEA;;;AAGA,UAAI6H,2BAA2B9H,eAAKU,+BAAL,EAA/B;;AAEA;;;AAGA,UAAI1J,eAAegJ,eAAKK,mBAAL,EAAnB;;AAEA;;;;;AAKArP,6BAAauF,gBAAb,CAA8BxJ,WAA9B;;AAEA;;;AAGA8D,mCAAmB3C,IAAnB,CACE4Z,wBADF,EAEE7b,iBAAO5C,eAFT,EAGE4C,iBAAO7C,YAHT;;AAMA;;;AAGA2H,2CAA2B7C,IAA3B,CAAgC4Z,wBAAhC;;AAEA;;;AAGA9W,6BAAa+F,iBAAb,CAA+BhK,WAA/B,EAA4CiK,YAA5C;AACD;AACF;;AAED;;;AAGA,WAAS6Q,gBAAT,GAA4B;AAC1B;;;AAGA,QAAI3H,iBAAiB/K,KAAKC,KAAL,CAAWnJ,iBAAOjD,KAAP,CAAa+D,WAAxB,CAArB;;AAEA;;;AAGA,QACEd,iBAAO/C,eAAP,CAAuB6e,cAAvB,IAAyCtb,SAAzC,IACAR,iBAAO/C,eAAP,CAAuB6e,cAAvB,CAAsC7H,cAAtC,KAAyDzT,SAF3D,EAGE;AACA;;;;AAIA,UAAI,CAACR,iBAAO/C,eAAP,CAAuB6e,cAAvB,CAAsC7H,cAAtC,EAAsDnZ,GAA3D,EAAgE;AAC9DkF,yBAAO/C,eAAP,CAAuB6e,cAAvB,CAAsC7H,cAAtC,EAAsDnZ,GAAtD,GAA4D,IAA5D;AACAkF,yBAAO/C,eAAP,CAAuB6e,cAAvB,CAAsC7H,cAAtC;AACD;AACF,KAZD,MAYO;AACL;;;;;;AAMA,WAAK,IAAI1S,OAAT,IAAoBvB,iBAAO/C,eAAP,CAAuB6e,cAA3C,EAA2D;AACzD,YAAI9b,iBAAO/C,eAAP,CAAuB6e,cAAvB,CAAsCjL,cAAtC,CAAqDtP,OAArD,CAAJ,EAAmE;AACjEvB,2BAAO/C,eAAP,CAAuB6e,cAAvB,CAAsCva,OAAtC,EAA+CzG,GAA/C,GAAqD,KAArD;AACD;AACF;AACF;AACF;AACD;;;AAGA,SAAO;AACLua,YAAQA;AADH,GAAP;AAGD,CAlJgB,EAAjB;;AAXA;;;;;;AAZA;;;;;;AAZA;;;;AAZA;;;;kBAmMewB,U;;;;;;;;;;;;;;AChMf;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAXA;;;AA2BA,IAAIgB,aAAc,YAAW;AAC3B;;;;;;;AAOA,WAASxC,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;;;;;AAUA,UAAIR,SAAS,IAAb;;AAEA,UAAI6B,iBAAO7B,MAAP,GAAgB6B,iBAAO3B,gBAAvB,GAA0C,CAA9C,EAAiD;AAC/CF,iBAAS6B,iBAAO7B,MAAP,GAAgB6B,iBAAO3B,gBAAhC;AACD,OAFD,MAEO;AACLF,iBAAS,CAAT;AACD;;AAED;;;;AAIAyB,qBAAKoB,SAAL,CAAe7C,MAAf;;AAEA;;;AAGA4J,6BAAaC,QAAb,CAAsBhI,iBAAO7B,MAAP,IAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAAlD;;AAEA;;;AAGA+J,qCAAqBjG,IAArB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CAxDgB,EAAjB;;AAVA;;;;;;AAZA;;;;kBAgFewC,U;;;;;;;;;;;;;;AClFf;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAXA;;;AA2BA,IAAIO,eAAgB,YAAW;AAC7B;;;;;;;AAOA,WAAS/C,MAAT,GAAkB;AAChB;;;;AAIAzV,mBAAKoB,SAAL,CAAe,KAAKoH,KAApB;;AAEA;;;AAGAL,2BAAaC,QAAb,CAAsBhI,iBAAO7B,MAAP,IAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAAlD;;AAEA;;;AAGA+J,mCAAqBjG,IAArB;AACD;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CAhCkB,EAAnB;;AAVA;;;;;;AAZA;;;;kBAwDe+C,Y;;;;;;;;;;;;;;AC1Df;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;AAZA;;;;AAXA;;;AA2BA,IAAIT,WAAY,YAAW;AACzB;;;;;;;AAOA,WAAStC,MAAT,GAAkB;AAChB;;;;AAIA,QAAI,CAACrV,iBAAOrB,eAAZ,EAA6B;AAC3B;;;;;;;;AAUA,UAAIR,SAAS,IAAb;;AAEA,UAAI6B,iBAAO7B,MAAP,GAAgB6B,iBAAO3B,gBAAvB,IAA2C,GAA/C,EAAoD;AAClDF,iBAAS6B,iBAAO7B,MAAP,GAAgB6B,iBAAO3B,gBAAhC;AACD,OAFD,MAEO;AACLF,iBAAS,GAAT;AACD;;AAED;;;;AAIAyB,qBAAKoB,SAAL,CAAe7C,MAAf;;AAEA;;;AAGA4J,6BAAaC,QAAb,CAAsBhI,iBAAO7B,MAAP,IAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAAlD;;AAEA;;;AAGA+J,qCAAqBjG,IAArB;AACD;AACF;;AAED;;;AAGA,SAAO;AACLoT,YAAQA;AADH,GAAP;AAGD,CAxDc,EAAf;;AAVA;;;;;;AAZA;;;;kBAgFesC,Q;;;;;;;;;;;;;;ACjFf;;;;;;AAEA;;;;;;;AAOA,IAAIhI,KAAM,YAAW;AACnB;;;AAGA,WAASG,oBAAT,GAAgC;AAC9B;;;;AAIA,QAAIiM,iBACFhE,OAAOiE,YAAP,IACAjE,OAAOkE,kBADP,IAEAlE,OAAOmE,eAFP,IAGAnE,OAAOoE,aAHP,IAIApE,OAAOqE,cALT;;AAOA;;;;AAIA,QAAIL,cAAJ,EAAoB;AAClB;;;AAGA/b,uBAAOd,OAAP,GAAiB,IAAI6c,cAAJ,EAAjB;;AAEA;;;AAGA/b,uBAAOZ,QAAP,GAAkBY,iBAAOd,OAAP,CAAemd,cAAf,EAAlB;;AAEA;;;;AAIArc,uBAAOjD,KAAP,CAAauf,WAAb,GAA2B,WAA3B;;AAEA;;;AAGAtc,uBAAOb,MAAP,GAAgBa,iBAAOd,OAAP,CAAeqd,wBAAf,CAAwCvc,iBAAOjD,KAA/C,CAAhB;;AAEA;;;AAGAiD,uBAAOb,MAAP,CAAcqd,OAAd,CAAsBxc,iBAAOZ,QAA7B;;AAEA;;;AAGAY,uBAAOZ,QAAP,CAAgBod,OAAhB,CAAwBxc,iBAAOd,OAAP,CAAeud,WAAvC;AACD,KA/BD,MA+BO;AACLhO,uBAAiBC,iBAAjB,CACE,oGADF;AAGD;AACF;;AAED;;;AAGA,WAASkB,oBAAT,GAAgC;AAC9B;;;;AAIA,QAAImM,iBACFhE,OAAOiE,YAAP,IACAjE,OAAOkE,kBADP,IAEAlE,OAAOmE,eAFP,IAGAnE,OAAOoE,aAHP,IAIApE,OAAOqE,cALT;AAMApc,qBAAOf,uBAAP,GAAiC,KAAjC;;AAEA;;;AAGA,QAAI8c,cAAJ,EAAoB;AAClB;;;AAGA/b,uBAAOf,uBAAP,GAAiC,IAAjC;AACA,aAAO,IAAP;AACD,KAND,MAMO;AACL;;;AAGAe,uBAAOf,uBAAP,GAAiC,KAAjC;AACA,aAAO,KAAP;AACD;AACF;;AAED;;;AAGA,WAAS4Q,mBAAT,GAA8B;AAC5B,QAAIpQ,YAAY+C,SAASC,gBAAT,CAA0B,sBAA1B,CAAhB;AACA,QAAIuI,wBAAwBxI,SAASC,gBAAT,CAC1B,0BAD0B,CAA5B;;AAIA,QAAIhD,UAAUhF,MAAV,GAAmB,CAAnB,IAAwBuQ,sBAAsBvQ,MAAtB,GAA+B,CAA3D,EAA8D;AAC5D,aAAO,IAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAP;AACD;AACF;;AAED;;;AAGA,SAAO;AACLqV,0BAAsBA,oBADjB;AAELF,0BAAsBA,oBAFjB;AAGLC,yBAAqBA;AAHhB,GAAP;AAKD,CApHQ,EAAT,C,CAbA;;;;kBAmIeF,E;;;;;;;;;;;;;;AC1Hf;;;;AASA;;;;AAUA;;;;AASA;;;;AAMA;;;;AAMA;;;;AAOA;;;;AAMA;;;;AASA;;;;AASA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAEA;;;;AAEA;;;;;;AAEA;;;;;;;;AAhBA;;;;;;AAZA;;;;;;AAZA;;;;;;AAfA;;;AAGA;;;;;;AAlBA;;;;;;AAbA;;;;;;AAfA;;;AAGA;;;;;;AAtBA;;;AAGA;;;;AAwHA,IAAI+M,YAAa,YAAW;AAC1B;;;;;;;;;AASA,WAASxM,IAAT,CAAcjD,UAAd,EAA0B;AACxBsC,mBAAYhJ,UAAZ,CAAuB0G,UAAvB;AACD;;AAED;;;AAGA,WAAS0P,SAAT,GAAqB;AACnB,WAAO3c,gBAAP;AACD;;AAED;;;;;;;AAOA,WAAS4c,eAAT,GAA2B;AACzBrN,mBAAYgB,aAAZ;AACD;;AAED;;;;;;;AAOA,WAASsM,iBAAT,GAA6B;AAC3B,WAAO7c,iBAAO5C,eAAd;AACD;;AAED;;;;;;;AAOA,WAAS0f,gBAAT,GAA4B;AAC1B,WAAO9c,iBAAO3C,cAAd;AACD;;AAED;;;;;;;AAOA,WAASyE,gBAAT,CAA2Bib,KAA3B,EAAmC;AACjC;;;;;;;AAQAnd,mBAAKkC,gBAAL,CAAuBib,KAAvB;;AAEA;;;AAGAhO,oCAAsB9M,IAAtB;AACD;;AAED;;;;;;;AAOA,WAAS+a,SAAT,GAAqB;AACnB,WAAOhd,iBAAOpC,MAAd;AACD;;AAED;;;;;;;AAOA,WAASqf,iBAAT,CAA2BC,WAA3B,EAAwC;AACtC,WAAOld,iBAAOxC,SAAP,CAAiB0f,WAAjB,EAA8Btf,MAArC;AACD;;AAED;;;;;;;AAOA,WAASuf,UAAT,GAAsB;AACpB,WAAOnd,iBAAOjC,UAAd;AACD;;AAED;;;;;;;;AAQA,WAASqf,kBAAT,CAA4B1a,QAA5B,EAAsC;AACpC,WAAO1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAAlC;AACD;;AAED;;;;;;;;;AASA,WAASwE,UAAT,CAAoBxE,OAApB,EAA6B;AAC3BuE,uBAASC,UAAT,CAAoBxE,OAApB;;AAEA+K,8BAAgBvF,QAAhB;AACD;;AAED;;;;;;;;;AASA,WAASb,kBAAT,CAA4BnG,QAA5B,EAAsCwB,OAAtC,EAA+C;AAC7CuE,uBAASI,kBAAT,CAA4BnG,QAA5B,EAAsCwB,OAAtC;;AAEA+K,8BAAgBvF,QAAhB;AACAuF,8BAAgB9M,YAAhB,CAA6BO,QAA7B;AACD;;AAED;;;;;;;;AAQA,WAAS4F,SAAT,CAAmB+U,WAAnB,EAAgC;AAC9BhV,uBAASC,SAAT,CAAmB+U,WAAnB;AACA9V,6BAAeC,UAAf;AACD;;AAED;;;;;;;;;AASA,WAASe,iBAAT,CAA2B7F,QAA3B,EAAqC2a,WAArC,EAAkD;AAChDhV,uBAASE,iBAAT,CAA2B8U,WAA3B,EAAwC3a,QAAxC;AACA6E,6BAAeI,kBAAf,CAAkCjF,QAAlC;AACD;;AAED;;;;;;;;AAQA,WAAS8F,aAAT,CAAuB6U,WAAvB,EAAoC;AAClC,QAAI,CAACrd,iBAAOrB,eAAZ,EAA6B;AAC3B;;;AAGA0J,yBAASG,aAAT,CAAuB,CAACxI,iBAAOnC,WAA/B;;AAEA;;;AAGA0J,+BAAeM,cAAf;AACD;AACF;;AAED;;;;;;;AAOA,WAASyV,kBAAT,GAA8B;AAC5B,WAAOtd,iBAAOhC,iBAAd;AACD;;AAED;;;;;;;AAOA,WAASuf,qBAAT,GAAgC;AAC9B,WAAOvd,iBAAO/B,oBAAd;AACD;;AAED;;;;;;;;AAQA,WAASuf,kBAAT,CAA4B3b,GAA5B,EAAiC;AAC/B7B,qBAAOhC,iBAAP,GAA2B6D,GAA3B;AACD;;AAED;;;;;;;;AAQC,WAAS4b,qBAAT,CAA+B5b,GAA/B,EAAmC;AACjC7B,qBAAO0d,mBAAP,GAA6B7b,GAA7B;AACD;;AAEF;;;;;;;AAOA,WAAS8b,uBAAT,GAAmC;AACjC;;;AAGA,WAAQ3d,iBAAOjD,KAAP,CAAa+D,WAAb,GAA2Bd,iBAAOjD,KAAP,CAAasE,QAAzC,GAAqD,GAA5D;AACD;;AAED;;;;;;;AAOA,WAASuc,oBAAT,GAAgC;AAC9B;;;AAGA,WAAO5d,iBAAOjD,KAAP,CAAa+D,WAApB;AACD;;AAED;;;;;;;AAOA,WAAS+c,eAAT,GAA2B;AACzB;;;AAGA,WAAO7d,iBAAOjD,KAAP,CAAasE,QAApB;AACD;;AAED;;;;;;;;;AASA,WAASyc,uBAAT,CAAiC1O,UAAjC,EAA6C;AAC3C;;;AAGA,QAAI,OAAOA,UAAP,IAAqB,QAArB,IAAkCA,aAAa,CAAb,IAAkBA,aAAa,GAArE,EAA2E;AACzE;;;AAGApP,uBAAOjD,KAAP,CAAa+D,WAAb,GAA2Bd,iBAAOjD,KAAP,CAAasE,QAAb,IAAyB+N,aAAa,GAAtC,CAA3B;AACD;AACF;;AAED;;;;;;;;AAQA,WAAS2O,QAAT,CAAkBzb,KAAlB,EAAyB;AACvB;;;AAGAtC,qBAAO9B,KAAP,GAAeoE,KAAf;AACD;;AAED;;;;;;;;;AASA,WAAS0b,qBAAT,GAAiC;AAC/B,WAAOhe,iBAAO/C,eAAd;AACD;;AAED;;;;;;;;AAQA,WAASghB,yBAAT,GAAqC;AACnC,WAAOje,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,CAAP;AACD;;AAED;;;;;;;;;AASA,WAAS8gB,cAAT,CAAwBpa,KAAxB,EAA+B;AAC7B,WAAO9D,iBAAOzC,KAAP,CAAauG,KAAb,CAAP;AACD;;AAED;;;;;;;;;;AAUA,WAASqa,sBAAT,CAAgCzb,QAAhC,EAA0CoB,KAA1C,EAAiD;AAC/C,QAAIlB,OAAO5C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,CAAX;;AAEA,WAAOlB,IAAP;AACD;;AAED;;;;;;;;;;AAUA,WAASwb,OAAT,CAAiBxb,IAAjB,EAAuB;AACrB;;;AAGA,QAAI5C,iBAAOzC,KAAP,IAAgBiD,SAApB,EAA+B;AAC7BR,uBAAOzC,KAAP,GAAe,EAAf;AACD;;AAEDyC,qBAAOzC,KAAP,CAAanC,IAAb,CAAkBwH,IAAlB;;AAEA,QAAI5C,iBAAOjC,UAAX,EAAuB;AACrBiC,uBAAOlC,YAAP,CAAoB1C,IAApB,CAAyBwH,IAAzB;AACD;;AAED,QAAIkK,qBAAWgC,eAAX,CAA2BlM,KAAKf,GAAhC,CAAJ,EAA0C;AACxCiL,2BAAWmB,8BAAX,CACErL,KAAKf,GADP,EAEE,IAFF,EAGE7B,iBAAOzC,KAAP,CAAa9C,MAAb,GAAsB,CAHxB,EAIEuF,iBAAOjC,UAJT;AAMD;;AAED,WAAOiC,iBAAOzC,KAAP,CAAa9C,MAAb,GAAsB,CAA7B;AACD;;AAED;;;;;;;;;;;AAWA,WAAS4jB,iBAAT,CAA2Bzb,IAA3B,EAAiCF,QAAjC,EAA2C;AACzC,QAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,KAA8BlC,SAAlC,EAA6C;AAC3CR,uBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCnC,IAAjC,CAAsCwH,IAAtC;;AAEA,UAAI5C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtClE,yBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAA3B,CAAwC1C,IAAxC,CAA6CwH,IAA7C;AACD;;AAED,UAAIkK,qBAAWgC,eAAX,CAA2BlM,KAAKf,GAAhC,CAAJ,EAA0C;AACxCiL,6BAAWmB,8BAAX,CACErL,KAAKf,GADP,EAEEa,QAFF,EAGE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAAjC,GAA0C,CAH5C,EAIEuF,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAJ7B;AAMD;;AAED,aAAOlE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiC9C,MAAjC,GAA0C,CAAjD;AACD,KAjBD,MAiBO;AACLgH,sBAAMC,YAAN,CAAmB,yBAAnB;AACA,aAAO,IAAP;AACD;AACF;;AAED;;;;;;;AAOA,WAAS4c,WAAT,CAAqBxS,GAArB,EAA0ByS,IAA1B,EAAgChhB,KAAhC,EAAuC;AACrC;;;AAGA,QAAIyC,iBAAOxC,SAAP,CAAiBsO,GAAjB,KAAyBtL,SAA7B,EAAwC;AACtC;;;AAGAR,uBAAOxC,SAAP,CAAiBsO,GAAjB,IAAwB,EAAxB;;AAEA;;;AAGA,UAAI0S,cAAc,CAAC,QAAD,EAAW,SAAX,EAAsB,cAAtB,EAAsC,OAAtC,EAA+C,KAA/C,CAAlB;;AAEA;;;;AAIA,WAAK,IAAIC,OAAT,IAAoBF,IAApB,EAA0B;AACxB,YAAIC,YAAYzX,OAAZ,CAAoB0X,OAApB,IAA+B,CAAnC,EAAsC;AACpCze,2BAAOxC,SAAP,CAAiBsO,GAAjB,EAAsB2S,OAAtB,IAAiCF,KAAKE,OAAL,CAAjC;AACD;AACF;;AAED;;;AAGAze,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,GAA8BA,KAA9B;AACAyC,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsB3O,YAAtB,GAAqC,IAArC;AACA6C,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBlO,MAAtB,GAA+B,KAA/B;AACAoC,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsB5H,OAAtB,GAAgC,KAAhC;AACAlE,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBhO,YAAtB,GAAqC,EAArC;;AAEA,aAAOkC,iBAAOxC,SAAP,CAAiBsO,GAAjB,CAAP;AACD,KA/BD,MA+BO;AACLrK,sBAAMC,YAAN,CAAmB,0CAAnB;AACA,aAAO,IAAP;AACD;AACF;;AAED;;;;;;;;;AASA,WAASgd,UAAT,CAAoB5a,KAApB,EAA2B;AACzB9D,qBAAOzC,KAAP,CAAaohB,MAAb,CAAoB7a,KAApB,EAA2B,CAA3B;AACD;;AAED;;;;;;;;;;AAUA,WAAS8a,sBAAT,CAAgC9a,KAAhC,EAAuCpB,QAAvC,EAAiD;AAC/C,QAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,KAA8BlC,SAAlC,EAA6C;AAC3CR,uBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCohB,MAAjC,CAAwC7a,KAAxC,EAA+C,CAA/C;AACD;AACF;;AAED;;;;;;;;;;AAUA,WAAS+a,OAAT,CAAiBjc,IAAjB,EAAuB;AACrB;;;;AAIA,QAAIA,KAAKf,GAAT,EAAc;AACZ7B,uBAAOjD,KAAP,CAAa4E,GAAb,GAAmBiB,KAAKf,GAAxB;AACA7B,uBAAO/C,eAAP,GAAyB2F,IAAzB;AACA5C,uBAAO9C,YAAP,GAAsB0F,KAAK8B,KAA3B;AACD,KAJD,MAIO;AACL;;;;AAIAjD,sBAAMC,YAAN,CAAmB,+BAAnB;AACD;;AAED;;;AAGA9B,mBAAKC,IAAL;;AAEA;;;AAGAmC,gCAAkBC,IAAlB;;AAEA;;;AAGAkD,+BAAiBC,eAAjB;;AAEA;;;;AAIAR,iCAAmBC,aAAnB;;AAEA;;;AAGAC,yCAA2BD,aAA3B;;AAEA;;;AAGAE,2BAAaC,iBAAb;;AAEA;;;AAGAD,2BAAaQ,kBAAb;;AAEA;;;AAGAa,0BAAYE,cAAZ;AACD;;AAED;;;;;;;;AAQA,WAASwY,eAAT,CAAyBhb,KAAzB,EAAgC;AAC9B;;;AAGAlE,mBAAKG,IAAL;;AAEA;;;AAGA,QAAIkF,iBAAOY,WAAP,CAAmB,IAAnB,CAAJ,EAA8B;AAC5BrC,gCAAgBW,iBAAhB,CAAkC,IAAlC;;AAEAX,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAauG,KAAb,CAA3B,EAAgDA,KAAhD;AACD;;AAED;;;AAGA,QAAImB,iBAAOU,OAAP,CAAe,IAAf,EAAqB7B,KAArB,CAAJ,EAAiC;AAC/BN,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAauG,KAAb,CAA3B,EAAgDA,KAAhD;AACD;;AAED;;;AAGAlE,mBAAKC,IAAL;;AAEA;;;AAGAuG,0BAAYE,cAAZ;;AAEA;;;AAGAtE,gCAAkBC,IAAlB;AACD;;AAED;;;;;;;;;AASA,WAAS8c,uBAAT,CAAiCjb,KAAjC,EAAwCpB,QAAxC,EAAkD;AAChD9C,mBAAKG,IAAL;;AAEA;;;AAGA,QAAIkF,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChCc,gCAAgBW,iBAAhB,CAAkCzB,QAAlC;;AAEAc,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,CAFF,EAGEA,KAHF;AAKD;;AAED;;;AAGA,QAAImB,iBAAOU,OAAP,CAAejD,QAAf,EAAyBoB,KAAzB,CAAJ,EAAqC;AACnCN,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,CAFF,EAGEA,KAHF;AAKD;;AAED;;;AAGA9B,gCAAkBC,IAAlB;;AAEA;;;AAGArC,mBAAKC,IAAL;;AAEA;;;AAGAuG,0BAAYE,cAAZ;AACD;;AAED;;;;;;;;;AASA,WAASzG,IAAT,GAAgB;AACdD,mBAAKC,IAAL;;AAEAuG,0BAAYE,cAAZ;AACD;;AAED;;;;;;;;;AASA,WAAS1F,KAAT,GAAiB;AACfhB,mBAAKgB,KAAL;;AAEAwF,0BAAYE,cAAZ;AACD;;AAED;;;;;;;AAOA,WAAS0Y,QAAT,GAAoB;AAClB,WAAOhf,iBAAOjD,KAAd;AACD;;AAED;;;;;;;AAOA,WAASkiB,WAAT,GAAuB;AACrB,WAAOjf,iBAAOZ,QAAd;AACD;;AAED;;;;;;;;AAQA,WAAS8f,IAAT,GAA+B;AAAA,QAAjBxc,QAAiB,uEAAN,IAAM;;AAC7B,QAAIyc,WAAW,EAAf;AACA;;;;AAIA,QAAIzc,YAAY,EAAZ,IAAkBA,YAAY,IAAlC,EAAwC;AACtC;;;;AAIA,UAAI1C,iBAAO5C,eAAP,IAA0B,IAA1B,IAAkC4C,iBAAO5C,eAAP,IAA0B,EAAhE,EAAoE;AAClEoG,kCAAgBC,OAAhB;AACD,OAFD,MAEO;AACLD,kCAAgBS,eAAhB,CAAgCjE,iBAAO5C,eAAvC;AACD;AACF,KAVD,MAUO;AACLoG,gCAAgBS,eAAhB,CAAgCvB,QAAhC;AACD;AACF;;AAED;;;;;;;;AAQA,WAAS0c,IAAT,GAA+B;AAAA,QAAjB1c,QAAiB,uEAAN,IAAM;;AAC7B,QAAI2c,WAAW,EAAf;;AAEA;;;;AAIA,QAAI3c,YAAY,EAAZ,IAAkBA,YAAY,IAAlC,EAAwC;AACtC;;;;AAIA,UAAI1C,iBAAO5C,eAAP,IAA0B,IAA1B,IAAkC4C,iBAAO5C,eAAP,IAA0B,EAAhE,EAAoE;AAClEoG,kCAAgBa,WAAhB;AACD,OAFD,MAEO;AACLb,kCAAgBgB,mBAAhB,CAAoCxE,iBAAO5C,eAA3C;AACD;AACF,KAVD,MAUO;AACLoG,gCAAgBgB,mBAAhB,CAAoC9B,QAApC;AACD;AACF;;AAED;;;;;;;AAOA,WAAS4c,QAAT,GAAoB;AAClB,WAAOtf,iBAAOzC,KAAd;AACD;;AAED;;;;;;;;AAQA,WAASgiB,kBAAT,CAA4B7c,QAA5B,EAAsC;AACpC,WAAO1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAAlC;AACD;;AAED;;;;;;;;AAQA,WAASiiB,aAAT,GAAyB;AACvB,QAAIxf,iBAAOjC,UAAX,EAAuB;AACrB,aAAOiC,iBAAOlC,YAAd;AACD,KAFD,MAEO;AACL,aAAOkC,iBAAOzC,KAAd;AACD;AACF;;AAED;;;;;;;;;AASA,WAASkiB,qBAAT,CAA+B/c,QAA/B,EAAyC;AACvC,QAAI1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BwB,OAA/B,EAAwC;AACtC,aAAOlE,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B5E,YAAlC;AACD,KAFD,MAEO;AACL,aAAOkC,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAAlC;AACD;AACF;;AAED;;;;;;;AAOA,WAASmiB,cAAT,GAA0B;AACxB,WAAO3b,SAAS/D,iBAAO7C,YAAhB,CAAP;AACD;;AAED;;;;;;;AAOA,WAASwiB,UAAT,GAAsB;AACpB,WAAO3f,iBAAOpE,OAAd;AACD;;AAED;;;;;;;AAOA,WAASgkB,WAAT,GAAuB;AACrB,WAAO5f,iBAAOpB,QAAd;AACD;;AAED;;;;;;;;;;AAUA,WAASihB,MAAT,CAAgBte,OAAhB,EAAyBqE,SAAzB,EAAqD;AAAA,QAAjBlD,QAAiB,uEAAN,IAAM;;AACnDnB,cAAUwC,SAASxC,OAAT,CAAV;;AAEA,QAAImB,YAAY,IAAhB,EAAsB;AACpB;;;AAGA,UAAIuC,iBAAOY,WAAP,CAAmBnD,QAAnB,CAAJ,EAAkC;AAChCc,kCAAgBW,iBAAhB,CAAkCzB,QAAlC;AACD;;AAED;;;;AAIAc,gCAAgBY,kBAAhB,CACE1B,QADF,EAEE1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqI,SAAjC,CAFF,EAGEA,SAHF;AAKAhG,qBAAKC,IAAL;;AAEA;;;AAGAmC,kCAAkBE,UAAlB;AACAF,kCAAkBG,YAAlB;AACAH,kCAAkBI,QAAlB;;AAEA;;;AAGAxC,qBAAK0B,cAAL,CAAoBC,OAApB;AACD,KA9BD,MA8BO;AACL;;;;AAIAiC,gCAAgBQ,UAAhB,CAA2BhE,iBAAOzC,KAAP,CAAaqI,SAAb,CAA3B,EAAoDA,SAApD;AACAhG,qBAAKC,IAAL;;AAEA;;;AAGAmC,kCAAkBE,UAAlB;AACAF,kCAAkBI,QAAlB;;AAEA;;;AAGAxC,qBAAK0B,cAAL,CAAoBC,OAApB;AACD;AACF;;AAED;;;;;;;;;;;;AAYA,WAASue,eAAT,CAAyBhc,KAAzB,EAAgCic,QAAhC,EAA2D;AAAA,QAAjBrd,QAAiB,uEAAN,IAAM;;AACzD;;;AAGA,QACEA,YAAY,EAAZ,IACAA,YAAY,IADZ,IAEA1C,iBAAOxC,SAAP,CAAiBkF,QAAjB,KAA8BlC,SAHhC,EAIE;AACA;;;AAGA,WAAK,IAAIsL,GAAT,IAAgBiU,QAAhB,EAA0B;AACxB,YAAIA,SAASlP,cAAT,CAAwB/E,GAAxB,CAAJ,EAAkC;AAChC,cAAIA,OAAO,KAAP,IAAgBA,OAAO,KAAvB,IAAgCA,OAAO,MAAvC,IAAiDA,OAAO,MAA5D,EAAoE;AAClE9L,6BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCuG,KAAjC,EAAwCgI,GAAxC,IAA+CiU,SAASjU,GAAT,CAA/C;AACD;AACF;AACF;AACF,KAfD,MAeO;AACL;;;AAGA,WAAK,IAAIA,GAAT,IAAgBiU,QAAhB,EAA0B;AACxB,YAAIA,SAASlP,cAAT,CAAwB/E,GAAxB,CAAJ,EAAkC;AAChC,cAAIA,OAAO,KAAP,IAAgBA,OAAO,KAAvB,IAAgCA,OAAO,MAAvC,IAAiDA,OAAO,MAA5D,EAAoE;AAClE9L,6BAAOzC,KAAP,CAAauG,KAAb,EAAoBgI,GAApB,IAA2BiU,SAASjU,GAAT,CAA3B;AACD;AACF;AACF;AACF;;AAED;;;AAGA3G,+BAAiBC,eAAjB;AACAD,+BAAiBmC,YAAjB;AACD;;AAED,WAAS0Y,mBAAT,CAA6Btd,QAA7B,EAAuCqd,QAAvC,EAAiD;AAC/C,QAAI/f,iBAAOxC,SAAP,CAAiBkF,QAAjB,KAA8BlC,SAAlC,EAA6C;AAC3C;;;;AAIA,UAAIge,cAAc,CAAC,QAAD,EAAW,SAAX,EAAsB,cAAtB,EAAsC,OAAtC,EAA+C,KAA/C,CAAlB;;AAEA,WAAK,IAAI1S,GAAT,IAAgBiU,QAAhB,EAA0B;AACxB,YAAIA,SAASlP,cAAT,CAAwB/E,GAAxB,CAAJ,EAAkC;AAChC,cAAI0S,YAAYzX,OAAZ,CAAoB+E,GAApB,IAA2B,CAA/B,EAAkC;AAChC9L,6BAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BoJ,GAA3B,IAAkCiU,SAASjU,GAAT,CAAlC;AACD;AACF;AACF;;AAED3G,iCAAiB+B,uBAAjB;AACD,KAhBD,MAgBO;AACLzF,sBAAMC,YAAN,CAAmB,wCAAnB;AACD;AACF;;AAED;;;;;;;;AAQA,WAASue,QAAT,CAAkBtL,IAAlB,EAAwB;AACtB3U,qBAAOjB,KAAP,GAAe4V,IAAf;AACD;;AAED;;;;;;;AAOA,WAASuL,QAAT,GAAoB;AAClB,WAAOlgB,iBAAOjB,KAAd;AACD;;AAED;;;;;AAKA,WAASohB,cAAT,GAA0B;AACxB,WAAOngB,iBAAOhB,YAAd;AACD;;AAED;;;;;;;;;;;;AAYA,WAASohB,qBAAT,CAA+B3U,aAA/B,EAA8CU,WAA9C,EAA2D;AACzDrM,6BAAeoM,QAAf,CAAwBT,aAAxB,EAAuCU,WAAvC;AACD;;AAED;;;;;;AAMA,WAASkU,wBAAT,CAAkC3d,QAAlC,EAA4C4d,gBAA5C,EAA8D;AAC5D,QAAItgB,iBAAOxC,SAAP,CAAiBkF,QAAjB,KAA8BlC,SAAlC,EAA6C;AAC3C,UAAIR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCghB,gBAAhC,KAAqD9f,SAAzD,EAAoE;AAClER,yBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2B+I,aAA3B,GAA2C6U,gBAA3C;AACD,OAFD,MAEO;AACL7e,wBAAMC,YAAN,CACE,sDADF;AAGD;AACF,KARD,MAQO;AACLD,sBAAMC,YAAN,CAAmB,kDAAnB;AACD;AACF;;AAED;;;;;;AAMA,WAAS6e,oBAAT,CAA8B3a,SAA9B,EAAyC0a,gBAAzC,EAA2D;AACzD,QAAItgB,iBAAOzC,KAAP,CAAaqI,SAAb,CAAJ,EAA6B;AAC3B,UAAI5F,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCghB,gBAAhC,KAAqD9f,SAAzD,EAAoE;AAClER,yBAAOzC,KAAP,CAAaqI,SAAb,EAAwB6F,aAAxB,GAAwC6U,gBAAxC;AACD,OAFD,MAEO;AACL7e,wBAAMC,YAAN,CACE,sDADF;AAGD;AACF,KARD,MAQO;AACLD,sBAAMC,YAAN,CAAmB,mCAAnB;AACD;AACF;;AAED;;;;;;;AAOA,WAAS8e,8BAAT,CACE9d,QADF,EAEEkD,SAFF,EAGE0a,gBAHF,EAIE;AACA,QAAItgB,iBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CAAiCqI,SAAjC,KAA+CpF,SAAnD,EAA8D;AAC5D,UAAIR,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCghB,gBAAhC,KAAqD9f,SAAzD,EAAoE;AAClER,yBAAOxC,SAAP,CAAiBkF,QAAjB,EAA2BnF,KAA3B,CACEqI,SADF,EAEE6F,aAFF,GAEkB6U,gBAFlB;AAGD,OAJD,MAIO;AACL7e,wBAAMC,YAAN,CACE,sDADF;AAGD;AACF,KAVD,MAUO;AACLD,sBAAMC,YAAN,CAAmB,qDAAnB;AACD;AACF;;AAED;;;AAGA,WAAS+e,sBAAT,CAAgCH,gBAAhC,EAAkD;AAChD,QAAItgB,iBAAOX,cAAP,CAAsBC,SAAtB,CAAgCghB,gBAAhC,KAAqD9f,SAAzD,EAAoE;AAClER,uBAAOyL,aAAP,GAAuB6U,gBAAvB;AACD,KAFD,MAEO;AACL7e,sBAAMC,YAAN,CACE,sDADF;AAGD;AACF;;AAED;;;;;AAKA,WAASV,SAAT,CAAoBC,WAApB,EAAiC;AAC/BrB,mBAAKoB,SAAL,CAAgBC,WAAhB;AACD;;AAED;;;AAGA,WAASyf,SAAT,GAAoB;AAClB,WAAO1gB,iBAAO7B,MAAd;AACD;;AAED;;;AAGA,SAAO;AACL+R,UAAMA,IADD;AAELyM,eAAWA,SAFN;AAGLC,qBAAiBA,eAHZ;AAILC,uBAAmBA,iBAJd;AAKLC,sBAAkBA,gBALb;AAMLhb,sBAAkBA,gBANb;AAOLkb,eAAWA,SAPN;AAQLC,uBAAmBA,iBARd;AASLE,gBAAYA,UATP;AAULC,wBAAoBA,kBAVf;AAWL1U,gBAAYA,UAXP;AAYLG,wBAAoBA,kBAZf;AAaLP,eAAWA,SAbN;AAcLE,mBAAeA,aAdV;AAeLD,uBAAmBA,iBAfd;AAgBL+U,wBAAoBA,kBAhBf;AAiBLE,wBAAoBA,kBAjBf;AAkBLD,2BAAuBA,qBAlBlB;AAmBLE,2BAAuBA,qBAnBlB;AAoBLE,6BAAyBA,uBApBpB;AAqBLG,6BAAyBA,uBArBpB;AAsBLF,0BAAsBA,oBAtBjB;AAuBLC,qBAAiBA,eAvBZ;AAwBLE,cAAUA,QAxBL;AAyBLC,2BAAuBA,qBAzBlB;AA0BLC,+BAA2BA,yBA1BtB;AA2BLC,oBAAgBA,cA3BX;AA4BLC,4BAAwBA,sBA5BnB;AA6BLC,aAASA,OA7BJ;AA8BLC,uBAAmBA,iBA9Bd;AA+BLK,gBAAYA,UA/BP;AAgCLE,4BAAwBA,sBAhCnB;AAiCLC,aAASA,OAjCJ;AAkCLC,qBAAiBA,eAlCZ;AAmCLC,6BAAyBA,uBAnCpB;AAoCLlf,UAAMA,IApCD;AAqCLe,WAAOA,KArCF;AAsCLoe,cAAUA,QAtCL;AAuCLC,iBAAaA,WAvCR;AAwCLC,UAAMA,IAxCD;AAyCLE,UAAMA,IAzCD;AA0CLE,cAAUA,QA1CL;AA2CLC,wBAAoBA,kBA3Cf;AA4CLC,mBAAeA,aA5CV;AA6CLC,2BAAuBA,qBA7ClB;AA8CLC,oBAAgBA,cA9CX;AA+CLC,gBAAYA,UA/CP;AAgDLC,iBAAaA,WAhDR;AAiDLC,YAAQA,MAjDH;AAkDLC,qBAAiBA,eAlDZ;AAmDLE,yBAAqBA,mBAnDhB;AAoDLC,cAAUA,QApDL;AAqDLC,cAAUA,QArDL;AAsDLC,oBAAgBA,cAtDX;AAuDL7B,iBAAaA,WAvDR;AAwDL8B,2BAAuBA,qBAxDlB;AAyDLC,8BAA0BA,wBAzDrB;AA0DLE,0BAAsBA,oBA1DjB;AA2DLC,oCAAgCA,8BA3D3B;AA4DLC,4BAAwBA,sBA5DnB;AA6DLC,eAAWA,SA7DN;AA8DL1f,eAAWA;AA9DN,GAAP;AAgED,CA5tCe,EAAhB;;AAhBA;;;;;;AAZA;;;;;;AAZA;;;;;;AAZA;;;;;;AAlBA;;;AAGA;;;;;;AAhBA;;;;;;;AAZA;;;;;;AAnBA;;;AAGA;;;;;AAvBA;;;;AAIA;;;;;kBAg2Ce0b,S;;;;;;;;;;;;;;ACh2Cf;;;;AAMA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAEA;;;;;;;AAZA;;;;;;AAZA;;;;AA6BA,IAAIjM,uBAAwB,YAAW;AACrC;;;;;AAKA,WAASlK,UAAT,CAAoB/I,SAApB,EAA+B;AAC7B;;;AAGAwC,qBAAOxC,SAAP,GAAmBA,SAAnB;;AAEA;;;AAGAmjB;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;;AAEA;;;AAGAC;AACD;;AAED;;;;;AAKA,WAASJ,+BAAT,GAA2C;AACzC;;;;AAIA,SAAK,IAAI/U,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChCwC,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsB3O,YAAtB,GAAqC,IAArC;AACD;AACF;;AAED;;;;;;;AAOA,WAASwjB,oBAAT,GAAgC;AAC9B;;;AAGA,SAAK,IAAI7U,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChC;;;AAGA,UAAIwC,iBAAOxC,SAAP,CAAiBqT,cAAjB,CAAgC/E,GAAhC,CAAJ,EAA0C;AACxC;;;AAGA,YAAI9L,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAA1B,EAAiC;AAC/B;;;AAGA,eAAK,IAAIpC,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4B9C,MAAhD,EAAwDU,GAAxD,EAA6D;AAC3D,gBAAI8J,iBAAOe,KAAP,CAAahG,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,CAAb,CAAJ,EAAkD;AAChD6E,+BAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,IACE6E,iBAAOzC,KAAP,CAAayC,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,CAAb,CADF;;AAGA6E,+BAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,EAA+B2I,KAA/B,GAAuC3I,CAAvC;AACD;AACD;;;;AAIA,gBACE8J,iBAAOe,KAAP,CAAahG,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,CAAb,KACA,CAAC6E,iBAAOzC,KAAP,CAAayC,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,CAAb,CAFH,EAGE;AACAsG,8BAAMC,YAAN,CACE,qBACE1B,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,CADF,GAEE,yBAFF,GAGE2Q,GAHF,GAIE,sCALJ;AAOD;;AAED;;;AAGA,gBAAI,CAAC7G,iBAAOe,KAAP,CAAahG,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,CAAb,CAAL,EAAmD;AACjD6E,+BAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,EAA+B2I,KAA/B,GAAuC3I,CAAvC;AACD;AACF;AACF;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAASylB,kBAAT,GAA8B;AAC5B;;;AAGA,SAAK,IAAI9U,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChC;;;AAGA,UAAIwC,iBAAOxC,SAAP,CAAiBqT,cAAjB,CAAgC/E,GAAhC,CAAJ,EAA0C;AACxC;;;;AAIA,aAAK,IAAI3Q,IAAI,CAAb,EAAgBA,IAAI6E,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4B9C,MAAhD,EAAwDU,GAAxD,EAA6D;AAC3D;;;AAGA,cAAI2R,qBAAWgC,eAAX,CAA2B9O,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,EAA+B0G,GAA1D,CAAJ,EAAoE;AAClE;;;;;AAKA,gBAAI7B,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,EAA+BqT,eAA/B,IAAkDhO,SAAtD,EAAiE;AAC/DsM,mCAAWmB,8BAAX,CACEjO,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4BpC,CAA5B,EAA+B0G,GADjC,EAEEiK,GAFF,EAGE3Q,CAHF;AAKD;AACF;AACF;AACF;AACF;AACF;;AAED;;;;;;AAMA,WAAS2lB,iCAAT,GAA6C;AAC3C;;;;;AAKA,SAAK,IAAIhV,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChCwC,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsB5H,OAAtB,GAAgC,KAAhC;AACD;AACF;;AAED;;;;;;AAMA,WAAS6c,iCAAT,GAA6C;AAC3C;;;;;AAKA,SAAK,IAAIjV,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChCwC,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBlO,MAAtB,GAA+B,KAA/B;AACD;AACF;;AAED;;;;;;AAMA,WAASojB,8BAAT,GAA0C;AACxC;;;;;AAKA,SAAK,IAAIlV,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChCwC,uBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBhO,YAAtB,GAAqC,EAArC;AACD;AACF;;AAED;;;;;AAKA,WAASmjB,qCAAT,GAAiD;AAC/C;;;;AAIA,SAAK,IAAInV,GAAT,IAAgB9L,iBAAOxC,SAAvB,EAAkC;AAChC2H,iCAAiBiC,sBAAjB,CACEpH,iBAAOxC,SAAP,CAAiBsO,GAAjB,EAAsBvO,KAAtB,CAA4B,CAA5B,CADF,EAEEuO,GAFF;AAID;AACF;;AAED;;;AAGA,SAAO;AACLvF,gBAAYA;AADP,GAAP;AAGD,CA/O0B,EAA3B;;AAXA;;;;;;AAZA;;;;AAZA;;;;kBAoRekK,oB;;;;;;;;;;;;;;AChRf;;;;;;AAEA;;;;;AAKA,IAAIpL,oBAAqB,YAAW;AAClC;;;;;;AAMA,WAASC,SAAT,GAAqB;AACnB;;;AAGA,QAAI4b,iBAAiB1e,SAASkF,sBAAT,CACnB,0BADmB,CAArB;;AAIA;;;AAGA,SAAK,IAAIvM,IAAI,CAAb,EAAgBA,IAAI+lB,eAAezmB,MAAnC,EAA2CU,GAA3C,EAAgD;AAC9C+lB,qBAAe/lB,CAAf,EAAkBkI,SAAlB,CAA4BE,MAA5B,CAAmC,iCAAnC;AACD;;AAED;;;;AAIA,QAAIvD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA9D,EAAoE;AAClE,UAAI+jB,cAAc,EAAlB;;AAEA,UAAInhB,iBAAOjC,UAAX,EAAuB;AACrBojB,sBAAcnhB,iBAAOlC,YAAP,CAAqBkC,iBAAO7C,YAA5B,EAA2C2G,KAAzD;AACD,OAFD,MAEK;AACHqd,sBAAcnhB,iBAAO7C,YAArB;AACD;;AAED,UACEqF,SAASC,gBAAT,CACE,0DACE0e,WADF,GAEE,IAHJ,CADF,EAME;AACA,YAAID,kBAAiB1e,SAASC,gBAAT,CACnB,0DACE0e,WADF,GAEE,IAHiB,CAArB;;AAMA,aAAK,IAAIhmB,KAAI,CAAb,EAAgBA,KAAI+lB,gBAAezmB,MAAnC,EAA2CU,IAA3C,EAAgD;AAC9C,cAAI,CAAC+lB,gBAAe/lB,EAAf,EAAkBimB,YAAlB,CAA+B,yBAA/B,CAAL,EAAgE;AAC9DF,4BAAe/lB,EAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,iCAAhC;AACD;AACF;AACF;AACF,KA5BD,MA4BO;AACL,UAAItD,iBAAO5C,eAAP,IAA0B,IAA1B,IAAkC4C,iBAAO5C,eAAP,IAA0B,EAAhE,EAAoE;AAClE,YAAI6F,sBAAsBjD,iBAAOxC,SAAP,CAAkBwC,iBAAO5C,eAAzB,EAA2CD,YAArE;AACD,OAFD,MAEK;AACH,YAAI8F,sBAAsB,EAA1B;;AAEA,YAAIjD,iBAAOxC,SAAP,CAAkBwC,iBAAO5C,eAAzB,EAA2C8G,OAA/C,EAAwD;AACtDjB,gCAAsBjD,iBAAOxC,SAAP,CAAkBwC,iBAAO5C,eAAzB,EAA2CU,YAA3C,CAAyDkC,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAAlG,EAAiH2G,KAAvI;AACD,SAFD,MAEK;AACHb,gCAAsBjD,iBAAOxC,SAAP,CAAkBwC,iBAAO5C,eAAzB,EAA2CD,YAAjE;AACD;AACF;;AAED,UACEqF,SAASC,gBAAT,CACE,0DACEQ,mBADF,GAEE,8BAFF,GAGEjD,iBAAO5C,eAHT,GAIE,IALJ,CADF,EAQE;AACA,YAAI8jB,mBAAiB1e,SAASC,gBAAT,CACnB,0DACEQ,mBADF,GAEE,8BAFF,GAGEjD,iBAAO5C,eAHT,GAIE,IALiB,CAArB;;AAQA,aAAK,IAAIjC,MAAI,CAAb,EAAgBA,MAAI+lB,iBAAezmB,MAAnC,EAA2CU,KAA3C,EAAgD;AAC9C+lB,2BAAe/lB,GAAf,EAAkBkI,SAAlB,CAA4BC,GAA5B,CAAgC,iCAAhC;AACD;AACF;AACF;AACF;;AAED,SAAO;AACLgC,eAAWA;AADN,GAAP;AAGD,CA9FuB,EAAxB,C,CAXA;;;;kBA2GeD,iB;;;;;;;;;;;;;;ACvGf;;;;;;AAEA;;;;;AAKA,IAAI8E,sBAAuB,YAAW;AACpC,WAASlI,IAAT,CAAcsI,KAAd,EAAqB;AACnBrI,eAAWqI,KAAX;AACApI,iBAAaoI,KAAb;AACAnI,aAASmI,KAAT;AACAlI,uBAAmBkI,KAAnB;AACD;;AAED;;;;;;AAMA,WAASrI,UAAT,CAAoBqI,KAApB,EAA2B;AACzB;;;AAGA,QAAM8W,uBAAuB7e,SAASC,gBAAT,CAC3B,0BAD2B,CAA7B;;AAIA;;;AAGA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIkmB,qBAAqB5mB,MAAzC,EAAiDU,GAAjD,EAAsD;AACpD,UAAIuH,WAAW2e,qBAAqBlmB,CAArB,EAAwBwH,YAAxB,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYyb,qBAAqBlmB,CAArB,EAAwBwH,YAAxB,CACd,2BADc,CAAhB;;AAIA;;;AAGA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzCyb,6BAAqBlmB,CAArB,EAAwB8L,SAAxB,GAAoCsD,KAApC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASpI,YAAT,CAAsBoI,KAAtB,EAA6B;AAC3B;;;AAGA,QAAM+W,+BAA+B9e,SAASC,gBAAT,CACnC,uDACEzC,iBAAO5C,eADT,GAEE,IAHiC,CAArC;;AAMA;;;AAGA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAImmB,6BAA6B7mB,MAAjD,EAAyDU,GAAzD,EAA8D;AAC5D,UAAIyK,YAAY0b,6BAA6BnmB,CAA7B,EAAgCwH,YAAhC,CACd,2BADc,CAAhB;;AAIA;;;AAGA,UAAIiD,aAAa,IAAjB,EAAuB;AACrB0b,qCAA6BnmB,CAA7B,EAAgC8L,SAAhC,GAA4CsD,KAA5C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASnI,QAAT,CAAkBmI,KAAlB,EAAyB;AACvB,QAAIvK,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC;;;AAGA,UAAMmkB,2BAA2B/e,SAASC,gBAAT,CAC/B,yDACEzC,iBAAO7C,YADT,GAEE,IAH6B,CAAjC;;AAMA;;;AAGA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAIomB,yBAAyB9mB,MAA7C,EAAqDU,GAArD,EAA0D;AACxD,YAAIuH,WAAW6e,yBAAyBpmB,CAAzB,EAA4BwH,YAA5B,CACb,yBADa,CAAf;;AAIA;;;AAGA,YAAID,YAAY,IAAhB,EAAsB;AACpB6e,mCAAyBpmB,CAAzB,EAA4B8L,SAA5B,GAAwCsD,KAAxC;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASlI,kBAAT,CAA4BkI,KAA5B,EAAmC;AACjC,QAAItH,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;AAIA;;;AAGA,QAAMqkB,mCAAmChf,SAASC,gBAAT,CACvC,uDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALqC,CAAzC;;AAQA;;;AAGA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAIqmB,iCAAiC/mB,MAArD,EAA6DU,GAA7D,EAAkE;AAChEqmB,uCAAiCrmB,CAAjC,EAAoC8L,SAApC,GAAgDsD,KAAhD;AACD;AACF;;AAED;;;AAGA,WAASL,UAAT,GAAsB;AACpB;;;AAGA,QAAIuX,gBAAgBjf,SAASC,gBAAT,CAA0B,0BAA1B,CAApB;;AAEA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIsmB,cAAchnB,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7CsmB,oBAActmB,CAAd,EAAiB8L,SAAjB,GAA6B,IAA7B;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAlKyB,EAA1B,C,CAXA;;;;kBA+KeC,mB;;;;;;;;;;;;;;AC3Kf;;;;;;AAEA;;;;;AAKA,IAAIC,wBAAyB,YAAW;AACtC;;;;;AAKA,WAASnI,IAAT,CAAcuI,OAAd,EAAuB;AACrBtI,eAAWsI,OAAX;AACArI,iBAAaqI,OAAb;AACApI,aAASoI,OAAT;AACAnI,uBAAmBmI,OAAnB;AACD;;AAED;;;;;AAKA,WAAStI,UAAT,CAAoBsI,OAApB,EAA6B;AAC3B;;;AAGA,QAAMkX,yBAAyBlf,SAASC,gBAAT,CAC7B,4BAD6B,CAA/B;;AAIA;;;AAGA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIumB,uBAAuBjnB,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,UAAIuH,WAAWgf,uBAAuBvmB,CAAvB,EAA0BwH,YAA1B,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAY8b,uBAAuBvmB,CAAvB,EAA0BwH,YAA1B,CACd,2BADc,CAAhB;;AAIA;;;AAGA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzC8b,+BAAuBvmB,CAAvB,EAA0B8L,SAA1B,GAAsCuD,OAAtC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASrI,YAAT,CAAsBqI,OAAtB,EAA+B;AAC7B;;;AAGA,QAAMmX,iCAAiCnf,SAASC,gBAAT,CACrC,yDACEzC,iBAAO5C,eADT,GAEE,IAHmC,CAAvC;;AAMA;;;AAGA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIwmB,+BAA+BlnB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9D,UAAIyK,YAAY+b,+BAA+BxmB,CAA/B,EAAkCwH,YAAlC,CACd,2BADc,CAAhB;;AAIA;;;AAGA,UAAIiD,aAAa,IAAjB,EAAuB;AACrB+b,uCAA+BxmB,CAA/B,EAAkC8L,SAAlC,GAA8CuD,OAA9C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASpI,QAAT,CAAkBoI,OAAlB,EAA2B;AACzB,QAAIxK,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC;;;AAGA,UAAMwkB,6BAA6Bpf,SAASC,gBAAT,CACjC,2DACEzC,iBAAO7C,YADT,GAEE,IAH+B,CAAnC;;AAMA;;;AAGA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAIymB,2BAA2BnnB,MAA/C,EAAuDU,GAAvD,EAA4D;AAC1D,YAAIuH,WAAWkf,2BAA2BzmB,CAA3B,EAA8BwH,YAA9B,CACb,yBADa,CAAf;;AAIA;;;AAGA,YAAID,YAAY,IAAhB,EAAsB;AACpBkf,qCAA2BzmB,CAA3B,EAA8B8L,SAA9B,GAA0CuD,OAA1C;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASnI,kBAAT,CAA4BmI,OAA5B,EAAqC;AACnC,QAAIvH,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA;;;AAGA,QAAM0kB,qCAAqCrf,SAASC,gBAAT,CACzC,yDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALuC,CAA3C;;AAQA;;;AAGA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAI0mB,mCAAmCpnB,MAAvD,EAA+DU,GAA/D,EAAoE;AAClE0mB,yCAAmC1mB,CAAnC,EAAsC8L,SAAtC,GAAkDuD,OAAlD;AACD;AACF;;AAED;;;AAGA,WAASN,UAAT,GAAsB;AACpB;;;AAGA,QAAI4X,kBAAkBtf,SAASC,gBAAT,CACpB,4BADoB,CAAtB;;AAIA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAI2mB,gBAAgBrnB,MAApC,EAA4CU,GAA5C,EAAiD;AAC/C2mB,sBAAgB3mB,CAAhB,EAAmB8L,SAAnB,GAA+B,IAA/B;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAzK2B,EAA5B,C,CAXA;;;;kBAsLeE,qB;;;;;;;;;;;;;;AClLf;;;;;;AAEA;;;;;AAKA,IAAIC,wBAAyB,YAAW;AACtC;;;;;AAKA,WAASpI,IAAT,CAAcV,OAAd,EAAuB;AACrBW,eAAWX,OAAX;AACAY,iBAAaZ,OAAb;AACAa,aAASb,OAAT;AACAc,uBAAmBd,OAAnB;AACD;;AAED;;;;;AAKA,WAASW,UAAT,CAAoBX,OAApB,EAA6B;AAC3B;;;AAGA,QAAMwgB,yBAAyBvf,SAASC,gBAAT,CAC7B,4BAD6B,CAA/B;;AAIA;;;AAGA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAI4mB,uBAAuBtnB,MAA3C,EAAmDU,GAAnD,EAAwD;AACtD,UAAIuH,WAAWqf,uBAAuB5mB,CAAvB,EAA0BwH,YAA1B,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYmc,uBAAuB5mB,CAAvB,EAA0BwH,YAA1B,CACd,2BADc,CAAhB;;AAIA;;;AAGA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzCmc,+BAAuB5mB,CAAvB,EAA0B8L,SAA1B,GAAsC1F,OAAtC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASY,YAAT,CAAsBZ,OAAtB,EAA+B;AAC7B;;;AAGA,QAAMygB,iCAAiCxf,SAASC,gBAAT,CACrC,yDACEzC,iBAAO5C,eADT,GAEE,IAHmC,CAAvC;;AAMA;;;AAGA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI6mB,+BAA+BvnB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9D,UAAIyK,YAAYoc,+BAA+B7mB,CAA/B,EAAkCwH,YAAlC,CACd,2BADc,CAAhB;;AAIA;;;AAGA,UAAIiD,aAAa,IAAjB,EAAuB;AACrBoc,uCAA+B7mB,CAA/B,EAAkC8L,SAAlC,GAA8C1F,OAA9C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASa,QAAT,CAAkBb,OAAlB,EAA2B;AACzB,QAAIvB,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC;;;AAGA,UAAM6kB,6BAA6Bzf,SAASC,gBAAT,CACjC,2DACEzC,iBAAO7C,YADT,GAEE,IAH+B,CAAnC;;AAMA;;;AAGA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAI8mB,2BAA2BxnB,MAA/C,EAAuDU,GAAvD,EAA4D;AAC1D,YAAIuH,WAAWuf,2BAA2B9mB,CAA3B,EAA8BwH,YAA9B,CACb,yBADa,CAAf;;AAIA;;;AAGA,YAAID,YAAY,IAAhB,EAAsB;AACpBuf,qCAA2B9mB,CAA3B,EAA8B8L,SAA9B,GAA0C1F,OAA1C;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASc,kBAAT,CAA4Bd,OAA5B,EAAqC;AACnC,QAAI0B,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;AAIA;;;AAGA,QAAM+kB,qCAAqC1f,SAASC,gBAAT,CACzC,yDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALuC,CAA3C;;AAQA;;;AAGA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAI+mB,mCAAmCznB,MAAvD,EAA+DU,GAA/D,EAAoE;AAClE+mB,yCAAmC/mB,CAAnC,EAAsC8L,SAAtC,GAAkD1F,OAAlD;AACD;AACF;;AAED;;;AAGA,WAAS2I,UAAT,GAAsB;AACpB;;;AAGA,QAAIiY,kBAAkB3f,SAASC,gBAAT,CACpB,4BADoB,CAAtB;;AAIA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIgnB,gBAAgB1nB,MAApC,EAA4CU,GAA5C,EAAiD;AAC/CgnB,sBAAgBhnB,CAAhB,EAAmB8L,SAAnB,GAA+B,IAA/B;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAxK2B,EAA5B,C,CAXA;;;;kBAqLeG,qB;;;;;;;;;;;;;;ACjLf;;;;;;AAEA;;;;;AAKA,IAAIJ,sBAAuB,YAAW;AACpC;;;;;;;AAOA,WAAShI,IAAT,CAAcnB,WAAd,EAA2B;AACzB;;;AAGAoB,eAAWpB,WAAX;AACAqB,iBAAarB,WAAb;AACAsB,aAAStB,WAAT;AACAuB,uBAAmBvB,WAAnB;AACD;;AAED;;;;;;;AAOA,WAASoB,UAAT,CAAoByS,IAApB,EAA0B;AACxB;;;AAGA,QAAIyN,uBAAuB5f,SAASC,gBAAT,CACzB,yBADyB,CAA3B;;AAIA;;;;AAIA,QAAI4f,WAAW1N,KAAKnK,OAAL,GAAe,GAAf,GAAqBmK,KAAKpT,OAAzC;;AAEA,QAAIoT,KAAKpK,KAAL,GAAa,CAAjB,EAAoB;AAClB8X,iBAAW1N,KAAKpK,KAAL,GAAa,GAAb,GAAmB8X,QAA9B;AACD;;AAED,SAAK,IAAIlnB,IAAI,CAAb,EAAgBA,IAAIinB,qBAAqB3nB,MAAzC,EAAiDU,GAAjD,EAAsD;AACpD,UAAIuH,WAAW0f,qBAAqBjnB,CAArB,EAAwBwH,YAAxB,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYwc,qBAAqBjnB,CAArB,EAAwBwH,YAAxB,CACd,2BADc,CAAhB;;AAIA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzCwc,6BAAqBjnB,CAArB,EAAwB8L,SAAxB,GAAoCob,QAApC;AACD;AACF;AACF;;AAED;;;;;;;AAOA,WAASlgB,YAAT,CAAsBwS,IAAtB,EAA4B;AAC1B;;;AAGA,QAAIyN,uBAAuB5f,SAASC,gBAAT,CACzB,sDACEzC,iBAAO5C,eADT,GAEE,IAHuB,CAA3B;;AAMA;;;;AAIA,QAAIilB,WAAW1N,KAAKnK,OAAL,GAAe,GAAf,GAAqBmK,KAAKpT,OAAzC;;AAEA,QAAIoT,KAAKpK,KAAL,GAAa,CAAjB,EAAoB;AAClB8X,iBAAW1N,KAAKpK,KAAL,GAAa,GAAb,GAAmB8X,QAA9B;AACD;;AAED,SAAK,IAAIlnB,IAAI,CAAb,EAAgBA,IAAIinB,qBAAqB3nB,MAAzC,EAAiDU,GAAjD,EAAsD;AACpD,UAAIyK,YAAYwc,qBAAqBjnB,CAArB,EAAwBwH,YAAxB,CACd,2BADc,CAAhB;;AAIA,UAAIiD,aAAa,IAAjB,EAAuB;AACrBwc,6BAAqBjnB,CAArB,EAAwB8L,SAAxB,GAAoCob,QAApC;AACD;AACF;AACF;;AAED;;;;;;;AAOA,WAASjgB,QAAT,CAAkBuS,IAAlB,EAAwB;AACtB,QAAI3U,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC;;;AAGA,UAAIglB,uBAAuB5f,SAASC,gBAAT,CACzB,wDACEzC,iBAAO7C,YADT,GAEE,IAHuB,CAA3B;;AAMA;;;;AAIA,UAAIklB,WAAW1N,KAAKnK,OAAL,GAAe,GAAf,GAAqBmK,KAAKpT,OAAzC;;AAEA,UAAIoT,KAAKpK,KAAL,GAAa,CAAjB,EAAoB;AAClB8X,mBAAW1N,KAAKpK,KAAL,GAAa,GAAb,GAAmB8X,QAA9B;AACD;;AAED,WAAK,IAAIlnB,IAAI,CAAb,EAAgBA,IAAIinB,qBAAqB3nB,MAAzC,EAAiDU,GAAjD,EAAsD;AACpD,YAAIuH,WAAW0f,qBAAqBjnB,CAArB,EAAwBwH,YAAxB,CACb,yBADa,CAAf;;AAIA,YAAID,YAAY,IAAhB,EAAsB;AACpB0f,+BAAqBjnB,CAArB,EAAwB8L,SAAxB,GAAoCob,QAApC;AACD;AACF;AACF;AACF;;AAED;;;;;;;AAOA,WAAShgB,kBAAT,CAA4BsS,IAA5B,EAAkC;AAChC,QAAI1R,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;AAIA;;;AAGA,QAAIilB,uBAAuB5f,SAASC,gBAAT,CACzB,sDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALuB,CAA3B;;AAQA;;;;AAIA,QAAIof,WAAW1N,KAAKnK,OAAL,GAAe,GAAf,GAAqBmK,KAAKpT,OAAzC;;AAEA,QAAIoT,KAAKpK,KAAL,GAAa,CAAjB,EAAoB;AAClB8X,iBAAW1N,KAAKpK,KAAL,GAAa,GAAb,GAAmB8X,QAA9B;AACD;;AAED,SAAK,IAAIlnB,IAAI,CAAb,EAAgBA,IAAIinB,qBAAqB3nB,MAAzC,EAAiDU,GAAjD,EAAsD;AACpDinB,2BAAqBjnB,CAArB,EAAwB8L,SAAxB,GAAoCob,QAApC;AACD;AACF;;AAED;;;;;AAKA,WAASnY,UAAT,GAAsB;AACpB;;;AAGA,QAAIoY,gBAAgB9f,SAASC,gBAAT,CAA0B,yBAA1B,CAApB;;AAEA;;;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAImnB,cAAc7nB,MAAlC,EAA0CU,GAA1C,EAA+C;AAC7CmnB,oBAAcnnB,CAAd,EAAiB8L,SAAjB,GAA6B,OAA7B;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAxMyB,EAA1B,C,CAXA;;;;kBAqNeD,mB;;;;;;;;;;;;;;ACjNf;;;;;;AAEA;;;;;AAKA,IAAIQ,gCAAiC,YAAW;AAC9C;;;;;;AAMA,WAASxI,IAAT,CAAcsgB,aAAd,EAA6BxX,YAA7B,EAA2C;AACzC,QAAIyX,gBAAgBC,qBAAqBF,aAArB,EAAoCxX,YAApC,CAApB;;AAEA7I,eAAWsgB,aAAX;AACArgB,iBAAaqgB,aAAb;AACApgB,aAASogB,aAAT;AACAngB,uBAAmBmgB,aAAnB;AACD;;AAED;;;;;AAKA,WAAStgB,UAAT,CAAoBsgB,aAApB,EAAmC;AACjC,QAAIE,iCAAiClgB,SAASC,gBAAT,CACnC,2BADmC,CAArC;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIunB,+BAA+BjoB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9D,UAAIuH,WAAWggB,+BAA+BvnB,CAA/B,EAAkCwH,YAAlC,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAY8c,+BAA+BvnB,CAA/B,EAAkCwH,YAAlC,CACd,2BADc,CAAhB;;AAIA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzC8c,uCAA+BvnB,CAA/B,EAAkC8L,SAAlC,GAA8Cub,aAA9C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASrgB,YAAT,CAAsBqgB,aAAtB,EAAqC;AACnC,QAAIE,iCAAiClgB,SAASC,gBAAT,CACnC,wDACEzC,iBAAO5C,eADT,GAEE,IAHiC,CAArC;;AAMA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIunB,+BAA+BjoB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9D,UAAIyK,YAAY8c,+BAA+BvnB,CAA/B,EAAkCwH,YAAlC,CACd,2BADc,CAAhB;;AAIA,UAAIiD,aAAa,IAAjB,EAAuB;AACrB8c,uCAA+BvnB,CAA/B,EAAkC8L,SAAlC,GAA8Cub,aAA9C;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASpgB,QAAT,CAAkBogB,aAAlB,EAAiC;AAC/B,QAAIxiB,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC,UAAIslB,iCAAiClgB,SAASC,gBAAT,CACnC,0DACEzC,iBAAO7C,YADT,GAEE,IAHiC,CAArC;;AAMA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAIunB,+BAA+BjoB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9D,YAAIuH,WAAWggB,+BAA+BvnB,CAA/B,EAAkCwH,YAAlC,CACb,yBADa,CAAf;;AAIA,YAAID,YAAY,IAAhB,EAAsB;AACpBggB,yCAA+BvnB,CAA/B,EAAkC8L,SAAlC,GAA8Cub,aAA9C;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASngB,kBAAT,CAA4BmgB,aAA5B,EAA2C;AACzC,QAAIvf,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA,QAAIulB,iCAAiClgB,SAASC,gBAAT,CACnC,wDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALiC,CAArC;;AAQA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAIunB,+BAA+BjoB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9DunB,qCAA+BvnB,CAA/B,EAAkC8L,SAAlC,GAA8Cub,aAA9C;AACD;AACF;;AAED;;;AAGA,WAAStY,UAAT,GAAsB;AACpB,QAAIwY,iCAAiClgB,SAASC,gBAAT,CACnC,2BADmC,CAArC;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIunB,+BAA+BjoB,MAAnD,EAA2DU,GAA3D,EAAgE;AAC9DunB,qCAA+BvnB,CAA/B,EAAkC8L,SAAlC,GAA8C,IAA9C;AACD;AACF;;AAED;;;;;;AAMA,WAASwb,oBAAT,CAA8B3hB,WAA9B,EAA2CiK,YAA3C,EAAyD;AACvD,QAAIyX,gBAAgB,OAApB;;AAEA;;;AAGA,QAAIG,sBACF5e,SAASjD,YAAYS,OAArB,IACAwC,SAASjD,YAAY0J,OAArB,IAAgC,EADhC,GAEAzG,SAASjD,YAAYyJ,KAArB,IAA8B,EAA9B,GAAmC,EAHrC;AAIA,QAAIqY,uBACF7e,SAASgH,aAAaxJ,OAAtB,IACAwC,SAASgH,aAAaP,OAAtB,IAAiC,EADjC,GAEAzG,SAASgH,aAAaR,KAAtB,IAA+B,EAA/B,GAAoC,EAHtC;;AAKA;;;AAGA,QAAI,CAACrE,MAAMyc,mBAAN,CAAD,IAA+B,CAACzc,MAAM0c,oBAAN,CAApC,EAAiE;AAC/D;;;AAGA,UAAIC,4BACFD,uBAAuBD,mBADzB;;AAGA,UAAIG,iBAAiB5Z,KAAKC,KAAL,CAAW0Z,4BAA4B,IAAvC,CAArB;AACA,UAAIE,mBAAmB7Z,KAAKC,KAAL,CACrB,CAAC0Z,4BAA4BC,iBAAiB,IAA9C,IAAsD,EADjC,CAAvB;AAGA,UAAIE,mBACFH,4BACAC,iBAAiB,IADjB,GAEAC,mBAAmB,EAHrB;;AAKAP,sBACE,CAACO,mBAAmB,EAAnB,GAAwB,MAAMA,gBAA9B,GAAiDA,gBAAlD,IACA,GADA,IAECC,mBAAmB,EAAnB,GAAwB,MAAMA,gBAA9B,GAAiDA,gBAFlD,CADF;;AAKA,UAAIF,iBAAiB,CAArB,EAAwB;AACtBN,wBAAgBM,iBAAiB,GAAjB,GAAuBN,aAAvC;AACD;AACF;;AAED,WAAOA,aAAP;AACD;;AAED;;;AAGA,SAAO;AACLvgB,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAzLmC,EAApC,C,CAXA;;;;kBAsMeO,6B;;;;;;;;;;;;;;AClMf;;;;;;AAEA;;;;;AAKA,IAAIC,uBAAwB,YAAW;AACrC;;;;;AAKA,WAASzI,IAAT,CAAcsI,KAAd,EAAqB;AACnBrI,eAAWqI,KAAX;AACApI,iBAAaoI,KAAb;AACAnI,aAASmI,KAAT;AACAlI,uBAAmBkI,KAAnB;AACD;;AAED;;;;;AAKA,WAASrI,UAAT,CAAoBqI,KAApB,EAA2B;AACzB,QAAI0Y,wBAAwBzgB,SAASC,gBAAT,CAC1B,2BAD0B,CAA5B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAI8nB,sBAAsBxoB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD,UAAIuH,WAAWugB,sBAAsB9nB,CAAtB,EAAyBwH,YAAzB,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYqd,sBAAsB9nB,CAAtB,EAAyBwH,YAAzB,CACd,2BADc,CAAhB;;AAIA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzCqd,8BAAsB9nB,CAAtB,EAAyB8L,SAAzB,GAAqCsD,KAArC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASpI,YAAT,CAAsBoI,KAAtB,EAA6B;AAC3B,QAAI0Y,wBAAwBzgB,SAASC,gBAAT,CAC1B,wDACEzC,iBAAO5C,eADT,GAEE,IAHwB,CAA5B;;AAMA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI8nB,sBAAsBxoB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD,UAAIyK,YAAYqd,sBAAsB9nB,CAAtB,EAAyBwH,YAAzB,CACd,2BADc,CAAhB;;AAIA,UAAIiD,aAAa,IAAjB,EAAuB;AACrBqd,8BAAsB9nB,CAAtB,EAAyB8L,SAAzB,GAAqCsD,KAArC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASnI,QAAT,CAAkBmI,KAAlB,EAAyB;AACvB,QAAIvK,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC,UAAI6lB,wBAAwBzgB,SAASC,gBAAT,CAC1B,0DACEzC,iBAAO7C,YADT,GAEE,IAHwB,CAA5B;;AAMA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAI8nB,sBAAsBxoB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD,YAAIuH,WAAWugB,sBAAsB9nB,CAAtB,EAAyBwH,YAAzB,CACb,yBADa,CAAf;;AAIA,YAAID,YAAY,IAAhB,EAAsB;AACpBugB,gCAAsB9nB,CAAtB,EAAyB8L,SAAzB,GAAqCsD,KAArC;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASlI,kBAAT,CAA4BkI,KAA5B,EAAmC;AACjC,QAAItH,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA,QAAI8lB,wBAAwBzgB,SAASC,gBAAT,CAC1B,wDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALwB,CAA5B;;AAQA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAI8nB,sBAAsBxoB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD8nB,4BAAsB9nB,CAAtB,EAAyB8L,SAAzB,GAAqCsD,KAArC;AACD;AACF;;AAED;;;AAGA,WAASL,UAAT,GAAsB;AACpB,QAAI+Y,wBAAwBzgB,SAASC,gBAAT,CAC1B,2BAD0B,CAA5B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAI8nB,sBAAsBxoB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD8nB,4BAAsB9nB,CAAtB,EAAyB8L,SAAzB,GAAqC,IAArC;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAjI0B,EAA3B,C,CAXA;;;;kBA8IeQ,oB;;;;;;;;;;;;;;AC1If;;;;;;AAEA;;;;;AAKA,IAAIC,yBAA0B,YAAW;AACvC;;;;;AAKA,WAAS1I,IAAT,CAAcuI,OAAd,EAAuB;AACrBtI,eAAWsI,OAAX;AACArI,iBAAaqI,OAAb;AACApI,aAASoI,OAAT;AACAnI,uBAAmBmI,OAAnB;AACD;;AAED;;;;;AAKA,WAAStI,UAAT,CAAoBsI,OAApB,EAA6B;AAC3B,QAAI0Y,0BAA0B1gB,SAASC,gBAAT,CAC5B,6BAD4B,CAA9B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAI+nB,wBAAwBzoB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD,UAAIuH,WAAWwgB,wBAAwB/nB,CAAxB,EAA2BwH,YAA3B,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYsd,wBAAwB/nB,CAAxB,EAA2BwH,YAA3B,CACd,2BADc,CAAhB;;AAIA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzCsd,gCAAwB/nB,CAAxB,EAA2B8L,SAA3B,GAAuCuD,OAAvC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASrI,YAAT,CAAsBqI,OAAtB,EAA+B;AAC7B,QAAI0Y,0BAA0B1gB,SAASC,gBAAT,CAC5B,0DACEzC,iBAAO5C,eADT,GAEE,IAH0B,CAA9B;;AAMA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAI+nB,wBAAwBzoB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD,UAAIyK,YAAYsd,wBAAwB/nB,CAAxB,EAA2BwH,YAA3B,CACd,2BADc,CAAhB;;AAIA,UAAIiD,aAAa,IAAjB,EAAuB;AACrBsd,gCAAwB/nB,CAAxB,EAA2B8L,SAA3B,GAAuCuD,OAAvC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASpI,QAAT,CAAkBoI,OAAlB,EAA2B;AACzB,QAAIxK,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC,UAAI8lB,0BAA0B1gB,SAASC,gBAAT,CAC5B,4DACEzC,iBAAO7C,YADT,GAEE,IAH0B,CAA9B;;AAMA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAI+nB,wBAAwBzoB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD,YAAIuH,WAAWwgB,wBAAwB/nB,CAAxB,EAA2BwH,YAA3B,CACb,yBADa,CAAf;;AAIA,YAAID,YAAY,IAAhB,EAAsB;AACpBwgB,kCAAwB/nB,CAAxB,EAA2B8L,SAA3B,GAAuCuD,OAAvC;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASnI,kBAAT,CAA4BmI,OAA5B,EAAqC;AACnC,QAAIvH,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA,QAAI+lB,0BAA0B1gB,SAASC,gBAAT,CAC5B,0DACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IAL0B,CAA9B;;AAQA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAI+nB,wBAAwBzoB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD+nB,8BAAwB/nB,CAAxB,EAA2B8L,SAA3B,GAAuCuD,OAAvC;AACD;AACF;;AAED;;;AAGA,WAASN,UAAT,GAAsB;AACpB,QAAIgZ,0BAA0B1gB,SAASC,gBAAT,CAC5B,6BAD4B,CAA9B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAI+nB,wBAAwBzoB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD+nB,8BAAwB/nB,CAAxB,EAA2B8L,SAA3B,GAAuC,IAAvC;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAjI4B,EAA7B,C,CAXA;;;;kBA8IeS,sB;;;;;;;;;;;;;;AC1If;;;;;;AAEA;;;;;AAKA,IAAIC,yBAA0B,YAAW;AACvC;;;;;AAKA,WAAS3I,IAAT,CAAcV,OAAd,EAAuB;AACrBW,eAAWX,OAAX;AACAY,iBAAaZ,OAAb;AACAa,aAASb,OAAT;AACAc,uBAAmBd,OAAnB;AACD;;AAED;;;;;AAKA,WAASW,UAAT,CAAoBX,OAApB,EAA6B;AAC3B,QAAI4hB,0BAA0B3gB,SAASC,gBAAT,CAC5B,6BAD4B,CAA9B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIgoB,wBAAwB1oB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD,UAAIuH,WAAWygB,wBAAwBhoB,CAAxB,EAA2BwH,YAA3B,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAYud,wBAAwBhoB,CAAxB,EAA2BwH,YAA3B,CACd,2BADc,CAAhB;;AAIA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzCud,gCAAwBhoB,CAAxB,EAA2B8L,SAA3B,GAAuC1F,OAAvC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASY,YAAT,CAAsBZ,OAAtB,EAA+B;AAC7B,QAAI4hB,0BAA0B3gB,SAASC,gBAAT,CAC5B,0DACEzC,iBAAO5C,eADT,GAEE,IAH0B,CAA9B;;AAMA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIgoB,wBAAwB1oB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD,UAAIyK,YAAYud,wBAAwBhoB,CAAxB,EAA2BwH,YAA3B,CACd,2BADc,CAAhB;;AAIA,UAAIiD,aAAa,IAAjB,EAAuB;AACrBud,gCAAwBhoB,CAAxB,EAA2B8L,SAA3B,GAAuC1F,OAAvC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASa,QAAT,CAAkBb,OAAlB,EAA2B;AACzB,QAAIvB,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC,UAAI+lB,0BAA0B3gB,SAASC,gBAAT,CAC5B,4DACEzC,iBAAO7C,YADT,GAEE,IAH0B,CAA9B;;AAMA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAIgoB,wBAAwB1oB,MAA5C,EAAoDU,GAApD,EAAyD;AACvD,YAAIuH,WAAWygB,wBAAwBhoB,CAAxB,EAA2BwH,YAA3B,CACb,0BADa,CAAf;;AAIA,YAAID,YAAY,IAAhB,EAAsB;AACpBygB,kCAAwBhoB,CAAxB,EAA2B8L,SAA3B,GAAuC1F,OAAvC;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAASc,kBAAT,CAA4Bd,OAA5B,EAAqC;AACnC,QAAI0B,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA,QAAIgmB,0BAA0B3gB,SAASC,gBAAT,CAC5B,0DACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IAL0B,CAA9B;;AAQA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAIgoB,wBAAwB1oB,MAA5C,EAAoDU,GAApD,EAAyD;AACvDgoB,8BAAwBhoB,CAAxB,EAA2B8L,SAA3B,GAAuC1F,OAAvC;AACD;AACF;;AAED;;;AAGA,WAAS2I,UAAT,GAAsB;AACpB,QAAIiZ,0BAA0B3gB,SAASC,gBAAT,CAC5B,6BAD4B,CAA9B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIgoB,wBAAwB1oB,MAA5C,EAAoDU,GAApD,EAAyD;AACvDgoB,8BAAwBhoB,CAAxB,EAA2B8L,SAA3B,GAAuC,IAAvC;AACD;AACF;;AAED;;;AAGA,SAAO;AACLhF,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CAjI4B,EAA7B,C,CAXA;;;;kBA8IeU,sB;;;;;;;;;;;;;;AC1If;;;;;;AAEA;;;;;AAKA,IAAIC,uBAAwB,YAAW;AACrC;;;;;AAKA,WAAS5I,IAAT,CAAcmhB,YAAd,EAA4B;AAC1B,QAAIC,eAAeC,oBAAoBF,YAApB,CAAnB;;AAEAlhB,eAAWmhB,YAAX;AACAlhB,iBAAakhB,YAAb;AACAjhB,aAASihB,YAAT;AACAhhB,uBAAmBghB,YAAnB;AACD;;AAED;;;;;AAKA,WAASnhB,UAAT,CAAoBmhB,YAApB,EAAkC;AAChC,QAAIE,wBAAwB/gB,SAASC,gBAAT,CAC1B,0BAD0B,CAA5B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIooB,sBAAsB9oB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD,UAAIuH,WAAW6gB,sBAAsBpoB,CAAtB,EAAyBwH,YAAzB,CACb,yBADa,CAAf;AAGA,UAAIiD,YAAY2d,sBAAsBpoB,CAAtB,EAAyBwH,YAAzB,CACd,2BADc,CAAhB;;AAIA,UAAID,YAAY,IAAZ,IAAoBkD,aAAa,IAArC,EAA2C;AACzC2d,8BAAsBpoB,CAAtB,EAAyB8L,SAAzB,GAAqCoc,YAArC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASlhB,YAAT,CAAsBkhB,YAAtB,EAAoC;AAClC,QAAIE,wBAAwB/gB,SAASC,gBAAT,CAC1B,uDACEzC,iBAAO5C,eADT,GAEE,IAHwB,CAA5B;;AAMA,SAAK,IAAIjC,IAAI,CAAb,EAAgBA,IAAIooB,sBAAsB9oB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD,UAAIyK,YAAY2d,sBAAsBpoB,CAAtB,EAAyBwH,YAAzB,CACd,2BADc,CAAhB;;AAIA,UAAIiD,aAAa,IAAjB,EAAuB;AACrB2d,8BAAsBpoB,CAAtB,EAAyB8L,SAAzB,GAAqCoc,YAArC;AACD;AACF;AACF;;AAED;;;;;AAKA,WAASjhB,QAAT,CAAkBihB,YAAlB,EAAgC;AAC9B,QAAIrjB,iBAAO5C,eAAP,IAA0B,IAA9B,EAAoC;AAClC,UAAImmB,wBAAwB/gB,SAASC,gBAAT,CAC1B,yDACEzC,iBAAO7C,YADT,GAEE,IAHwB,CAA5B;;AAMA,WAAK,IAAIhC,IAAI,CAAb,EAAgBA,IAAIooB,sBAAsB9oB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrD,YAAIuH,WAAW6gB,sBAAsBpoB,CAAtB,EAAyBwH,YAAzB,CACb,yBADa,CAAf;;AAIA,YAAID,YAAY,IAAhB,EAAsB;AACpB6gB,gCAAsBpoB,CAAtB,EAAyB8L,SAAzB,GAAqCoc,YAArC;AACD;AACF;AACF;AACF;;AAED;;;;;AAKA,WAAShhB,kBAAT,CAA4BghB,YAA5B,EAA0C;AACxC,QAAIpgB,sBACFjD,iBAAO5C,eAAP,IAA0B,EAA1B,IAAgC4C,iBAAO5C,eAAP,IAA0B,IAA1D,GACI4C,iBAAOxC,SAAP,CAAiBwC,iBAAO5C,eAAxB,EAAyCD,YAD7C,GAEI,IAHN;;AAKA,QAAIomB,wBAAwB/gB,SAASC,gBAAT,CAC1B,uDACEzC,iBAAO5C,eADT,GAEE,gCAFF,GAGE6F,mBAHF,GAIE,IALwB,CAA5B;;AAQA,SAAK,IAAI9H,IAAI,CAAb,EAAgBA,IAAIooB,sBAAsB9oB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrDooB,4BAAsBpoB,CAAtB,EAAyB8L,SAAzB,GAAqCoc,YAArC;AACD;AACF;;AAED;;;AAGA,WAASnZ,UAAT,GAAsB;AACpB,QAAIqZ,wBAAwB/gB,SAASC,gBAAT,CAC1B,0BAD0B,CAA5B;;AAIA,SAAK,IAAItH,IAAI,CAAb,EAAgBA,IAAIooB,sBAAsB9oB,MAA1C,EAAkDU,GAAlD,EAAuD;AACrDooB,4BAAsBpoB,CAAtB,EAAyB8L,SAAzB,GAAqC,OAArC;AACD;AACF;;AAED;;;;;AAKA,WAASqc,mBAAT,CAA6BF,YAA7B,EAA2C;AACzC,QAAIC,eAAe,OAAnB;;AAEA,QAAI,CAACnd,MAAMkd,aAAa5Y,OAAnB,CAAD,IAAgC,CAACtE,MAAMkd,aAAa7hB,OAAnB,CAArC,EAAkE;AAChE8hB,qBAAeD,aAAa5Y,OAAb,GAAuB,GAAvB,GAA6B4Y,aAAa7hB,OAAzD;AACA,UAAI,CAAC2E,MAAMkd,aAAa7Y,KAAnB,CAAD,IAA8B6Y,aAAa7Y,KAAb,GAAqB,CAAvD,EAA0D;AACxD8Y,uBAAeD,aAAa7Y,KAAb,GAAqB,GAArB,GAA2B8Y,YAA1C;AACD;AACF;;AAED,WAAOA,YAAP;AACD;;AAED;;;AAGA,SAAO;AACLphB,UAAMA,IADD;AAELiI,gBAAYA;AAFP,GAAP;AAID,CArJ0B,EAA3B,C,CAXA;;;;kBAkKeW,oB;;;;;;;AClKf,kBAAkB,mTAAmT,uQAAuQ,gBAAgB,aAAa,6BAA6B,uEAAuE,YAAY,iIAAiI,eAAe,0EAA0E,2IAA2I,4DAA4D,kE;;;;;;;;;ACA1nC;AAAA,MAAA;;EAAA,IAAG,4DAAA,IAAiB,WAAW,CAAC,GAAhC;IACE,MAAM,CAAC,OAAP,GAAiB,SAAA;aAAG,WAAW,CAAC,GAAZ,CAAA;IAAH,EADnB;GAAA,MAEK,IAAG,oDAAA,IAAa,OAAO,CAAC,MAAxB;IACH,MAAM,CAAC,OAAP,GAAiB,SAAA;aAAG,CAAC,cAAA,CAAA,CAAA,GAAmB,YAApB,CAAA,GAAoC;IAAvC;IACjB,MAAA,GAAS,OAAO,CAAC;IACjB,cAAA,GAAiB,SAAA;AACf,UAAA;MAAA,EAAA,GAAK,MAAA,CAAA;aACL,EAAG,CAAA,CAAA,CAAH,GAAQ,GAAR,GAAc,EAAG,CAAA,CAAA;IAFF;IAGjB,cAAA,GAAiB,cAAA,CAAA;IACjB,MAAA,GAAS,OAAO,CAAC,MAAR,CAAA,CAAA,GAAmB;IAC5B,YAAA,GAAe,cAAA,GAAiB,OAR7B;GAAA,MASA,IAAG,IAAI,CAAC,GAAR;IACH,MAAM,CAAC,OAAP,GAAiB,SAAA;aAAG,IAAI,CAAC,GAAL,CAAA,CAAA,GAAa;IAAhB;IACjB,QAAA,GAAW,IAAI,CAAC,GAAL,CAAA,EAFR;GAAA,MAAA;IAIH,MAAM,CAAC,OAAP,GAAiB,SAAA;aAAO,IAAA,IAAA,CAAA,CAAM,CAAC,OAAP,CAAA,CAAJ,GAAuB;IAA1B;IACjB,QAAA,GAAe,IAAA,IAAA,CAAA,CAAM,CAAC,OAAP,CAAA,EALZ;;AAXL;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;;;;;;;;;ACHA;;AACA;;;;AAEA,SAAS2Y,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF;;AAED,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACxC,OAAK,IAAI3oB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2oB,KAAK,CAACrpB,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACrC,QAAI4oB,UAAU,GAAGD,KAAK,CAAC3oB,CAAD,CAAtB;AACA4oB,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AACA,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAC3BjZ,IAAAA,MAAM,CAACkZ,cAAP,CAAsBN,MAAtB,EAA8BE,UAAU,CAACjY,GAAzC,EAA8CiY,UAA9C;AACD;AACF;;AAED,SAASK,YAAT,CAAsBV,WAAtB,EAAmCW,UAAnC,EAA+CC,WAA/C,EAA4D;AAC1D,MAAID,UAAJ,EAAgBT,iBAAiB,CAACF,WAAW,CAACnoB,SAAb,EAAwB8oB,UAAxB,CAAjB;AAChB,MAAIC,WAAJ,EAAiBV,iBAAiB,CAACF,WAAD,EAAcY,WAAd,CAAjB;AACjB,SAAOZ,WAAP;AACD;;AAED,IAAIa,KAAK;AACT;AACA,YAAY;AACV,WAASA,KAAT,CAAeC,GAAf,EAAoB;AAClBhB,IAAAA,eAAe,CAAC,IAAD,EAAOe,KAAP,CAAf;;AAEA,SAAKE,IAAL,GAAYD,GAAG,CAACC,IAAhB;AACA,SAAKC,UAAL,GAAkBF,GAAG,CAACE,UAAtB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,gBAAL,GAAwB,GAAxB;AACD;;AAEDT,EAAAA,YAAY,CAACG,KAAD,EAAQ,CAAC;AACnBzY,IAAAA,GAAG,EAAE,aADc;AAEnB1D,IAAAA,KAAK,EAAE,SAAS0c,WAAT,CAAqBxY,CAArB,EAAwB;AAC7B,aAAOpD,IAAI,CAAC6b,GAAL,CAAS,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,GAAkBzb,IAAI,CAAC6b,GAAL,CAASzY,CAAT,EAAY,KAAKqY,UAAjB,CAArC,CAAT,EAA6E,KAAKA,UAAlF,CAAP;AACD;AAJkB,GAAD,EAKjB;AACD7Y,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS4c,KAAT,CAAe7pB,CAAf,EAAkB;AACvB,aAAO,KAAKspB,IAAL,CAAUQ,KAAV,IAAmB,CAAC9pB,CAAC,GAAG,KAAKypB,OAAV,KAAsB,KAAKA,OAAL,GAAe,CAArC,CAAnB,CAAP;AACD;AAJA,GALiB,EAUjB;AACD9Y,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS8c,KAAT,CAAe/pB,CAAf,EAAkB;AACvB,aAAO,KAAK0pB,gBAAL,IAAyB,KAAKC,WAAL,CAAiB3pB,CAAjB,KAAuB,KAAKspB,IAAL,CAAUU,SAAV,GAAsB,KAAKV,IAAL,CAAUW,SAAvD,KAAqE,IAAI,KAAKV,UAAL,CAAgBW,WAAzF,IAAwGnc,IAAI,CAACoc,GAAL,CAAS,KAAKb,IAAL,CAAUD,GAAV,CAAce,SAAd,GAA0BpqB,CAA1B,GAA8B,KAAKspB,IAAL,CAAUe,KAAjD,CAAjI,CAAP;AACD;AAJA,GAViB,EAejB;AACD1Z,IAAAA,GAAG,EAAE,MADJ;AAED1D,IAAAA,KAAK,EAAE,SAASqd,IAAT,GAAgB;AACrB,UAAIC,GAAG,GAAG,KAAKjB,IAAL,CAAUiB,GAApB;AACAA,MAAAA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc,CAAd;AACAD,MAAAA,GAAG,CAACE,SAAJ;AACA,UAAIC,KAAK,GAAG,KAAKpB,IAAL,CAAUoB,KAAV,CAAgBC,OAAhB,CAAwB,QAAxB,EAAkC,EAAlC,EAAsCA,OAAtC,CAA8C,KAA9C,EAAqD,EAArD,CAAZ;AACAJ,MAAAA,GAAG,CAACK,WAAJ,GAAkB,QAAQrrB,MAAR,CAAemrB,KAAf,EAAsB,GAAtB,EAA2BnrB,MAA3B,CAAkC,KAAKgqB,UAAL,CAAgBsB,OAAlD,EAA2D,GAA3D,CAAlB;AACAN,MAAAA,GAAG,CAACO,SAAJ,GAAgB,KAAKvB,UAAL,CAAgBuB,SAAhC,CANqB,CAMsB;;AAE3C,WAAK,IAAI9qB,CAAC,GAAG,CAAC,KAAKypB,OAAnB,EAA4BzpB,CAAC,IAAI,KAAKypB,OAAtC,EAA+CzpB,CAAC,IAAI,KAAKspB,IAAL,CAAUD,GAAV,CAAc0B,UAAlE,EAA8E;AAC5ER,QAAAA,GAAG,CAACS,MAAJ,CAAW,KAAKnB,KAAL,CAAW7pB,CAAX,CAAX,EAA0B,KAAKspB,IAAL,CAAUU,SAAV,GAAsB,KAAKD,KAAL,CAAW/pB,CAAX,CAAhD;AACD;;AAEDuqB,MAAAA,GAAG,CAACU,MAAJ;AACD;AAfA,GAfiB,CAAR,EA+BR,CAAC;AACHta,IAAAA,GAAG,EAAE,eADF;AAEH1D,IAAAA,KAAK,EAAE,SAASie,aAAT,GAAyB;AAC9B,aAAO,CAAC;AACNhB,QAAAA,WAAW,EAAE,CAAC,CADR;AAENY,QAAAA,SAAS,EAAE,CAFL;AAGND,QAAAA,OAAO,EAAE;AAHH,OAAD,EAIJ;AACDX,QAAAA,WAAW,EAAE,CAAC,CADb;AAEDY,QAAAA,SAAS,EAAE,CAFV;AAGDD,QAAAA,OAAO,EAAE;AAHR,OAJI,EAQJ;AACDX,QAAAA,WAAW,EAAE,CADZ;AAEDY,QAAAA,SAAS,EAAE,CAFV;AAGDD,QAAAA,OAAO,EAAE;AAHR,OARI,EAYJ;AACDX,QAAAA,WAAW,EAAE,CADZ;AAEDY,QAAAA,SAAS,EAAE,CAFV;AAGDD,QAAAA,OAAO,EAAE;AAHR,OAZI,EAgBJ;AACDX,QAAAA,WAAW,EAAE,CADZ;AAEDY,QAAAA,SAAS,EAAE,GAFV;AAGDD,QAAAA,OAAO,EAAE;AAHR,OAhBI,CAAP;AAqBD;AAxBE,GAAD,CA/BQ,CAAZ;;AA0DA,SAAOzB,KAAP;AACD,CAtED,EAFA;;AA0EA,IAAI+B,SAAS;AACb;AACA,YAAY;AACV,WAASA,SAAT,GAAqB;AACnB,QAAI9B,GAAG,GAAGtpB,SAAS,CAACT,MAAV,GAAmB,CAAnB,IAAwBS,SAAS,CAAC,CAAD,CAAT,KAAiBsF,SAAzC,GAAqDtF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA9E;;AAEAsoB,IAAAA,eAAe,CAAC,IAAD,EAAO8C,SAAP,CAAf;;AAEA,SAAK7B,IAAL,GAAYD,GAAG,CAACC,IAAhB;AACA,SAAKC,UAAL,GAAkBF,GAAG,CAACE,UAAtB;AACA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKC,gBAAL,GAAwB,GAAxB;AACA,SAAK0B,YAAL,GAAoB,CAApB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAK7B,UAAL,GAAkB,CAAlB;AACA,SAAK8B,cAAL,GAAsB,IAAtB;AACA,SAAKC,iBAAL,GAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB;AACA,SAAKC,gBAAL,GAAwB,CAAC,GAAD,EAAM,CAAN,CAAxB;AACA,SAAKC,aAAL,GAAqB,CAAC,CAAC,CAAF,EAAK,CAAL,CAArB;AACA,SAAKC,YAAL,GAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB;AACA,SAAKC,YAAL,GAAoB,CAAC,GAAD,EAAM,CAAN,CAApB;AACA,SAAKC,sBAAL,GAA8B,CAAC,GAAD,EAAM,IAAN,CAA9B;AACA,SAAKC,OAAL;AACD;;AAED5C,EAAAA,YAAY,CAACkC,SAAD,EAAY,CAAC;AACvBxa,IAAAA,GAAG,EAAE,gBADkB;AAEvB1D,IAAAA,KAAK,EAAE,SAAS6e,cAAT,CAAwBptB,CAAxB,EAA2B;AAChC,aAAOA,CAAC,CAAC,CAAD,CAAD,GAAOqP,IAAI,CAACE,MAAL,MAAiBvP,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAzB,CAAd;AACD;AAJsB,GAAD,EAKrB;AACDiS,IAAAA,GAAG,EAAE,eADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS8e,aAAT,CAAuBC,EAAvB,EAA2B;AAChC,WAAKC,MAAL,CAAYD,EAAZ,IAAkB,CAAlB;AACA,WAAKE,UAAL,CAAgBF,EAAhB,IAAsB,CAAtB;AACA,WAAKG,eAAL,CAAqBH,EAArB,IAA2B,KAAKF,cAAL,CAAoB,KAAKF,sBAAzB,CAA3B;AACA,WAAKQ,OAAL,CAAaJ,EAAb,IAAmB,KAAKF,cAAL,CAAoB,KAAKL,aAAzB,CAAnB;AACA,WAAKY,MAAL,CAAYL,EAAZ,IAAkB,KAAKF,cAAL,CAAoB,KAAKH,YAAzB,CAAlB;AACA,WAAKW,eAAL,CAAqBN,EAArB,IAA2B,KAAKF,cAAL,CAAoB,KAAKN,gBAAzB,CAA3B;AACA,WAAKe,MAAL,CAAYP,EAAZ,IAAkB,KAAKF,cAAL,CAAoB,KAAKJ,YAAzB,CAAlB;AACA,WAAKc,MAAL,CAAYR,EAAZ,IAAkB,KAAKF,cAAL,CAAoB,CAAC,CAAC,CAAF,EAAK,CAAL,CAApB,CAAlB;AACD;AAXA,GALqB,EAiBrB;AACDnb,IAAAA,GAAG,EAAE,SADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS4e,OAAT,GAAmB;AACxB,WAAKY,OAAL,GAAeC,IAAI,CAACC,GAAL,EAAf;AACA,WAAKC,UAAL,GAAkB7e,IAAI,CAACC,KAAL,CAAW,KAAK8d,cAAL,CAAoB,KAAKP,iBAAzB,CAAX,CAAlB;AACA,WAAKU,MAAL,GAAc,IAAInsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAd;AACA,WAAKR,OAAL,GAAe,IAAItsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAf;AACA,WAAKP,MAAL,GAAc,IAAIvsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAd;AACA,WAAKN,eAAL,GAAuB,IAAIxsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAvB;AACA,WAAKL,MAAL,GAAc,IAAIzsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAd;AACA,WAAKV,UAAL,GAAkB,IAAIpsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAlB;AACA,WAAKT,eAAL,GAAuB,IAAIrsB,KAAJ,CAAU,KAAK8sB,UAAf,CAAvB;AACA,WAAKJ,MAAL,GAAc,IAAI1sB,KAAJ,CAAU,KAAK8sB,UAAf,CAAd;;AAEA,WAAK,IAAIZ,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKY,UAA3B,EAAuCZ,EAAE,EAAzC,EAA6C;AAC3C,aAAKD,aAAL,CAAmBC,EAAnB;AACD;AACF;AAjBA,GAjBqB,EAmCrB;AACDrb,IAAAA,GAAG,EAAE,aADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS0c,WAAT,CAAqBxY,CAArB,EAAwB;AAC7B,aAAOpD,IAAI,CAAC6b,GAAL,CAAS,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,GAAkBzb,IAAI,CAAC6b,GAAL,CAASzY,CAAT,EAAY,CAAZ,CAArC,CAAT,EAA+D,KAAKqY,UAApE,CAAP;AACD;AAJA,GAnCqB,EAwCrB;AACD7Y,IAAAA,GAAG,EAAE,KADJ;AAED1D,IAAAA,KAAK,EAAE,SAASkd,GAAT,CAAahZ,CAAb,EAAgBkZ,KAAhB,EAAuB;AAC5B,aAAOtc,IAAI,CAACoc,GAAL,CAAShZ,CAAC,GAAGkZ,KAAb,CAAP;AACD;AAJA,GAxCqB,EA6CrB;AACD1Z,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS4f,KAAT,CAAe1b,CAAf,EAAkBmF,CAAlB,EAAqBC,CAArB,EAAwB;AAC7B,UAAIpF,CAAC,GAAGmF,CAAJ,IAASnF,CAAC,GAAGoF,CAAjB,EAAoB,OAAO,CAAP;AACpB,aAAO,CAAP;AACD;AALA,GA7CqB,EAmDrB;AACD5F,IAAAA,GAAG,EAAE,cADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS6f,YAAT,CAAsB9sB,CAAtB,EAAyB;AAC9B,UAAI+sB,CAAC,GAAG,CAAR;;AAEA,WAAK,IAAIf,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKY,UAA3B,EAAuCZ,EAAE,EAAzC,EAA6C;AAC3C;AACA,YAAIgB,CAAC,GAAG,KAAK,CAAC,CAAD,GAAKhB,EAAE,IAAI,KAAKY,UAAL,GAAkB,CAAtB,CAAF,GAA6B,CAAvC,CAAR,CAF2C,CAEQ;;AAEnDI,QAAAA,CAAC,IAAI,KAAKZ,OAAL,CAAaJ,EAAb,CAAL;AACA,YAAIiB,CAAC,GAAG,IAAI,KAAKV,MAAL,CAAYP,EAAZ,CAAZ;AACA,YAAI7a,CAAC,GAAGnR,CAAC,GAAGitB,CAAJ,GAAQD,CAAhB;AACAD,QAAAA,CAAC,IAAIhf,IAAI,CAACoI,GAAL,CAAS,KAAK+V,UAAL,CAAgBF,EAAhB,IAAsB,KAAK7B,GAAL,CAAS,KAAKqC,MAAL,CAAYR,EAAZ,IAAkB7a,CAA3B,EAA8B,KAAK8a,MAAL,CAAYD,EAAZ,CAA9B,CAAtB,GAAuE,KAAKrC,WAAL,CAAiBxY,CAAjB,CAAhF,CAAL;AACD,OAX6B,CAW5B;;;AAGF,aAAO4b,CAAC,GAAG,KAAKH,UAAhB;AACD;AAjBA,GAnDqB,EAqErB;AACDjc,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS8c,KAAT,CAAe/pB,CAAf,EAAkB;AACvB,aAAO,KAAK0pB,gBAAL,GAAwB,KAAKJ,IAAL,CAAUU,SAAlC,GAA8C,KAAKV,IAAL,CAAUW,SAAxD,GAAoE,KAAK6C,YAAL,CAAkB9sB,CAAlB,CAApE,GAA2F,KAAK2pB,WAAL,CAAiB3pB,CAAC,GAAG,KAAKypB,OAAT,GAAmB,CAApC,CAAlG;AACD;AAJA,GArEqB,EA0ErB;AACD9Y,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS4c,KAAT,CAAe7pB,CAAf,EAAkB;AACvB,aAAO,KAAKspB,IAAL,CAAUQ,KAAV,IAAmB,CAAC9pB,CAAC,GAAG,KAAKypB,OAAV,KAAsB,KAAKA,OAAL,GAAe,CAArC,CAAnB,CAAP;AACD;AAJA,GA1EqB,EA+ErB;AACD9Y,IAAAA,GAAG,EAAE,iBADJ;AAED1D,IAAAA,KAAK,EAAE,SAASigB,eAAT,CAAyB3C,GAAzB,EAA8B;AACnC,UAAI4C,GAAG,GAAG,CAAC,CAAD,EAAI,KAAK7D,IAAL,CAAUU,SAAd,EAAyB,KAAKV,IAAL,CAAUQ,KAAnC,EAA0C,CAA1C,CAAV;AACA,UAAIsD,QAAQ,GAAG7C,GAAG,CAAC8C,oBAAJ,CAAyBhtB,KAAzB,CAA+BkqB,GAA/B,EAAoC4C,GAApC,CAAf;AACAC,MAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,aAAzB;AACAF,MAAAA,QAAQ,CAACE,YAAT,CAAsB,GAAtB,EAA2B,sBAA3B;AACAF,MAAAA,QAAQ,CAACE,YAAT,CAAsB,IAAI,GAAJ,GAAU,GAAhC,EAAqC,sBAArC;AACAF,MAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,aAAzB;AACA/C,MAAAA,GAAG,CAACgD,SAAJ,GAAgBH,QAAhB;AACA7C,MAAAA,GAAG,CAACiD,QAAJ,CAAantB,KAAb,CAAmBkqB,GAAnB,EAAwB4C,GAAxB;AACD;AAXA,GA/EqB,EA2FrB;AACDxc,IAAAA,GAAG,EAAE,MADJ;AAED1D,IAAAA,KAAK,EAAE,SAASqd,IAAT,GAAgB;AACrB,UAAIC,GAAG,GAAG,KAAKjB,IAAL,CAAUiB,GAApB;AACAA,MAAAA,GAAG,CAACkD,WAAJ,GAAkB,GAAlB;AACAlD,MAAAA,GAAG,CAACmD,wBAAJ,GAA+B,SAA/B;;AAEA,UAAI,KAAKnE,UAAL,CAAgBoE,WAApB,EAAiC;AAC/B;AACA,eAAO,KAAKT,eAAL,CAAqB3C,GAArB,CAAP;AACD;;AAED,WAAK,IAAIyB,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKY,UAA3B,EAAuCZ,EAAE,EAAzC,EAA6C;AAC3C,YAAI,KAAKS,OAAL,GAAe,KAAKN,eAAL,CAAqBH,EAArB,CAAf,IAA2CU,IAAI,CAACC,GAAL,EAA/C,EAA2D;AACzD,eAAKT,UAAL,CAAgBF,EAAhB,KAAuB,KAAKV,cAA5B;AACD,SAFD,MAEO;AACL,eAAKY,UAAL,CAAgBF,EAAhB,KAAuB,KAAKV,cAA5B;AACD;;AAED,aAAKY,UAAL,CAAgBF,EAAhB,IAAsBje,IAAI,CAACmK,GAAL,CAASnK,IAAI,CAACoG,GAAL,CAAS,KAAK+X,UAAL,CAAgBF,EAAhB,CAAT,EAA8B,CAA9B,CAAT,EAA2C,KAAKM,eAAL,CAAqBN,EAArB,CAA3C,CAAtB;AACA,aAAKC,MAAL,CAAYD,EAAZ,IAAkB,CAAC,KAAKC,MAAL,CAAYD,EAAZ,IAAkB,KAAK1C,IAAL,CAAU1H,KAAV,GAAkB,KAAKyK,MAAL,CAAYL,EAAZ,CAAlB,GAAoC,KAAKZ,YAA5D,KAA6E,IAAIrd,IAAI,CAAC6f,EAAtF,CAAlB;AACD;;AAED,UAAIC,IAAI,GAAG,CAACC,QAAZ;AAEA,UAAIC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,CAAX;;AAEA,WAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGD,IAAI,CAACzuB,MAA3B,EAAmC0uB,EAAE,EAArC,EAAyC;AACvC,YAAIC,IAAI,GAAGF,IAAI,CAACC,EAAD,CAAf;AACAzD,QAAAA,GAAG,CAACE,SAAJ;;AAEA,aAAK,IAAIzqB,CAAC,GAAG,CAAC,KAAKypB,OAAnB,EAA4BzpB,CAAC,IAAI,KAAKypB,OAAtC,EAA+CzpB,CAAC,IAAI,KAAKspB,IAAL,CAAUD,GAAV,CAAc0B,UAAlE,EAA8E;AAC5E,cAAI5Z,CAAC,GAAG,KAAK0Y,KAAL,CAAW7pB,CAAX,CAAR;;AAEA,cAAI+sB,CAAC,GAAG,KAAKhD,KAAL,CAAW/pB,CAAX,CAAR;;AAEAuqB,UAAAA,GAAG,CAACS,MAAJ,CAAW7Z,CAAX,EAAc,KAAKmY,IAAL,CAAUU,SAAV,GAAsBiE,IAAI,GAAGlB,CAA3C;AACAc,UAAAA,IAAI,GAAG9f,IAAI,CAACoG,GAAL,CAAS0Z,IAAT,EAAed,CAAf,CAAP;AACD;;AAEDxC,QAAAA,GAAG,CAAC2D,SAAJ;AACA3D,QAAAA,GAAG,CAACgD,SAAJ,GAAgB,QAAQhuB,MAAR,CAAe,KAAKgqB,UAAL,CAAgBmB,KAA/B,EAAsC,MAAtC,CAAhB;AACAH,QAAAA,GAAG,CAACK,WAAJ,GAAkB,QAAQrrB,MAAR,CAAe,KAAKgqB,UAAL,CAAgBmB,KAA/B,EAAsC,MAAtC,CAAlB;AACAH,QAAAA,GAAG,CAAC4D,IAAJ;AACD;;AAED,UAAIN,IAAI,GAAG,KAAKxC,OAAZ,IAAuB,KAAK+C,QAAL,GAAgBP,IAA3C,EAAiD;AAC/C,aAAKhC,OAAL;AACD;;AAED,WAAKuC,QAAL,GAAgBP,IAAhB;AACA,aAAO,IAAP;AACD;AApDA,GA3FqB,CAAZ,EAgJR,CAAC;AACHld,IAAAA,GAAG,EAAE,eADF;AAEH1D,IAAAA,KAAK,EAAE,SAASie,aAAT,CAAuBmD,UAAvB,EAAmC;AACxC,aAAOve,MAAM,CAACwe,MAAP,CAAc,CAAC;AACpB5D,QAAAA,KAAK,EAAE,aADa;AAEpBiD,QAAAA,WAAW,EAAE;AAFO,OAAD,EAGlB;AACD;AACAjD,QAAAA,KAAK,EAAE;AAFN,OAHkB,EAMlB;AACD;AACAA,QAAAA,KAAK,EAAE;AAFN,OANkB,EASlB;AACD;AACAA,QAAAA,KAAK,EAAE;AAFN,OATkB,CAAd,EAYH2D,UAZG,CAAP;AAaD;AAhBE,GAAD,CAhJQ,CAAZ;;AAmKA,SAAOlD,SAAP;AACD,CA3LD,EAFA;;AA+LA,IAAIoD,QAAQ;AACZ;AACA,YAAY;AACV;;;;;;;;;;;;;;;;;AAiBA,WAASA,QAAT,GAAoB;AAClB,QAAIlF,GAAG,GAAGtpB,SAAS,CAACT,MAAV,GAAmB,CAAnB,IAAwBS,SAAS,CAAC,CAAD,CAAT,KAAiBsF,SAAzC,GAAqDtF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA9E;;AAEAsoB,IAAAA,eAAe,CAAC,IAAD,EAAOkG,QAAP,CAAf;;AAEA,SAAKC,SAAL,GAAiBnF,GAAG,CAACmF,SAAJ,IAAiBnnB,QAAQ,CAAConB,IAA3C,CALkB,CAK+B;;AAEjD,SAAKpF,GAAL,GAAWvZ,MAAM,CAACwe,MAAP,CAAc;AACvB9c,MAAAA,KAAK,EAAE,KADgB;AAEvBkd,MAAAA,KAAK,EAAE9R,MAAM,CAAC+R,gBAAP,IAA2B,CAFX;AAGvB/M,MAAAA,KAAK,EAAE,GAHgB;AAIvBqI,MAAAA,SAAS,EAAE,CAJY;AAKvBG,MAAAA,SAAS,EAAE,CALY;AAMvBM,MAAAA,KAAK,EAAE,MANgB;AAOvBkE,MAAAA,KAAK,EAAE,KAPgB;AAQvB9E,MAAAA,KAAK,EAAElN,MAAM,CAACiS,gBAAP,CAAwB,KAAKL,SAA7B,EAAwC1E,KAAxC,CAA8Ca,OAA9C,CAAsD,IAAtD,EAA4D,EAA5D,CARgB;AASvBmE,MAAAA,MAAM,EAAElS,MAAM,CAACiS,gBAAP,CAAwB,KAAKL,SAA7B,EAAwCM,MAAxC,CAA+CnE,OAA/C,CAAuD,IAAvD,EAA6D,EAA7D,CATe;AAUvBoE,MAAAA,SAAS,EAAE,KAVY;AAWvBhE,MAAAA,UAAU,EAAE,IAXW;AAYvBiE,MAAAA,SAAS,EAAE;AAZY,KAAd,EAaR3F,GAbQ,CAAX;AAcA;;;;AAIA,SAAKgB,KAAL,GAAa,CAAb;AACA;;;;AAIA,SAAK1qB,GAAL,GAAW,KAAX;AACA;;;;AAIA,SAAKiiB,KAAL,GAAa5W,MAAM,CAAC,KAAKqe,GAAL,CAASzH,KAAV,CAAnB;AACA;;;;AAIA,SAAKqI,SAAL,GAAiBjf,MAAM,CAAC,KAAKqe,GAAL,CAASY,SAAV,CAAvB;AACA;;;;AAIA,SAAKH,KAAL,GAAa9e,MAAM,CAAC,KAAKqe,GAAL,CAASqF,KAAT,GAAiB,KAAKrF,GAAL,CAASS,KAA3B,CAAnB;AACA;;;;AAIA,SAAKgF,MAAL,GAAc9jB,MAAM,CAAC,KAAKqe,GAAL,CAASqF,KAAT,GAAiB,KAAKrF,GAAL,CAASyF,MAA3B,CAApB;AACA;;;;AAIA,SAAK9E,SAAL,GAAiBhf,MAAM,CAAC,KAAK8jB,MAAL,GAAc,CAAf,CAAN,GAA0B,CAA3C;AACA;;;;AAIA,SAAKpE,KAAL,GAAa,OAAOnrB,MAAP,CAAc,KAAK0vB,OAAL,CAAa,KAAK5F,GAAL,CAASqB,KAAtB,CAAd,EAA4C,GAA5C,CAAb;AACA;;;;;AAKA,SAAKwE,aAAL,GAAqB;AACnBtN,MAAAA,KAAK,EAAE,KAAKA,KADO;AAEnBqI,MAAAA,SAAS,EAAE,KAAKA;AAFG,KAArB;AAIA;;;;AAIA,SAAKkF,MAAL,GAAc9nB,QAAQ,CAAC6K,aAAT,CAAuB,QAAvB,CAAd;AACA;;;;AAIA,SAAKqY,GAAL,GAAW,KAAK4E,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAX,CA/EkB,CA+EuB;;AAEzC,SAAKD,MAAL,CAAYrF,KAAZ,GAAoB,KAAKA,KAAzB;AACA,SAAKqF,MAAL,CAAYL,MAAZ,GAAqB,KAAKA,MAA1B,CAlFkB,CAkFgB;;AAElC,QAAI,KAAKzF,GAAL,CAASuF,KAAT,KAAmB,IAAvB,EAA6B;AAC3B,WAAKO,MAAL,CAAY3d,KAAZ,CAAkBsY,KAAlB,GAA0B,KAAKqF,MAAL,CAAY3d,KAAZ,CAAkBsd,MAAlB,GAA2B,MAArD;AACD,KAFD,MAEO;AACL,WAAKK,MAAL,CAAY3d,KAAZ,CAAkBsY,KAAlB,GAA0B,GAAGvqB,MAAH,CAAU,KAAKuqB,KAAL,GAAa,KAAKT,GAAL,CAASqF,KAAhC,EAAuC,IAAvC,CAA1B;AACA,WAAKS,MAAL,CAAY3d,KAAZ,CAAkBsd,MAAlB,GAA2B,GAAGvvB,MAAH,CAAU,KAAKuvB,MAAL,GAAc,KAAKzF,GAAL,CAASqF,KAAjC,EAAwC,IAAxC,CAA3B;AACD;AACD;;;;;AAKA,SAAKW,MAAL,GAAc,EAAd,CA/FkB,CA+FA;;AAElB,QAAI,KAAKhG,GAAL,CAAS7X,KAAT,KAAmB,MAAvB,EAA+B;AAC7B,UAAI8d,yBAAyB,GAAG,IAAhC;AACA,UAAIC,iBAAiB,GAAG,KAAxB;AACA,UAAIC,cAAc,GAAGnqB,SAArB;;AAEA,UAAI;AACF,aAAK,IAAIoqB,SAAS,GAAGtE,SAAS,CAACD,aAAV,CAAwB,KAAK7B,GAAL,CAASgF,UAAT,IAAuB,EAA/C,EAAmDqB,MAAM,CAACC,QAA1D,GAAhB,EAAuFC,KAA5F,EAAmG,EAAEN,yBAAyB,GAAG,CAACM,KAAK,GAAGH,SAAS,CAAC1L,IAAV,EAAT,EAA2B8L,IAAzD,CAAnG,EAAmKP,yBAAyB,GAAG,IAA/L,EAAqM;AACnM,cAAIQ,GAAG,GAAGF,KAAK,CAAC3iB,KAAhB;AACA,eAAKoiB,MAAL,CAAYpvB,IAAZ,CAAiB,IAAIkrB,SAAJ,CAAc;AAC7B7B,YAAAA,IAAI,EAAE,IADuB;AAE7BC,YAAAA,UAAU,EAAEuG;AAFiB,WAAd,CAAjB;AAID;AACF,OARD,CAQE,OAAOC,GAAP,EAAY;AACZR,QAAAA,iBAAiB,GAAG,IAApB;AACAC,QAAAA,cAAc,GAAGO,GAAjB;AACD,OAXD,SAWU;AACR,YAAI;AACF,cAAI,CAACT,yBAAD,IAA8BG,SAAS,CAACO,MAAV,IAAoB,IAAtD,EAA4D;AAC1DP,YAAAA,SAAS,CAACO,MAAV;AACD;AACF,SAJD,SAIU;AACR,cAAIT,iBAAJ,EAAuB;AACrB,kBAAMC,cAAN;AACD;AACF;AACF;AACF,KA3BD,MA2BO;AACL,UAAIS,0BAA0B,GAAG,IAAjC;AACA,UAAIC,kBAAkB,GAAG,KAAzB;AACA,UAAIC,eAAe,GAAG9qB,SAAtB;;AAEA,UAAI;AACF,aAAK,IAAI+qB,UAAU,GAAGhH,KAAK,CAAC8B,aAAN,GAAsBwE,MAAM,CAACC,QAA7B,GAAjB,EAA2DU,MAAhE,EAAwE,EAAEJ,0BAA0B,GAAG,CAACI,MAAM,GAAGD,UAAU,CAACrM,IAAX,EAAV,EAA6B8L,IAA5D,CAAxE,EAA2II,0BAA0B,GAAG,IAAxK,EAA8K;AAC5K,cAAIK,IAAI,GAAGD,MAAM,CAACpjB,KAAlB;AACA,eAAKoiB,MAAL,CAAYpvB,IAAZ,CAAiB,IAAImpB,KAAJ,CAAU;AACzBE,YAAAA,IAAI,EAAE,IADmB;AAEzBC,YAAAA,UAAU,EAAE+G;AAFa,WAAV,CAAjB;AAID;AACF,OARD,CAQE,OAAOP,GAAP,EAAY;AACZG,QAAAA,kBAAkB,GAAG,IAArB;AACAC,QAAAA,eAAe,GAAGJ,GAAlB;AACD,OAXD,SAWU;AACR,YAAI;AACF,cAAI,CAACE,0BAAD,IAA+BG,UAAU,CAACJ,MAAX,IAAqB,IAAxD,EAA8D;AAC5DI,YAAAA,UAAU,CAACJ,MAAX;AACD;AACF,SAJD,SAIU;AACR,cAAIE,kBAAJ,EAAwB;AACtB,kBAAMC,eAAN;AACD;AACF;AACF;AACF,KAvJiB,CAuJhB;;;AAGF,SAAK3B,SAAL,CAAejc,WAAf,CAA2B,KAAK4c,MAAhC,EA1JkB,CA0JuB;;AAEzC,QAAI9F,GAAG,CAAC0F,SAAR,EAAmB;AACjB,WAAK/W,KAAL;AACD;AACF;AACD;;;;;;;;AAQAiR,EAAAA,YAAY,CAACsF,QAAD,EAAW,CAAC;AACtB5d,IAAAA,GAAG,EAAE,SADiB;AAEtB1D,IAAAA,KAAK,EAAE,SAASgiB,OAAT,CAAiBsB,GAAjB,EAAsB;AAC3B,UAAIC,cAAc,GAAG,kCAArB;AACAD,MAAAA,GAAG,GAAGA,GAAG,CAAC5F,OAAJ,CAAY6F,cAAZ,EAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB1a,CAAhB,EAAmBO,CAAnB,EAAsB;AACtD,eAAOma,CAAC,GAAGA,CAAJ,GAAQ1a,CAAR,GAAYA,CAAZ,GAAgBO,CAAhB,GAAoBA,CAA3B;AACD,OAFK,CAAN;AAGA,UAAIoa,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDL,GAAjD,CAAb;AACA,aAAOI,MAAM,GAAG,GAAGpxB,MAAH,CAAUqJ,QAAQ,CAAC+nB,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,CAAwBtX,QAAxB,EAAV,EAA8C,GAA9C,EAAmD9Z,MAAnD,CAA0DqJ,QAAQ,CAAC+nB,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,CAAwBtX,QAAxB,EAA1D,EAA8F,GAA9F,EAAmG9Z,MAAnG,CAA0GqJ,QAAQ,CAAC+nB,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAR,CAAwBtX,QAAxB,EAA1G,CAAH,GAAmJ,IAAhK;AACD;AACD;;;;;;;AAVsB,GAAD,EAiBpB;AACD1I,IAAAA,GAAG,EAAE,MADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS4jB,IAAT,CAAcC,WAAd,EAA2B;AAChC,WAAKA,WAAL,IAAoB,oBAAM,KAAKA,WAAL,CAAN,EAAyB,KAAK5B,aAAL,CAAmB4B,WAAnB,CAAzB,EAA0D,KAAKzH,GAAL,CAAS2F,SAAnE,CAApB;;AAEA,UAAI,KAAK8B,WAAL,IAAoB,KAAK5B,aAAL,CAAmB4B,WAAnB,CAApB,KAAwD,CAA5D,EAA+D;AAC7D,aAAK5B,aAAL,CAAmB4B,WAAnB,IAAkC,IAAlC;AACD;;AAED,aAAO,KAAKA,WAAL,CAAP;AACD;AACD;;;;;AAXC,GAjBoB,EAiCpB;AACDngB,IAAAA,GAAG,EAAE,QADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS8jB,MAAT,GAAkB;AACvB,WAAKxG,GAAL,CAASmD,wBAAT,GAAoC,iBAApC;AACA,WAAKnD,GAAL,CAASiD,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAK1D,KAA7B,EAAoC,KAAKgF,MAAzC;AACA,WAAKvE,GAAL,CAASmD,wBAAT,GAAoC,aAApC;AACD;AACD;;;;;AAPC,GAjCoB,EA6CpB;AACD/c,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS+jB,KAAT,GAAiB;AACtB,UAAIC,0BAA0B,GAAG,IAAjC;AACA,UAAIC,kBAAkB,GAAG,KAAzB;AACA,UAAIC,eAAe,GAAG9rB,SAAtB;;AAEA,UAAI;AACF,aAAK,IAAI+rB,UAAU,GAAG,KAAK/B,MAAL,CAAYK,MAAM,CAACC,QAAnB,GAAjB,EAAiD0B,MAAtD,EAA8D,EAAEJ,0BAA0B,GAAG,CAACI,MAAM,GAAGD,UAAU,CAACrN,IAAX,EAAV,EAA6B8L,IAA5D,CAA9D,EAAiIoB,0BAA0B,GAAG,IAA9J,EAAoK;AAClK,cAAIK,KAAK,GAAGD,MAAM,CAACpkB,KAAnB;AACAqkB,UAAAA,KAAK,CAAChH,IAAN;AACD;AACF,OALD,CAKE,OAAOyF,GAAP,EAAY;AACZmB,QAAAA,kBAAkB,GAAG,IAArB;AACAC,QAAAA,eAAe,GAAGpB,GAAlB;AACD,OARD,SAQU;AACR,YAAI;AACF,cAAI,CAACkB,0BAAD,IAA+BG,UAAU,CAACpB,MAAX,IAAqB,IAAxD,EAA8D;AAC5DoB,YAAAA,UAAU,CAACpB,MAAX;AACD;AACF,SAJD,SAIU;AACR,cAAIkB,kBAAJ,EAAwB;AACtB,kBAAMC,eAAN;AACD;AACF;AACF;AACF;AACD;;;;;;AA3BC,GA7CoB,EA8EpB;AACDxgB,IAAAA,GAAG,EAAE,gBADJ;AAED1D,IAAAA,KAAK,EAAE,SAASskB,cAAT,GAA0B;AAC/B,UAAI,KAAK5xB,GAAL,KAAa,KAAjB,EAAwB;;AAExB,WAAKoxB,MAAL,GAH+B,CAGhB;;;AAGf,UAAI,KAAK7B,aAAL,CAAmBjF,SAAnB,KAAiC,IAArC,EAA2C,KAAK4G,IAAL,CAAU,WAAV;AAC3C,UAAI,KAAK3B,aAAL,CAAmBtN,KAAnB,KAA6B,IAAjC,EAAuC,KAAKiP,IAAL,CAAU,OAAV;;AAEvC,WAAKG,KAAL;;AAEA,WAAK3G,KAAL,GAAa,CAAC,KAAKA,KAAL,GAAatc,IAAI,CAAC6f,EAAL,GAAU,CAAV,GAAc,KAAKhM,KAAjC,KAA2C,IAAI7T,IAAI,CAAC6f,EAApD,CAAb;AACA,wBAAI,KAAK2D,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAJ,EAAoC,EAApC;AACD;AACD;;AAEA;;;;;AAlBC,GA9EoB,EAqGpB;AACD7gB,IAAAA,GAAG,EAAE,OADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS+K,KAAT,GAAiB;AACtB,WAAKqS,KAAL,GAAa,CAAb;AACA,WAAK1qB,GAAL,GAAW,IAAX;AACA,WAAK4xB,cAAL;AACD;AACD;;;;;AAPC,GArGoB,EAiHpB;AACD5gB,IAAAA,GAAG,EAAE,MADJ;AAED1D,IAAAA,KAAK,EAAE,SAASrI,IAAT,GAAgB;AACrB,WAAKylB,KAAL,GAAa,CAAb;AACA,WAAK1qB,GAAL,GAAW,KAAX;AACD;AACD;;;;;;;AANC,GAjHoB,EA8HpB;AACDgR,IAAAA,GAAG,EAAE,KADJ;AAED1D,IAAAA,KAAK,EAAE,SAASwkB,GAAT,CAAaX,WAAb,EAA0BY,CAA1B,EAA6B;AAClC,WAAKxC,aAAL,CAAmB4B,WAAnB,IAAkC9lB,MAAM,CAAC0mB,CAAD,CAAxC;AACD;AACD;;;;;;AALC,GA9HoB,EAyIpB;AACD/gB,IAAAA,GAAG,EAAE,UADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS0kB,QAAT,CAAkBD,CAAlB,EAAqB;AAC1B,WAAKD,GAAL,CAAS,OAAT,EAAkBC,CAAlB;AACD;AACD;;;;;;AALC,GAzIoB,EAoJpB;AACD/gB,IAAAA,GAAG,EAAE,cADJ;AAED1D,IAAAA,KAAK,EAAE,SAAS2kB,YAAT,CAAsBF,CAAtB,EAAyB;AAC9B,WAAKD,GAAL,CAAS,WAAT,EAAsBC,CAAtB;AACD;AAJA,GApJoB,CAAX,CAAZ;;AA2JA,SAAOnD,QAAP;AACD,CAtVD,EAFA;;eA0VeA;;;;;;;;;;;;;IC5nBf;;AACA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA,EAEA;;;AACA,IAAM,OAAO,GAAW,iDAAxB;AACA,IAAM,KAAK,GAAG,+BAAd;AACA,IAAI,WAAW,GAAW,SAA1B;AACA,IAAI,UAAU,GAAG,SAAjB;AACA,IAAI,qBAAqB,GAAG,QAAQ,CAAC,cAAT,CAAwB,sBAAxB,CAA5B,EAEA;;AAEA,SAAS,KAAT,GAAc;AACV,EAAA,OAAA,CAAA,OAAA,CAAM,GAAN,CAAU,OAAV,EACK,IADL,CACU,UAAU,QAAV,EAAkB;AACpB;AACA,IAAA,WAAW,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAd;AACA,IAAA,QAAQ,CAAC,aAAT,CAAuB,SAAvB,EAAkC,YAAlC,CAA+C,KAA/C,EAAsD,WAAW,CAAC,IAAZ,CAAiB,UAAvE;AACA,IAAA,WAAW,CACP,WAAW,CAAC,OAAD,CAAX,CAAqB,QADd,EAEP,MAFO,EAGP,WAAW,CAAC,MAAD,CAAX,CAAoB,UAHb,EAIP,KAJO,CAAX;AAMH,GAXL,EAYK,KAZL,CAYW,UAAU,KAAV,EAAe;AAClB;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACH,GAfL;AAgBH;;AAED,SAAS,WAAT,CAAqB,IAArB,EAAmC,OAAnC,EAAoD,GAApD,EAAiE,KAAjE,EAA8E;AAC1E;AACA,EAAA,aAAA,CAAA,OAAA,CAAU,IAAV,CAAe;AACX,gBAAY;AACR,UAAI,MADI;AAER,UAAI,MAFI;AAGR,UAAI;AAHI,KADD;AAMjB,aAAS,CACR;AACC,cAAQ,IADT;AAEC,gBAAU,eAFX;AAGC,eAAS,OAHV;AAIC,aAAO,GAJR;AAKC,uBAAiB;AALlB,KADQ,CANQ;AAeX,iBAAa;AACT,eAAS,iBAAA;AACL,QAAA,UAAU,CAAC,YAAX,CAAwB,CAAxB;AACH,OAHQ;AAIT,iBAAW,mBAAA;AACP,QAAA,UAAU,CAAC,YAAX,CAAwB,CAAxB;AACH,OANQ;AAOT,eAAS,iBAAA;AACL,QAAA,UAAU,CAAC,YAAX,CAAwB,CAAxB;AACH;AATQ;AAfF,GAAf,EAF0E,CA6B1E;;AACA,EAAA,kBAAkB,GA9BwD,CA+B1E;;AACA,EAAA,UAAU,GAAG,IAAI,UAAA,CAAA,OAAJ,CAAa;AACzB,IAAA,SAAS,EAAE,QAAQ,CAAC,cAAT,CAAwB,gBAAxB,CADc;AAEtB,IAAA,MAAM,EAAE,GAFc;AAGtB,IAAA,SAAS,EAAE,IAHW;AAItB,IAAA,KAAK,EAAE,MAJe;AAKtB,IAAA,SAAS,EAAE;AALW,GAAb,CAAb;AAOH;;AAED,SAAS,kBAAT,GAA2B;AACvB,EAAA,MAAM,CAAC,SAAP,GAAmB,UAAS,CAAT,EAAU;AAC3B,WAAO,EAAE,CAAC,CAAC,OAAF,IAAa,EAAf,CAAP;AACD,GAFD;;AAGA,EAAA,qBAAqB,CAAC,gBAAtB,CAAuC,OAAvC,EAAgD,UAAU,CAAV,EAAW;AACvD,QAAI,MAAM,GAAG,KAAK,qBAAL,EAAb;AACA,QAAI,CAAC,GAAW,CAAC,CAAC,CAAC,KAAF,GAAU,MAAM,CAAC,IAAlB,EAAwB,QAAxB,EAAhB;AAEA,IAAA,aAAA,CAAA,OAAA,CAAU,uBAAV,CAAqC,UAAU,CAAE,CAAF,CAAV,GAAkB,UAAU,CAAE,qBAAqB,CAAC,WAAtB,CAAkC,QAAlC,EAAF,CAA9B,GAAkF,GAArH;AACH,GALD;AAMH,EAED;;;AACA,KAAK;;;ACvFL,IAAIsD,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAG5zB,MAAM,CAAC6zB,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BH,EAAAA,SAAS,CAAChzB,IAAV,CAAe,IAAf,EAAqBmzB,UAArB;AACA,OAAKC,GAAL,GAAW;AACT9O,IAAAA,IAAI,EAAEllB,MAAM,CAAC6zB,MAAP,CAAcI,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBnyB,IAAtB,CAA2BsyB,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBpyB,IAAvB,CAA4BsyB,EAA5B;AACD;AATQ,GAAX;AAYAr0B,EAAAA,MAAM,CAAC6zB,MAAP,CAAcI,OAAd,GAAwB,IAAxB;AACD;;AAEDj0B,MAAM,CAAC6zB,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGz0B,MAAM,CAAC6zB,MAAP,CAAcY,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BxkB,QAAQ,CAACwkB,QAApD;AACA,MAAIC,QAAQ,GAAGzkB,QAAQ,CAACykB,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIH,SAAJ,CAAcE,QAAQ,GAAG,KAAX,GAAmBD,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAE,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASjV,KAAT,EAAgB;AAC7ByU,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAItP,IAAI,GAAG8P,IAAI,CAACC,KAAL,CAAWnV,KAAK,CAACoF,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACjR,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIihB,OAAO,GAAG,KAAd;AACAhQ,MAAAA,IAAI,CAACiQ,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIhQ,IAAI,CAACiQ,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACphB,IAAN,KAAe,KAAf,IAAwBohB,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACX9oB,QAAAA,OAAO,CAAC2pB,KAAR;AAEA7Q,QAAAA,IAAI,CAACiQ,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCW,UAAAA,QAAQ,CAACP,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAACY,OAAf,CAAuB,UAAU5B,CAAV,EAAa;AAClCyC,UAAAA,YAAY,CAACzC,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIpjB,QAAQ,CAAC8lB,MAAb,EAAqB;AAAE;AAC5B9lB,QAAAA,QAAQ,CAAC8lB,MAAT;AACD;AACF;;AAED,QAAIhR,IAAI,CAACjR,IAAL,KAAc,QAAlB,EAA4B;AAC1B6gB,MAAAA,EAAE,CAACqB,KAAH;;AACArB,MAAAA,EAAE,CAACsB,OAAH,GAAa,YAAY;AACvBhmB,QAAAA,QAAQ,CAAC8lB,MAAT;AACD,OAFD;AAGD;;AAED,QAAIhR,IAAI,CAACjR,IAAL,KAAc,gBAAlB,EAAoC;AAClC7H,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEAgqB,MAAAA,kBAAkB;AACnB;;AAED,QAAInR,IAAI,CAACjR,IAAL,KAAc,OAAlB,EAA2B;AACzB7H,MAAAA,OAAO,CAACiB,KAAR,CAAc,kBAAkB6X,IAAI,CAAC7X,KAAL,CAAWlB,OAA7B,GAAuC,IAAvC,GAA8C+Y,IAAI,CAAC7X,KAAL,CAAWipB,KAAvE;AAEAD,MAAAA,kBAAkB;AAElB,UAAIE,OAAO,GAAGC,kBAAkB,CAACtR,IAAD,CAAhC;AACA/b,MAAAA,QAAQ,CAAConB,IAAT,CAAclc,WAAd,CAA0BkiB,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASF,kBAAT,GAA8B;AAC5B,MAAIE,OAAO,GAAGptB,QAAQ,CAACstB,cAAT,CAAwB9C,UAAxB,CAAd;;AACA,MAAI4C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACrsB,MAAR;AACD;AACF;;AAED,SAASssB,kBAAT,CAA4BtR,IAA5B,EAAkC;AAChC,MAAIqR,OAAO,GAAGptB,QAAQ,CAAC6K,aAAT,CAAuB,KAAvB,CAAd;AACAuiB,EAAAA,OAAO,CAACZ,EAAR,GAAahC,UAAb,CAFgC,CAIhC;;AACA,MAAIxnB,OAAO,GAAGhD,QAAQ,CAAC6K,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAI0iB,UAAU,GAAGvtB,QAAQ,CAAC6K,aAAT,CAAuB,KAAvB,CAAjB;AACA7H,EAAAA,OAAO,CAACwqB,SAAR,GAAoBzR,IAAI,CAAC7X,KAAL,CAAWlB,OAA/B;AACAuqB,EAAAA,UAAU,CAACC,SAAX,GAAuBzR,IAAI,CAAC7X,KAAL,CAAWipB,KAAlC;AAEAC,EAAAA,OAAO,CAAC3oB,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EzB,OAAO,CAACyB,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIY8oB,UAAU,CAAC9oB,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAO2oB,OAAP;AAED;;AAED,SAASK,UAAT,CAAoB/C,MAApB,EAA4B8B,EAA5B,EAAgC;AAC9B,MAAIkB,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAI/H,CAAJ,EAAO3V,CAAP,EAAU2d,GAAV;;AAEA,OAAKhI,CAAL,IAAU8H,OAAV,EAAmB;AACjB,SAAKzd,CAAL,IAAUyd,OAAO,CAAC9H,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBgI,MAAAA,GAAG,GAAGF,OAAO,CAAC9H,CAAD,CAAP,CAAW,CAAX,EAAc3V,CAAd,CAAN;;AACA,UAAI2d,GAAG,KAAKpB,EAAR,IAAe/zB,KAAK,CAACo1B,OAAN,CAAcD,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC31B,MAAJ,GAAa,CAAd,CAAH,KAAwBu0B,EAAjE,EAAsE;AACpEmB,QAAAA,OAAO,CAAC/0B,IAAR,CAAagtB,CAAb;AACD;AACF;AACF;;AAED,MAAI8E,MAAM,CAACY,MAAX,EAAmB;AACjBqC,IAAAA,OAAO,GAAGA,OAAO,CAACz1B,MAAR,CAAeu1B,UAAU,CAAC/C,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOmB,OAAP;AACD;;AAED,SAASd,QAAT,CAAkBnC,MAAlB,EAA0BwB,KAA1B,EAAiC;AAC/B,MAAIwB,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACxB,KAAK,CAACM,EAAP,CAAP,IAAqB,CAAC9B,MAAM,CAACY,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAI4C,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C5B,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACuB,OAAO,CAACxB,KAAK,CAACM,EAAP,CAAtB;AACAkB,IAAAA,OAAO,CAACxB,KAAK,CAACM,EAAP,CAAP,GAAoB,CAACtB,EAAD,EAAKgB,KAAK,CAAC6B,IAAX,CAApB;AACD,GAJD,MAIO,IAAIrD,MAAM,CAACY,MAAX,EAAmB;AACxBuB,IAAAA,QAAQ,CAACnC,MAAM,CAACY,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB3B,MAAxB,EAAgC8B,EAAhC,EAAoC;AAClC,MAAIkB,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAClB,EAAD,CAAR,IAAgB9B,MAAM,CAACY,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC3B,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAArB;AACD;;AAED,MAAIpB,aAAa,CAACoB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDpB,EAAAA,aAAa,CAACoB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIwB,MAAM,GAAGtD,MAAM,CAACuD,KAAP,CAAazB,EAAb,CAAb;AAEAnB,EAAAA,cAAc,CAACzyB,IAAf,CAAoB,CAAC8xB,MAAD,EAAS8B,EAAT,CAApB;;AAEA,MAAIwB,MAAM,IAAIA,MAAM,CAACnD,GAAjB,IAAwBmD,MAAM,CAACnD,GAAP,CAAWE,gBAAX,CAA4B9yB,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOw1B,UAAU,CAACnB,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqC0B,IAArC,CAA0C,UAAU1B,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASM,YAAT,CAAsBpC,MAAtB,EAA8B8B,EAA9B,EAAkC;AAChC,MAAIwB,MAAM,GAAGtD,MAAM,CAACuD,KAAP,CAAazB,EAAb,CAAb;AACA9B,EAAAA,MAAM,CAACI,OAAP,GAAiB,EAAjB;;AACA,MAAIkD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACnD,GAAP,CAAW9O,IAAX,GAAkB2O,MAAM,CAACI,OAAzB;AACD;;AAED,MAAIkD,MAAM,IAAIA,MAAM,CAACnD,GAAjB,IAAwBmD,MAAM,CAACnD,GAAP,CAAWG,iBAAX,CAA6B/yB,MAAzD,EAAiE;AAC/D+1B,IAAAA,MAAM,CAACnD,GAAP,CAAWG,iBAAX,CAA6BiB,OAA7B,CAAqC,UAAUkC,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACzD,MAAM,CAACI,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOJ,MAAM,CAACuD,KAAP,CAAazB,EAAb,CAAP;AACA9B,EAAAA,MAAM,CAAC8B,EAAD,CAAN;AAEAwB,EAAAA,MAAM,GAAGtD,MAAM,CAACuD,KAAP,CAAazB,EAAb,CAAT;;AACA,MAAIwB,MAAM,IAAIA,MAAM,CAACnD,GAAjB,IAAwBmD,MAAM,CAACnD,GAAP,CAAWE,gBAAX,CAA4B9yB,MAAxD,EAAgE;AAC9D+1B,IAAAA,MAAM,CAACnD,GAAP,CAAWE,gBAAX,CAA4BkB,OAA5B,CAAoC,UAAUkC,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"main.0e24b174.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Amplitude\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Amplitude\"] = factory();\n\telse\n\t\troot[\"Amplitude\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 47);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1a6fefbc9287c68fbde5","/**\n * These variables make Amplitude run. The config is the most important\n * containing active settings and parameters.\n *\n * The config JSON is the global settings for ALL of Amplitude functions.\n * This is global and contains all of the user preferences. The default\n * settings are set, and the user overwrites them when they initialize\n * Amplitude.\n *\n * @module config\n * @type {object}\n * @property {string}  \tconfig.version          \t\t\t\t- The current version of AmplitudeJS.\n * @property {object} \tconfig.audio \t\t \t\t\t\t\t\t\t\t-\tHandles all of the audio.\n * @property {object} \tconfig.active_metadata\t\t\t\t\t- Contains the active metadata for the song.\n * @property {string} \tconfig.active_album\t\t\t\t\t\t\t- Holds the active album name. Used to check and see if the album changed and run the album changed callback.\n * @property {number} \tconfig.active_index\t\t\t\t\t\t\t- Contains the index of the actively playing song.\n * @property {string} \tconfig.active_playlist\t\t\t\t\t- Contains the key to the active playlist index.\n * @property {number} \tconfig.playback_speed\t\t\t\t\t\t- Sets the initial playback speed of the song. The values for this can be 1.0, 1.5, 2.0\n * @property {object} \tconfig.callbacks\t\t\t\t\t\t\t\t- The user can pass a JSON object with a key => value store of callbacks to be run at certain events.\n * @property {array} \t\tconfig.songs\t\t\t\t\t\t\t\t\t\t- Contains all of the songs the user has passed to Amplitude to use.\n * @property {object} \tconfig.playlists\t\t\t\t\t\t\t\t- Contains all of the playlists the user created.\n * @property {object} \tconfig.start_song \t\t\t\t\t\t\t- The index of the song that AmplitudeJS should start with.\n * @property {string} \tconfig.starting_playlist \t\t\t\t- The starting playlist the player will intiialize to.\n * @property {string} \tconfig.starting_playlist_song \t- The index of the song in the playlist that should be started.\n * @property {boolean} \tconfig.repeat \t\t\t\t\t\t\t\t\t- When repeat is on, when the song ends the song will replay itself.\n * @property {object} \tconfig.shuffle_list\t\t\t\t\t\t\t- When shuffled, gets populated with the songs the user provided in a random order.\n * @property {boolean} \tconfig.shuffle_on\t\t\t\t\t\t\t\t- When on, gets set to true so when traversing through songs, AmplitudeJS knows whether or not to use the songs object or the shuffle_list\n * @property {string}\t\tconfig.default_album_art \t\t\t\t- The user can set default album art to be displayed if the song they set doesn't contain album art.\n * @property {string} \tconfig.default_playlist_art \t\t- The user can set default playlist art to be displayed if the playlist they are setting meta data for doesn't contain an art picture.\n * @property {boolean} \tconfig.debug\t\t\t\t\t\t\t\t\t\t- When set to true, AmplitudeJS will print to the console any errors providing helpful feedback to the user.\n * @property {number} \tconfig.volume \t\t\t\t\t\t\t\t\t- The user can set the initial volume to a number between 0 and 1 over-riding the default of .5\n * @property {number} \tconfig.pre_mute_volume \t\t\t\t\t- This is set on mute so that when a user un-mutes AmplitudeJS knows what to restore the volume to.\n * @property {number}\t\tconfig.volume_increment \t\t\t\t- The default values are an integer between 1 and 100 for how much the volume should increase when the user presses the volume up button.\n * @property {number}\t\tconfig.volume_decrement \t\t\t\t- The default values are an integer between 1 and 100 for how much the volume should decrease when the user presses the volume down button.\n * @property {string} \tconfig.soundcloud_client \t\t\t\t- When using SoundCloud, the user will have to provide their API Client ID\n * @property {boolean} \tconfig.soundcloud_use_art \t\t\t- The user can set this to true and AmplitudeJS will use the album art for the song returned from the Soundcloud API\n * @property {number} \tconfig.soundcloud_song_count \t\t- Used on config to count how many songs are from Soundcloud and compare it to how many are ready for when to move to the rest of the configuration\n * @property {number} \tconfig.soundcloud_songs_ready \t- Used on config to count how many songs are ready so when we get all of the data from the SoundCloud API that we need this should match the SoundCloud song count meaning we can move to the rest of the config.\n * @property {integer}\tconfig.is_touch_moving \t\t\t\t\t- Flag for if the user is moving the screen.\n * @property {boolean}\tconfig.buffered\t\t\t\t\t\t\t\t\t- How much of the song is buffered.\n * @property {object} \tconfig.bindings\t\t\t\t\t\t\t\t\t- Array of bindings to certain key events.\n * @property {boolean} \tconfig.continue_next \t\t\t\t\t\t- Determines when a song ends, we should continue to the next song.\n * @property {number}   config.delay \t\t\t\t\t\t\t\t\t\t- Sets the delay between songs in MS.\n * @property {boolean}  config.use_web_audio_api \t\t\t\t- Flag that determines if the user wants to use Web Audio API Components.\n * @property {boolean}  config.web_audio_api_available  - Flag that determines if the Web Audio API is available.\n * @property {object}  \tconfig.context \t\t\t\t\t\t\t\t\t- Web Audio API Context\n * @property {object}\t\tconfig.source \t\t\t\t\t\t\t\t\t- Web Audio API Source\n * @property {object} \tconfig.analyser \t\t\t\t\t\t\t\t- Web Audio API Analyser\n * @property {string}\t\tconfig.player_state \t\t\t\t\t\t- The current state of the player.\n */\nimport { version } from \"../package.json\";\n\nmodule.exports = {\n  version: version,\n\n  audio: new Audio(),\n\n  active_metadata: {},\n\n  active_album: \"\",\n\n  active_index: 0,\n\n  active_playlist: null,\n\n  playback_speed: 1.0,\n\n  callbacks: {},\n\n  songs: [],\n\n  playlists: {},\n\n  start_song: \"\",\n\n  starting_playlist: \"\",\n\n  starting_playlist_song: \"\",\n\n  repeat: false,\n\n  repeat_song: false,\n\n  shuffle_list: {},\n\n  shuffle_on: false,\n\n  default_album_art: \"\",\n\n  default_playlist_art: \"\",\n\n  debug: false,\n\n  volume: 0.5,\n\n  pre_mute_volume: 0.5,\n\n  volume_increment: 5,\n\n  volume_decrement: 5,\n\n  soundcloud_client: \"\",\n\n  soundcloud_use_art: false,\n\n  soundcloud_song_count: 0,\n\n  soundcloud_songs_ready: 0,\n\n  is_touch_moving: false,\n\n  buffered: 0,\n\n  bindings: {},\n\n  continue_next: true,\n\n  delay: 0,\n\n  player_state: \"stopped\",\n\n  web_audio_api_available: false,\n\n  context: null,\n\n  source: null,\n\n  analyser: null,\n\n  visualizations: {\n    available: [],\n\n    active: [],\n\n    backup: \"\"\n  },\n\n  waveforms: {\n    sample_rate: 100,\n\n    built: []\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the Checks module.\n * @module utilities/checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * Imports the Audio Navigation module.\n * @module utilities/audioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * Imports the Play/Pause Visual Elements module.\n * @module visual/playPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Imports the Meta Data Visual Elements module.\n * @module visual/metaDataElements\n */\nimport MetaDataElements from \"../visual/metaDataElements.js\";\n\n/**\n * Imports AmplitudeJS Callback Utility\n * @module utilities/callbacks\n */\nimport Callbacks from \"../utilities/callbacks.js\";\n\n/**\n * Imports AmplitudeJS Debug Utility\n * @module utilities/debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * Import the Visualizations from the FX module.\n * @module fx/visualizations\n */\nimport Visualizations from \"../fx/visualizations.js\";\n\n/**\n * Interacts directly with native functions of the Audio element. Logic\n * leading up to these methods are handled by click handlers which call\n * helpers and visual synchronizers. These are the core functions of AmplitudeJS.\n * Every other function that leads to these prepare the information to be\n * acted upon by these functions.\n *\n * @module core/Core\n */\nlet Core = (function() {\n  /**\n   * Plays the active song. If the current song is live, it reconnects\n   * the stream before playing.\n   *\n   * Public Accessor: Amplitude.play()\n   *\n   * @access public\n   */\n  function play() {\n    Visualizations.stop();\n    Visualizations.run();\n\n    /*\n\t\t\tIf the audio is live we re-conenct the stream.\n\t\t*/\n    if (config.active_metadata.live) {\n      reconnectStream();\n    }\n\n    /*\n\t\t\tMobile remote sources need to be reconnected on play. I think this is\n\t\t\tbecause mobile browsers are optimized not to load all resources\n\t\t\tfor speed reasons. We only do this if mobile and the paused button\n\t\t\tis not clicked. If the pause button was clicked then we don't reconnect\n\t\t\tor the user will lose their place in the stream.\n\t\t*/\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      ) &&\n      !config.paused\n    ) {\n      reconnectStream();\n    }\n\n    /*\n\t\t\tPlay the song and set the playback rate to the playback\n\t\t\tspeed.\n    */\n    let playPromise = config.audio.play();\n\n    if( playPromise !== undefined ){\n      playPromise.then( _ => {\n\n      })\n      .catch( error => {\n\n      });\n    }\n    config.audio.play();\n    config.audio.playbackRate = config.playback_speed;\n  }\n\n  /**\n   * Pauses the active song. If it's live, it disconnects the stream.\n   *\n   * Public Accessor: Amplitude.pause()\n   *\n   * @access public\n   */\n  function pause() {\n    Visualizations.stop();\n\n    /*\n\t\t\tPause the active song.\n\t\t*/\n    config.audio.pause();\n\n    /*\n\t\t\tFlag that pause button was clicked.\n\t\t*/\n    config.paused = true;\n\n    /*\n\t\t\tIf the song is live, we disconnect the stream so we aren't\n\t\t\tsaving it to memory.\n\t\t*/\n    if (config.active_metadata.live) {\n      disconnectStream();\n    }\n  }\n\n  /**\n   * Stops the active song by setting the current song time to 0.\n   * When the user resumes, it will be from the beginning.\n   * If it's a live stream it disconnects.\n   *\n   * Public Accessor: Amplitude.stop()\n   *\n   * @access public\n   */\n  function stop() {\n    Visualizations.stop();\n\n    /*\n\t\t\tSet the current time of the song to 0 which will reset the song.\n\t\t*/\n    if (config.audio.currentTime != 0) {\n      config.audio.currentTime = 0;\n    }\n\n    /*\n\t\t\tRun pause so the song will stop\n\t\t*/\n    config.audio.pause();\n\n    /*\n\t\t\tIf the song is live, disconnect the stream.\n\t\t*/\n    if (config.active_metadata.live) {\n      disconnectStream();\n    }\n\n    /*\n\t\t\tRun the stop callback\n\t\t*/\n    Callbacks.run(\"stop\");\n  }\n\n  /**\n   * Sets the song volume.\n   *\n   * Public Accessor: Amplitude.setVolume( volumeLevel )\n   *\n   * @access public\n   * @param {number} volumeLevel - A number between 1 and 100 as a percentage of\n   * min to max for a volume level.\n   */\n  function setVolume(volumeLevel) {\n    /*\n\t\t\tIf the volume is set to mute somewhere else, we sync the display.\n\t\t*/\n    if (volumeLevel == 0) {\n      config.audio.muted = true;\n    } else {\n      config.audio.muted = false;\n    }\n\n    /*\n\t\t\tSets the volume in the config so we can reference it later on.\n\t\t*/\n    config.volume = volumeLevel;\n\n    /*\n\t\t\tSet the volume of the active song.\n\t\t*/\n    config.audio.volume = volumeLevel / 100;\n  }\n\n  /**\n   * Sets the song percentage. If it's a live song, we ignore this because\n   * we can't skip ahead. This is an issue if you have a playlist with\n   * a live source.\n   *\n   * Public Accessor: Amplitude.setSongLocation( songPercentage )\n   *\n   * @access public\n   * @param {number} songPercentage - A number between 1 and 100 as a percentage of song completion.\n   */\n  function setSongLocation(songPercentage) {\n    /*\n\t\t\tAs long as the song is not live, we can set the current time of the\n\t\t\tsong to the percentage the user passed in.\n\t\t*/\n    if (!config.active_metadata.live) {\n      config.audio.currentTime = config.audio.duration * (songPercentage / 100);\n    }\n  }\n\n  /**\n   * Skips to a location in a song\n   *\n   * Public Accessor: Amplitude.skipToLocation( seconds )\n   *\n   * @access public\n   * @param {number} seconds - An integer containing the seconds to skip to\n   */\n  function skipToLocation(seconds) {\n    /*\n\t\t\tWhen the active song can be played through, we can check to\n\t\t\tsee if the seconds will work. We only bind the event handler\n\t\t\tonce and remove it once it's fired.\n\t\t*/\n    config.audio.addEventListener(\n      \"canplaythrough\",\n      function() {\n        /*\n\t\t\t\tIf the active song duration is greater than or equal to the\n\t\t\t\tamount of seconds the user wants to skip to and the seconds\n\t\t\t\tis greater than 0, we skip to the seconds defined.\n\t\t\t*/\n        if (config.audio.duration >= seconds && seconds > 0) {\n          config.audio.currentTime = seconds;\n        } else {\n          Debug.writeMessage(\n            \"Amplitude can't skip to a location greater than the duration of the audio or less than 0\"\n          );\n        }\n      },\n      { once: true }\n    );\n  }\n\n  /**\n   * Disconnects the live stream\n   *\n   * Public Accessor: Amplitude.disconnectStream()\n   *\n   * @access public\n   */\n  function disconnectStream() {\n    config.audio.src = \"\";\n    config.audio.load();\n  }\n\n  /**\n   * Reconnects the live stream\n   *\n   * Public Accessor: Amplitude.reconnectStream()\n   *\n   * @access public\\\n   */\n  function reconnectStream() {\n    config.audio.src = config.active_metadata.url;\n    config.audio.load();\n  }\n\n  /**\n   * Sets the playback speed for the song.\n   *\n   * @param {number} playbackSpeed The speed we want the song to play back at.\n   */\n  function setPlaybackSpeed(playbackSpeed) {\n    /*\n\t\t\tSet the config playback speed.\n\t\t*/\n    config.playback_speed = playbackSpeed;\n\n    /*\n\t\t\tSet the active song playback rate.\n\t\t*/\n    config.audio.playbackRate = config.playback_speed;\n  }\n\n  /*\n\t\tReturn publically facing functions\n\t*/\n  return {\n    play: play,\n    pause: pause,\n    stop: stop,\n    setVolume: setVolume,\n    setSongLocation: setSongLocation,\n    skipToLocation: skipToLocation,\n    disconnectStream: disconnectStream,\n    reconnectStream: reconnectStream,\n    setPlaybackSpeed: setPlaybackSpeed\n  };\n})();\n\nexport default Core;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/core.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Defines the visual representation of AmplitudeJS play pause elements.\n * @module visual/PlayPauseElements\n */\nlet PlayPauseElements = (function() {\n  /**\n   * Syncs all play pause elements.\n   *\n   * @access public\n   */\n  function sync() {\n    syncGlobal();\n    syncPlaylist();\n    syncSong();\n    syncSongInPlaylist();\n  }\n\n  /**\n   * Syncs the global play pause buttons to the state of the active song.\n   *\n   * @access public\n   */\n  function syncGlobal() {\n    /*\n      Get the active song state.\n    */\n    let state = config.audio.paused ? \"paused\" : \"playing\";\n\n    /*\n      Get all play pause buttons.\n    */\n    const playPauseElements = document.querySelectorAll(\n      \".amplitude-play-pause\"\n    );\n\n    /*\n      Iterate over all of the play pause elements syncing the\n      display visually.\n    */\n    for (let i = 0; i < playPauseElements.length; i++) {\n      /*\n        Grab the playlist and song attributes from the element.\n      */\n      let playlist = playPauseElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let song = playPauseElements[i].getAttribute(\"data-amplitude-song-index\");\n\n      /*\n        This method is responsible for only the global elements,\n        so we make sure there are no playlist or songs defined on\n        the element.\n      */\n      if (playlist == null && song == null) {\n        /*\n          Determines what classes we should add and remove\n          from the elements.\n        */\n        switch (state) {\n          case \"playing\":\n            setElementPlay(playPauseElements[i]);\n            break;\n          case \"paused\":\n            setElementPause(playPauseElements[i]);\n            break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the main playlist play pause buttons to the state of the active song.\n   *\n   * @access public\n   */\n  function syncPlaylist() {\n    let state = config.audio.paused ? \"paused\" : \"playing\";\n\n    /*\n      Get all of the main playlist play pause elements\n    */\n    const playlistPlayPauseElements = document.querySelectorAll(\n      '.amplitude-play-pause[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n      Iterate over the play pause elements, syncing the state accordingly.\n    */\n    for (let i = 0; i < playlistPlayPauseElements.length; i++) {\n      /*\n        Grab the song attributes from the element.\n      */\n      let song = playlistPlayPauseElements[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        We want only the play pause elements for the main on a\n        playlist nothing else. We have another method for the\n        song in playlist play pause method.\n      */\n      if (song == null) {\n        /*\n          Determines what classes we should add and remove\n          from the elements.\n        */\n        switch (state) {\n          case \"playing\":\n            setElementPlay(playlistPlayPauseElements[i]);\n            break;\n          case \"paused\":\n            setElementPause(playlistPlayPauseElements[i]);\n            break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song play pause buttons to the state of the active song.\n   *\n   * @access public\n   */\n  function syncSong() {\n    let state = config.audio.paused ? \"paused\" : \"playing\";\n\n    /*\n      Get all of the individual song play pause buttons. These have an\n      amplitude-song-index that matches the active index attribute.\n    */\n    let songPlayPauseElements = document.querySelectorAll(\n      '.amplitude-play-pause[data-amplitude-song-index=\"' +\n        config.active_index +\n        '\"]'\n    );\n\n    /*\n      Iterate over all of the song play pause elements\n    */\n    for (let i = 0; i < songPlayPauseElements.length; i++) {\n      /*\n        Grab the playlist attributes from the element.\n      */\n      let playlist = songPlayPauseElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n\n      /*\n        We want only the song play pause buttons, not ones scoped in a playlist.\n      */\n      if (playlist == null) {\n        /*\n          Determines what classes we should add and remove\n          from the elements.\n        */\n        switch (state) {\n          case \"playing\":\n            setElementPlay(songPlayPauseElements[i]);\n            break;\n          case \"paused\":\n            setElementPause(songPlayPauseElements[i]);\n            break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song in playlist play pause buttons to the state of\n   * the active song.\n   *\n   * @access public\n   */\n  function syncSongInPlaylist() {\n    let state = config.audio.paused ? \"paused\" : \"playing\";\n\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    /*\n      Get all of the individual song play pause buttons. These have an\n      amplitude-song-index attribute. Some have amplitude-playlist which\n      means they are individual songs within a playlist.\n    */\n    let songInPlaylistPlayPauseElements = document.querySelectorAll(\n      '.amplitude-play-pause[data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"][data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n      Iterate over all of the individual play pause elements for songs inspect\n      a playlist.\n    */\n    for (let i = 0; i < songInPlaylistPlayPauseElements.length; i++) {\n      /*\n        Determines what classes we should add and remove\n        from the elements.\n      */\n      switch (state) {\n        case \"playing\":\n          setElementPlay(songInPlaylistPlayPauseElements[i]);\n          break;\n        case \"paused\":\n          setElementPause(songInPlaylistPlayPauseElements[i]);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Sets all of the play pause buttons to paused.\n   *\n   * @access public\n   */\n  function syncToPause() {\n    /*\n      Gets all of the play pause elements\n    */\n    let playPauseElements = document.querySelectorAll(\".amplitude-play-pause\");\n\n    /*\n      Sets all of the elements to pause\n    */\n    for (let i = 0; i < playPauseElements.length; i++) {\n      setElementPause(playPauseElements[i]);\n    }\n  }\n\n  /**\n   * Sets an element to be playing by removing the 'amplitude-paused' class\n   * and adding the 'amplitude-playing' class\n   *\n   * @access public\n   * @param {element} element \t- The element getting the playing class added.\n   */\n  function setElementPlay(element) {\n    element.classList.add(\"amplitude-playing\");\n    element.classList.remove(\"amplitude-paused\");\n  }\n\n  /**\n   * Sets an element to be paused by adding the 'amplitude-paused' class\n   * and removing the 'amplitude-playing' class\n   *\n   * @access public\n   * @param {element} element \t- The element getting the paused class added.\n   */\n  function setElementPause(element) {\n    element.classList.remove(\"amplitude-playing\");\n    element.classList.add(\"amplitude-paused\");\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    sync: sync,\n    syncGlobal: syncGlobal,\n    syncPlaylist: syncPlaylist,\n    syncSong: syncSong,\n    syncSongInPlaylist: syncSongInPlaylist,\n    syncToPause: syncToPause\n  };\n})();\n\nexport default PlayPauseElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/playPauseElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the Core Module\n *\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the Callbacks Module\n *\n * @module utilities/Callbacks\n */\nimport Callbacks from \"../utilities/callbacks.js\";\n\n/**\n * Imports the Checks Module\n *\n * @module utilities/Checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * Imports the Play Pause Elements Module\n *\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Imports the Song Slider Elements Module\n *\n * @module visual/SongSliderElements\n */\nimport SongSliderElements from \"../visual/songSliderElements.js\";\n\n/**\n * Imports the Song Played Progress Elements Module\n *\n * @module visual/SongPlayedProgressElements\n */\nimport SongPlayedProgressElements from \"../visual/songPlayedProgressElements.js\";\n\n/**\n * Imports the Time Elements Module\n *\n * @module visual/TimeElements\n */\nimport TimeElements from \"../visual/timeElements.js\";\n\n/**\n * Meta Data Elements Module\n *\n * @module visual/MetaDataElements\n */\nimport MetaDataElements from \"../visual/metaDataElements.js\";\n\n/**\n * Container Elements Module\n *\n * @module visual/ContainerElements\n */\nimport ContainerElements from \"../visual/containerElements.js\";\n\n/**\n * AmplitudeJS Audio Navigation Utility.\n *\n * @module utilities/AudioNavigation\n */\nlet AudioNavigation = (function() {\n  /**\n   * Sets the next song\n   *\n   * @access public\n   * @param {boolean} [songEnded=false] If the song ended, this is set to true\n   * so we take into effect the repeat setting.\n   */\n  function setNext(songEnded = false) {\n    /*\n      Initializes the next index variable. This will be the\n      index of the song that is next.\n    */\n    let nextIndex = null;\n    let nextSong = {};\n\n    /*\n      Ensure we don't loop in the playlist if config.repeat is not true\n    */\n    let endOfList = false;\n\n    /*\n      Determines if we are repeating the song or not. If we are repeating,\n      the next song will be the same song index.\n    */\n    if (config.repeat_song) {\n      /*\n        If the playlist is shuffled, get the now playing index.\n      */\n      if (config.shuffle_on) {\n        nextIndex = config.shuffle_list[ config.active_index ].index;\n        nextSong = config.shuffle_list[nextIndex];\n      } else {\n        nextIndex = config.active_index;\n        nextSong = config.songs[nextIndex];\n      }\n    } else {\n      /*\n        If the shuffle is on, we use the shuffled list of\n        songs to determine our next song.\n      */\n      if (config.shuffle_on) {\n        /*\n          If the active shuffle index + 1 is less than the length, then\n          we use the next shuffle otherwise we go to the beginning\n          of the shuffle list.\n        */\n        if (parseInt(config.active_index) + 1 < config.shuffle_list.length) {\n          /*\n            Set the next index to be the index of the song in the shuffle list.\n          */\n          nextIndex = parseInt( config.active_index ) + 1;\n        } else {\n          nextIndex = 0\n          endOfList = true;\n        }\n\n        nextSong = config.shuffle_list[ nextIndex ];\n      } else {\n        /*\n          If the active index + 1 is less than the length of the songs, then\n          we use the next song otherwise we go to the beginning of the\n          song list.\n        */\n        if (parseInt(config.active_index) + 1 < config.songs.length) {\n          nextIndex = parseInt(config.active_index) + 1;\n        } else {\n          nextIndex = 0;\n          endOfList = true;\n        }\n\n        /*\n          Sets the next index.\n        */\n        nextSong = config.songs[nextIndex];\n      }\n    }\n\n    /*\n      Change the song after the next button has been pressed.\n    */\n    changeSong(nextSong, nextIndex);\n\n    /*\n   \t\tIf it's the end of the list and repeat is not on, do nothing.\n   \t*/\n    if (endOfList && !config.repeat) {\n    } else {\n      /*\n   \t\t\tIf the song has ended and repeat is on, play the song.\n   \t\t*/\n      if (!(songEnded && !config.repeat && endOfList)) {\n        Core.play();\n      }\n    }\n\n    /*\n      Sync the play pause elements and run the\n      after next callback.\n    */\n    PlayPauseElements.sync();\n    Callbacks.run(\"next\");\n\n    /*\n      If we repeated the song, run the repeat song callback.\n    */\n    if (config.repeat_song) {\n      Callbacks.run(\"song_repeated\");\n    }\n  }\n\n  /**\n   * Sets the next song in a playlist\n   *\n   * @param {string} playlist - The playlist being shuffled\n   * @param {boolean} [songEnded=false] - If the song ended, this is set to true\n   * so we take into effect the repeat setting.\n   */\n  function setNextPlaylist(playlist, songEnded = false) {\n    /*\n      Initializes the next index\n    */\n    let nextIndex = null;\n    let nextSong = {};\n\n    /*\n      Ensure we don't loop in the playlist if config.repeat is not true\n    */\n    let endOfList = false;\n\n    /*\n      If we are repeating the song, then we just start the song over.\n    */\n    if (config.repeat_song) {\n      /*\n        If the playlist is shuffled, get the now playing index.\n      */\n      if (config.playlists[playlist].shuffle) {\n        nextIndex = config.playlists[playlist].active_index;\n        nextSong = config.playlists[playlist].shuffle_list[nextIndex];\n      } else {\n        nextIndex = config.playlists[playlist].active_index;\n        nextSong = config.playlists[playlist].songs[nextIndex];\n      }\n    } else {\n      /*\n        If the playlist is shuffled we get the next index of the playlist.\n      */\n      if (config.playlists[playlist].shuffle) {\n        /*\n          If the active shuffle index + 1 is less than the length of the shuffle list,\n          then we use the next shuffle otherwise we go to the beginning of the shuffle list.\n        */\n        if (\n          parseInt(config.playlists[playlist].active_index) + 1 <\n          config.playlists[playlist].shuffle_list.length\n        ) {\n          /*\n            Set the next index to be the index of the song in the shuffle list.\n          */\n          nextIndex = config.playlists[playlist].active_index + 1;\n        } else {\n          nextIndex = 0;\n          endOfList = true;\n        }\n\n        nextSong = config.playlists[playlist].shuffle_list[nextIndex];\n      } else {\n        /*\n          If the active index +1 is less than the length of the songs in the playlist,\n          then we use the next song otherwise we go to the beginning of the playlist.\n        */\n        if (\n          parseInt(config.playlists[playlist].active_index) + 1 <\n          config.playlists[playlist].songs.length\n        ) {\n          nextIndex = parseInt(config.playlists[playlist].active_index) + 1;\n        } else {\n          nextIndex = 0;\n          endOfList = true;\n        }\n\n        /*\n          Sets the next song.\n        */\n        nextSong = config.playlists[playlist].songs[nextIndex];\n      }\n    }\n\n    /*\n      Sets the active playlist to the playlist we are on.\n    */\n    setActivePlaylist(playlist);\n\n    /*\n      Change the song within the playlist.\n    */\n    changeSongPlaylist(playlist, nextSong, nextIndex);\n\n    /*\n      If it's the end of the playlist and we aren't repeating, do nothing.\n    */\n    if (endOfList && !config.repeat) {\n    } else {\n      if (!(songEnded && !config.repeat && endOfList)) {\n        Core.play();\n      }\n    }\n\n    /*\n      Sync the play pause buttons.\n    */\n    PlayPauseElements.sync();\n    Callbacks.run(\"next\");\n\n    /*\n      Repeat the song.\n    */\n    if (config.repeat_song) {\n      Callbacks.run(\"song_repeated\");\n    }\n  }\n\n  /**\n   * Sets the previous song on the global songs array.\n   *\n   * @access private\n   */\n  function setPrevious() {\n    /*\n      Initializes the previous index\n    */\n    let previousIndex = null;\n    let previousSong = {};\n\n    /*\n      If we are repeating the song, then we just start the song over.\n    */\n    if (config.repeat_song) {\n      /*\n        If the config is shuffled, get the now playing index.\n      */\n      if (config.shuffle_on) {\n        previousIndex = config.active_index;\n        previousSong = config.shuffle_list[previousIndex];\n      } else {\n        previousIndex = config.active_index;\n        previousSong = config.songs[previousIndex];\n      }\n    } else {\n      /*\n        Get the previous index. If the previous index will be less than 0, get the\n        last song of the array and continue.\n      */\n      if (parseInt(config.active_index) - 1 >= 0) {\n        previousIndex = parseInt(config.active_index - 1);\n      } else {\n        previousIndex = parseInt(config.songs.length - 1);\n      }\n\n      /*\n        If the config is shuffled, we grab the song from the shuffle list\n      */\n      if (config.shuffle_on) {\n        /*\n          Grab song from the shuffle list\n        */\n        previousSong = config.shuffle_list[previousIndex];\n      } else {\n        /*\n          Grab song from the songs array\n        */\n        previousSong = config.songs[previousIndex];\n      }\n    }\n    /*\n      Change the song after the next button has been pressed.\n    */\n    changeSong(previousSong, previousIndex);\n\n    /*\n      Play the newest song.\n    */\n    Core.play();\n\n    /*\n      Sync the play pause elements and run the\n      after next callback.\n    */\n    PlayPauseElements.sync();\n    Callbacks.run(\"prev\");\n\n    /*\n      If we repeated the song, run the repeat song callback.\n    */\n    if (config.repeat_song) {\n      Callbacks.run(\"song_repeated\");\n    }\n  }\n\n  /**\n   * Sets the previous playlist song.\n   *\n   * @access private\n   *\n   * @prop {string} playlist  - The playlist we are navigating in.\n   */\n  function setPreviousPlaylist(playlist) {\n    /*\n      Initializes the previous index\n    */\n    let previousIndex = null;\n    let previousSong = {};\n\n    /*\n      If we are repeating the song, then we just start the song over.\n    */\n    if (config.repeat_song) {\n      /*\n        If the playlist is shuffled, get the now playing index.\n      */\n      if (config.playlists[playlist].shuffle) {\n        previousIndex = config.playlists[playlist].active_index;\n        previousSong = config.playlists[playlist].shuffle_list[previousIndex];\n      } else {\n        previousIndex = config.playlists[playlist].active_index;\n        previousSong = config.playlists[playlist].songs[previousIndex];\n      }\n    } else {\n      /*\n        Get the previous index. If the previous index will be less than 0, get the\n        last song of the array and continue.\n      */\n      if (parseInt(config.playlists[playlist].active_index) - 1 >= 0) {\n        previousIndex = parseInt(config.playlists[playlist].active_index - 1);\n      } else {\n        previousIndex = parseInt(config.playlists[playlist].songs.length - 1);\n      }\n\n      /*\n        If the playlist is shuffled, we grab the song from the shuffle list\n      */\n      if (config.playlists[playlist].shuffle) {\n        /*\n          Grab song from the shuffle list\n        */\n        previousSong = config.playlists[playlist].shuffle_list[previousIndex];\n      } else {\n        /*\n          Grab song from the songs array\n        */\n        previousSong = config.playlists[playlist].songs[previousIndex];\n      }\n    }\n\n    /*\n      Sets the active playlist to the playlist we are on.\n    */\n    setActivePlaylist(playlist);\n\n    /*\n      Change the song within the playlist.\n    */\n    changeSongPlaylist(playlist, previousSong, previousIndex);\n\n    /*\n      Plays the song\n    */\n    Core.play();\n\n    /*\n      Sync the play pause buttons.\n    */\n    PlayPauseElements.sync();\n    Callbacks.run(\"prev\");\n\n    /*\n      Repeat the song.\n    */\n    if (config.repeat_song) {\n      Callbacks.run(\"song_repeated\");\n    }\n  }\n\n  /**\n   * Change song in the songs array.\n   *\n   * @access private\n   * @prop {object} song  - The song we are changing to.\n   * @prop {number} index - The index we are changing to.\n   */\n  function changeSong(song, index) {\n    /*\n      Prepare the song change.\n    */\n    prepareSongChange(song);\n\n    /*\n      Change the song.\n    */\n    config.audio.src = song.url;\n    config.active_metadata = song;\n    config.active_album = song.album;\n    \n    config.active_index = parseInt(index);\n\n    /*\n      Set new information now that the song has changed.\n    */\n    afterSongChange();\n  }\n\n  /**\n   * Handles a song change in the playlist\n   *\n   * @access private\n   * @prop {string} playlist - The playlist we are changing the song on.\n   * @prop {object} song     - The song we are changing to in the playlist.\n   * @prop {number} index    - The inded of the song we are changing to in the playlist.\n   */\n  function changeSongPlaylist(playlist, song, index) {\n    /*\n      Prepare the song change.\n    */\n    prepareSongChange(song);\n\n    /*\n      Change the song.\n    */\n    config.audio.src = song.url;\n    config.active_metadata = song;\n    config.active_album = song.album;\n    config.active_index = null;\n\n    config.playlists[playlist].active_index = parseInt(index);\n\n    /*\n      Set new information now that the song has changed.\n    */\n    afterSongChange();\n  }\n\n  /**\n   *  Prepares a song change\n   *\n   * @access private\n   * @prop {object} song  - The song we change to.\n   */\n  function prepareSongChange(song) {\n    /*\n      Stop the current song.\n    */\n    Core.stop();\n\n    /*\n      Sync all of the elements to a stopped song.\n    */\n    PlayPauseElements.syncToPause();\n    SongSliderElements.resetElements();\n    SongPlayedProgressElements.resetElements();\n    TimeElements.resetCurrentTimes();\n\n    /*\n      If an album changes, fire an album change.\n    */\n    if (Checks.newAlbum(song)) {\n      Callbacks.run(\"album_change\");\n    }\n  }\n\n  /**\n   * Updates data on the display after a song has changed.\n   *\n   * @access private\n   */\n  function afterSongChange() {\n    MetaDataElements.displayMetaData();\n    ContainerElements.setActive();\n    TimeElements.resetDurationTimes();\n\n    /*\n      Run the song change callback.\n    */\n    Callbacks.run(\"song_change\");\n  }\n\n  /**\n   * Sets the active playlist\n   *\n   * @access public\n   * @param {string} playlist - The string of the playlist being set to active.\n   */\n  function setActivePlaylist(playlist) {\n    /*\n      If the active playlist is different than the playlist being set,\n      we run the `playlist_changed` callback.\n    */\n    if (config.active_playlist != playlist) {\n      Callbacks.run(\"playlist_changed\");\n      /*\n        Set the active playlist to the playlist parameter. Only need to\n        set if it's different.\n      */\n      config.active_playlist = playlist;\n\n      if (playlist != null) {\n        config.playlists[playlist].active_index = 0;\n      }\n    }\n  }\n\n  /*\n    Return the publically facing methods\n  */\n  return {\n    setNext: setNext,\n    setNextPlaylist: setNextPlaylist,\n    setPrevious: setPrevious,\n    setPreviousPlaylist: setPreviousPlaylist,\n    changeSong: changeSong,\n    changeSongPlaylist: changeSongPlaylist,\n    setActivePlaylist: setActivePlaylist\n  };\n})();\n\nexport default AudioNavigation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/audioNavigation.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Handles the debugging of AmplitudeJS\n * @module utilities/Debug\n */\nlet Debug = (function() {\n  /**\n   * Writes out debug message to the console if enabled.\n   *\n   * Public Accessor: Debug.writeMessage( message )\n   *\n   * @access public\n   * @param {string} message - The string that gets printed to alert the user of a debugging error.\n   */\n  function writeMessage(message) {\n    /*\n      If the user has flagged AmplitudeJS to debug, we print out a message\n      to the console.\n    */\n    if (config.debug) {\n      console.log(message);\n    }\n  }\n\n  /*\n    Returns the public facing methods\n  */\n  return {\n    writeMessage: writeMessage\n  };\n})();\n\nexport default Debug;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/debug.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS Checks Module. Checks for new songs, albums, and playlists\n *\n * @module utilities/Checks\n */\nlet Checks = (function() {\n  /**\n   * Checks to see if the new song to be played is different than the song\n   * that is currently playing. To be true, the user would have selected\n   * play on a new song with a new index. To be false, the user would have\n   * clicked play/pause on the song that was playing.\n   *\n   * Public Accessor: Checks.newSong( playlist, songIndex )\n   * @access public\n   * @param {string} playlist - The playlist we are checking the new song for. Could be null\n   * @param {number} songIndex - The index of the new song to be played.\n   * @returns {boolean} True if we are setting a new song, false if we are not setting a new song.\n   */\n  function newSong(playlist, songIndex) {\n    /*\n      If the playlists don't match, then it's definitely a new song.\n    */\n    if (config.active_playlist != playlist) {\n      return true;\n    } else {\n      /*\n        If we aren't in a playlist, we check the active index.\n      */\n      if (config.active_playlist == null && playlist == null) {\n        /*\n          If the active indexes don't match, then it's a new song.\n        */\n        if (config.active_index != songIndex) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        /*\n          If we are in a playlist, then we check to see if the\n          new song index matches the active index.\n        */\n        if (\n          config.active_playlist == playlist &&\n          config.playlists[playlist].active_index != songIndex\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks to see if there is a new album\n   *\n   * Public Accessor: Checks.newAlbum( album )\n   *\n   * @access public\n   * @param {string} album - Checks to see if the new song will have a new album.\n   * @returns {boolean} True if there is a new album, false if there is not a new ablum.\n   */\n  function newAlbum(album) {\n    if (config.active_album != album) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Checks to see if there is a new playlist\n   *\n   * Public Accessor: Checks.newPlaylist( playlist )\n   *\n   * @access public\n   * @param {string} playlist - The playlist passed in to check against the active playlist.\n   * @returns {boolean} True if there is a new playlist, false if there is not a new playlist.\n   */\n  function newPlaylist(playlist) {\n    if (config.active_playlist != playlist) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Determines if the string passed in is a URL or not\n   *\n   * Public Accessor: AmplitudeHelpers.isURL( url )\n   *\n   * @access public\n   * @param {string} url - The string we are testing to see if it's a URL.\n   * @returns {boolean} True if the string is a url, false if it is not.\n   */\n  function isURL(url) {\n    /*\n\t\t\tTest the string against the URL pattern and return if it matches\n\t\t*/\n    let pattern = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n    return pattern.test(url);\n  }\n\n  /**\n   * Determines if what is passed in is an integer or not.\n   *\n   * Public Accessor: AmplitudeHelpers.isInt( int )\n   *\n   * @access public\n   * @param {string|number} int - The variable we are testing to see is an integer or not.\n   * @returns {boolean} If the variable is an integer or not.\n   */\n  function isInt(int) {\n    return (\n      !isNaN(int) && parseInt(Number(int)) == int && !isNaN(parseInt(int, 10))\n    );\n  }\n\n  /**\n   * Returns public facing methods\n   */\n  return {\n    newSong: newSong,\n    newAlbum: newAlbum,\n    newPlaylist: newPlaylist,\n    isURL: isURL,\n    isInt: isInt\n  };\n})();\n\nexport default Checks;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/checks.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Handles the state of the config object.\n *\n * @module utilities/ConfigState\n */\nlet ConfigState = (function() {\n  /**\n   * Resets the config to the default state. This is called on initialize\n   * to ensure the user's config is what matters.\n   *\n   * Public Accessor: AmplitudeHelpers.resetConfig()\n   *\n   * @access public\n   */\n  function resetConfig() {\n    config.audio = new Audio();\n    config.active_metadata = {};\n    config.active_album = \"\";\n    config.active_index = 0;\n    config.active_playlist = null;\n    config.playback_speed = 1.0;\n    config.callbacks = {};\n    config.songs = [];\n    config.playlists = {};\n    config.start_song = \"\";\n    config.starting_playlist = \"\";\n    config.starting_playlist_song = \"\";\n    config.repeat = false;\n    config.shuffle_list = {};\n    config.shuffle_on = false;\n    config.default_album_art = \"\";\n    config.default_playlist_art = \"\";\n    config.debug = false;\n    config.volume = 0.5;\n    config.pre_mute_volume = 0.5;\n    config.volume_increment = 5;\n    config.volume_decrement = 5;\n    config.soundcloud_client = \"\";\n    config.soundcloud_use_art = false;\n    config.soundcloud_song_count = 0;\n    config.soundcloud_songs_ready = 0;\n    config.continue_next = true;\n  }\n\n  /**\n   * Sets the state of the player.\n   */\n  function setPlayerState() {\n    /*\n      If paused and the current time is 0 the player is stopped.\n    */\n    if (config.audio.paused && config.audio.currentTime == 0) {\n      config.player_state = \"stopped\";\n    }\n\n    /*\n      If paused and the current time is greater than 0 the player is\n      paused.\n    */\n    if (config.audio.paused && config.audio.currentTime > 0) {\n      config.player_state = \"paused\";\n    }\n\n    /*\n      If playing, the current state is playing.\n    */\n    if (!config.audio.paused) {\n      config.player_state = \"playing\";\n    }\n  }\n\n  /*\n\t\tReturns the public facing methods\n\t*/\n  return {\n    resetConfig: resetConfig,\n    setPlayerState: setPlayerState\n  };\n})();\n\nexport default ConfigState;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/configState.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the debug module\n * @module utilities/debug\n */\nimport Debug from \"./debug.js\";\n\n/**\n * AmplitudeJS Callback Utility\n *\n * @module utilities/callbacks\n */\nlet Callbacks = (function() {\n  /**\n   * Initializes the callbacks for the player.\n   */\n  function initialize() {\n    /*\n      Event: abort\n      https://www.w3schools.com/tags/av_event_abort.asp\n    */\n    config.audio.addEventListener(\"abort\", function() {\n      run(\"abort\");\n    });\n\n    /*\n      Event: error\n      https://www.w3schools.com/tags/av_event_error.asp\n    */\n    config.audio.addEventListener(\"error\", function() {\n      run(\"error\");\n    });\n\n    /*\n      Event: loadeddata\n      https://www.w3schools.com/tags/av_event_loadeddata.asp\n    */\n    config.audio.addEventListener(\"loadeddata\", function() {\n      run(\"loadeddata\");\n    });\n\n    /*\n      Event: loadedmetadata\n      https://www.w3schools.com/tags/av_event_loadedmetadata.asp\n    */\n    config.audio.addEventListener(\"loadedmetadata\", function() {\n      run(\"loadedmetadata\");\n    });\n\n    /*\n      Event: loadstart\n      https://www.w3schools.com/tags/av_event_loadstart.asp\n    */\n    config.audio.addEventListener(\"loadstart\", function() {\n      run(\"loadstart\");\n    });\n\n    /*\n      Event: pause\n      https://www.w3schools.com/tags/av_event_pause.asp\n    */\n    config.audio.addEventListener(\"pause\", function() {\n      run(\"pause\");\n    });\n\n    /*\n      Event: playing\n      https://www.w3schools.com/tags/av_event_playing.asp\n    */\n    config.audio.addEventListener(\"playing\", function() {\n      run(\"playing\");\n    });\n\n    /*\n      Event: play\n      https://www.w3schools.com/tags/av_event_play.asp\n    */\n    config.audio.addEventListener(\"play\", function() {\n      run(\"play\");\n    });\n\n    /*\n      Event: progress\n      https://www.w3schools.com/tags/av_event_progress.asp\n    */\n    config.audio.addEventListener(\"progress\", function() {\n      run(\"progress\");\n    });\n\n    /*\n      Event: ratechange\n      https://www.w3schools.com/tags/av_event_ratechange.asp\n    */\n    config.audio.addEventListener(\"ratechange\", function() {\n      run(\"ratechange\");\n    });\n\n    /*\n      Event: seeked\n      https://www.w3schools.com/tags/av_event_seeked.asp\n    */\n    config.audio.addEventListener(\"seeked\", function() {\n      run(\"seeked\");\n    });\n\n    /*\n      Event: seeking\n      https://www.w3schools.com/tags/av_event_seeking.asp\n    */\n    config.audio.addEventListener(\"seeking\", function() {\n      run(\"seeking\");\n    });\n\n    /*\n      Event: stalled\n      https://www.w3schools.com/tags/av_event_stalled.asp\n    */\n    config.audio.addEventListener(\"stalled\", function() {\n      run(\"stalled\");\n    });\n\n    /*\n      Event: suspend\n      https://www.w3schools.com/tags/av_event_suspend.asp\n    */\n    config.audio.addEventListener(\"suspend\", function() {\n      run(\"suspend\");\n    });\n\n    /*\n      Event: timeupdate\n      https://www.w3schools.com/tags/av_event_timeupdate.asp\n    */\n    config.audio.addEventListener(\"timeupdate\", function() {\n      run(\"timeupdate\");\n    });\n\n    /*\n      Event: volumechange\n      https://www.w3schools.com/tags/av_event_volumechange.asp\n    */\n    config.audio.addEventListener(\"volumechange\", function() {\n      run(\"volumechange\");\n    });\n\n    /*\n      Event: waiting\n      https://www.w3schools.com/tags/av_event_waiting.asp\n    */\n    config.audio.addEventListener(\"waiting\", function() {\n      run(\"waiting\");\n    });\n\n    /*\n      Event: canplay\n      https://www.w3schools.com/tags/av_event_canplay.asp\n    */\n    config.audio.addEventListener(\"canplay\", function() {\n      run(\"canplay\");\n    });\n\n    /*\n      Event: canplaythrough\n      https://www.w3schools.com/tags/av_event_canplaythrough.asp\n    */\n    config.audio.addEventListener(\"canplaythrough\", function() {\n      run(\"canplaythrough\");\n    });\n\n    /*\n      Event: durationchange\n      https://www.w3schools.com/tags/av_event_durationchange.asp\n    */\n    config.audio.addEventListener(\"durationchange\", function() {\n      run(\"durationchange\");\n    });\n\n    /*\n      Event: ended\n      https://www.w3schools.com/tags/av_event_ended.asp\n    */\n    config.audio.addEventListener(\"ended\", function() {\n      run(\"ended\");\n    });\n  }\n\n  /**\n   * Runs a user defined callback method\n   *\n   * Public Accessor: Callbacks.run( callbackName )\n   *\n   * @access public\n   * @param {string} callbackName - The name of the callback we are going to run.\n   */\n  function run(callbackName) {\n    /*\n      Checks to see if a user defined a callback method for the\n      callback we are running.\n    */\n    if (config.callbacks[callbackName]) {\n      /*\n        Build the callback function\n      */\n      let callbackFunction = config.callbacks[callbackName];\n\n      /*\n        Write a debug message stating the callback we are running\n      */\n      Debug.writeMessage(\"Running Callback: \" + callbackName);\n\n      /*\n        Run the callback function and catch any errors\n      */\n      try {\n        callbackFunction();\n      } catch (error) {\n        if (error.message == \"CANCEL EVENT\") {\n          throw error;\n        } else {\n          Debug.writeMessage(\"Callback error: \" + error.message);\n        }\n      }\n    }\n  }\n\n  return {\n    initialize: initialize,\n    run: run\n  };\n})();\n\nexport default Callbacks;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/callbacks.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * These methods help display the audio's meta data\n *\n * @module visual/MetaDataElements\n */\nlet MetaDataElements = (function() {\n  /**\n   * Displays the active song's metadata. This is called after a song has\n   * been changed. This method takes the active song and displays the\n   * metadata. So once the new active song is set, we update all of the\n   * screen elements.\n   *\n   * @access public\n   */\n  function displayMetaData() {\n    /*\n\t\t\tDefine the image meta data keys. These are managed separately\n\t\t\tsince we aren't actually changing the inner HTML of these elements.\n\t\t*/\n    let imageMetaDataKeys = [\n      \"cover_art_url\",\n      \"station_art_url\",\n      \"podcast_episode_cover_art_url\"\n    ];\n\n    /*\n\t\t\tGet all of the song info elements\n\t\t*/\n    let songInfoElements = document.querySelectorAll(\n      \"[data-amplitude-song-info]\"\n    );\n\n    /*\n\t\t\tIterate over all of the song info elements. We will either\n\t\t\tset these to the new values, or clear them if the active song\n\t\t\tdoesn't have the info set.\n\t\t*/\n    for (let i = 0; i < songInfoElements.length; i++) {\n      /*\n\t\t\t\tGet the info so we can check if the active meta data has the\n\t\t\t\tkey.\n\t\t\t*/\n      let info = songInfoElements[i].getAttribute(\"data-amplitude-song-info\");\n\n      /*\n\t\t\t\tGrab the playlist and song index.\n\t\t\t*/\n      let playlist = songInfoElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = songInfoElements[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n\t\t\t\tEnsure that we don't set any individual elements now. We set this with the\n\t\t\t\tsync meta data method. The reason we don't set them here is because\n\t\t\t\tall individual songs would get the now playing artwork. If the playlists\n\t\t\t\tmatch or the element is a main element meaning it doesn't\n\t\t\t\tbelong to a playlist or a song, then we set the song info.\n\t\t\t*/\n      if (\n        songIndex == null &&\n        (config.active_playlist == playlist ||\n          (playlist == null && songIndex == null))\n      ) {\n        /*\n\t\t\t\t\tIf the active metadata has the key, then we set it,\n\t\t\t\t\totherwise we clear it. If it's an image element then\n\t\t\t\t\twe default it to the default info if needed.\n\t\t\t\t*/\n        let val = (config.active_metadata[info] != undefined) ? config.active_metadata[info] : null;\n        if (imageMetaDataKeys.indexOf(info) >= 0) {\n          val = val || config.default_album_art\n          songInfoElements[i].setAttribute(\n            \"src\",\n            val\n          );\n        } else {\n          val = val || \"\"\n          songInfoElements[i].innerHTML = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * Displays the playlist meta data.\n   */\n  function displayPlaylistMetaData() {\n    /*\n\t\t\tDefine the image meta data keys. These are managed separately\n\t\t\tsince we aren't actually changing the inner HTML of these elements.\n\t\t*/\n    let imageMetaDataKeys = [\"image_url\"];\n\n    /*\n\t\t\tGet all of the playlist info elements\n\t\t*/\n    let playlistInfoElements = document.querySelectorAll(\n      \"[data-amplitude-playlist-info]\"\n    );\n\n    /*\n\t\t\tIterate over all of the playlist info elements. We will either\n\t\t\tset these to the new values, or clear them if the active song\n\t\t\tdoesn't have the info set.\n\t\t*/\n    for (let i = 0; i < playlistInfoElements.length; i++) {\n      /*\n\t\t\t\tGet the info so we can check if the active meta data has the\n\t\t\t\tkey.\n\t\t\t*/\n      let info = playlistInfoElements[i].getAttribute(\n        \"data-amplitude-playlist-info\"\n      );\n      let playlist = playlistInfoElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n\n      if (config.playlists[playlist][info] != undefined) {\n        if (imageMetaDataKeys.indexOf(info) >= 0) {\n          playlistInfoElements[i].setAttribute(\n            \"src\",\n            config.playlists[playlist][info]\n          );\n        } else {\n          playlistInfoElements[i].innerHTML = config.playlists[playlist][info];\n        }\n      } else {\n        /*\n\t\t\t\t\tWe look for the default album art because\n\t\t\t\t\tthe actual key didn't exist. If the default album\n\t\t\t\t\tart doesn't exist then we set the src attribute\n\t\t\t\t\tto null.\n\t\t\t\t*/\n        if (imageMetaDataKeys.indexOf(info) >= 0) {\n          if (config.default_playlist_art != \"\") {\n            playlistInfoElements[i].setAttribute(\n              \"src\",\n              config.default_playlist_art\n            );\n          } else {\n            playlistInfoElements[i].setAttribute(\"src\", \"\");\n          }\n        } else {\n          playlistInfoElements[i].innerHTML = \"\";\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the first song in the playlist. This is used to fill in the meta\n   * data in the playlist\n   *\n   * @param {object} song \t\t\t- The song we are setting to be the first song in the playlist\n   * @param {string} playlist \t- Key of the playlist we are setting the first song in\n   */\n  function setFirstSongInPlaylist(song, playlist) {\n    /*\n      Define the image meta data keys. These are managed separately\n      since we aren't actually changing the inner HTML of these elements.\n    */\n    let imageMetaDataKeys = [\n      \"cover_art_url\",\n      \"station_art_url\",\n      \"podcast_episode_cover_art_url\"\n    ];\n\n    /*\n      Get all of the song info elements\n    */\n    let songInfoElements = document.querySelectorAll(\n      '[data-amplitude-song-info][data-amplitude-playlist=\"' + playlist + '\"]'\n    );\n\n    /*\n      Iterate over all of the song info elements. We will either\n      set these to the new values, or clear them if the active song\n      doesn't have the info set.\n    */\n    for (let i = 0; i < songInfoElements.length; i++) {\n      /*\n        Get the info so we can check if the active meta data has the\n        key.\n      */\n      let info = songInfoElements[i].getAttribute(\"data-amplitude-song-info\");\n\n      /*\n        Get the song info element playlist.\n      */\n      let elementPlaylist = songInfoElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n\n      /*\n        If the playlists match or the element is a main element, then\n        we set the song info.\n      */\n      if (elementPlaylist == playlist) {\n        /*\n          If the active metadata has the key, then we set it,\n          otherwise we clear it. If it's an image element then\n          we default it to the default info if needed.\n        */\n        if (song[info] != undefined) {\n          if (imageMetaDataKeys.indexOf(info) >= 0) {\n            songInfoElements[i].setAttribute(\"src\", song[info]);\n          } else {\n            songInfoElements[i].innerHTML = song[info];\n          }\n        } else {\n          /*\n            We look for the default album art because\n            the actual key didn't exist. If the default album\n            art doesn't exist then we set the src attribute\n            to null.\n          */\n          if (imageMetaDataKeys.indexOf(info) >= 0) {\n            if (song.default_album_art != \"\") {\n              songInfoElements[i].setAttribute(\"src\", song.default_album_art);\n            } else {\n              songInfoElements[i].setAttribute(\"src\", \"\");\n            }\n          } else {\n            songInfoElements[i].innerHTML = \"\";\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the meta data for songs loaded in the songs array\n   */\n  function syncMetaData() {\n    /*\n\t\t Define the image meta data keys. These are managed separately\n\t\t since we aren't actually changing the inner HTML of these elements.\n\t */\n    let imageMetaDataKeys = [\n      \"cover_art_url\",\n      \"station_art_url\",\n      \"podcast_episode_cover_art_url\"\n    ];\n\n    /*\n\t\t Get all of the song info elements\n\t */\n    let songInfoElements = document.querySelectorAll(\n      \"[data-amplitude-song-info]\"\n    );\n\n    /*\n\t\t Iterate over all of the song info elements. We will either\n\t\t set these to the new values, or clear them if the active song\n\t\t doesn't have the info set.\n\t */\n    for (let i = 0; i < songInfoElements.length; i++) {\n      let songIndex = songInfoElements[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n      let playlist = songInfoElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n\n      if (songIndex != null && playlist == null) {\n        let info = songInfoElements[i].getAttribute(\"data-amplitude-song-info\");\n\n        /*\n         Get the song info value referenced on the element.  Depending on the type of\n         element, we may need to fallback to another value when the direct value\n         we want isn't found.\n         i.e.\n            data-amplitude-song-info=\"cover_art_url\" defaults to using the value\n            of \"default_album_art\" when \"cover_art_url\" is missing on the song.\n        */\n        let val = config.songs[songIndex][info] != undefined ? config.songs[songIndex][info] : null;\n        /*\n         If it's an image meta data key, then we set the src attribute of\n         the element. Otherwise we set the inner HTML of the element.\n        */\n        if (imageMetaDataKeys.indexOf(info) >= 0) {\n          /*\n           If this is an image meta data key and the individual song doesn't\n           have the key, use the default_album_art\n           */\n          val = val || config.default_album_art\n          songInfoElements[i].setAttribute(\n            \"src\",\n            val\n          );\n        } else {\n          songInfoElements[i].innerHTML = val;\n        }\n      }\n\n      /*\n        If the song index and playlist are not null, continue.\n      */\n      if (songIndex != null && playlist != null) {\n        /*\n          Get the info we are displaying.\n        */\n        let info = songInfoElements[i].getAttribute(\"data-amplitude-song-info\");\n\n        /*\n          Set the meta data accordingly.\n        */\n        if (config.playlists[playlist].songs[songIndex][info] != undefined) {\n          if (imageMetaDataKeys.indexOf(info) >= 0) {\n            songInfoElements[i].setAttribute(\n              \"src\",\n              config.playlists[playlist].songs[songIndex][info]\n            );\n          } else {\n            songInfoElements[i].innerHTML =\n              config.playlists[playlist].songs[songIndex][info];\n          }\n        }\n      }\n    }\n\n    /*\n      Display the playlist meta data.\n    */\n    displayPlaylistMetaData();\n  }\n\n  /**\n   * Returns publically facing methods\n   */\n  return {\n    displayMetaData: displayMetaData,\n    setFirstSongInPlaylist: setFirstSongInPlaylist,\n    syncMetaData: syncMetaData,\n    displayPlaylistMetaData: displayPlaylistMetaData\n  };\n})();\n\nexport default MetaDataElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/metaDataElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Handles all of the visual syncing to the state of the config for the repeat\n * elements.\n *\n * @module visual/RepeatElements\n */\nlet RepeatElements = (function() {\n  /**\n   * Syncs repeat for all of the repeat buttons. Users\n   * can apply styles to the 'amplitude-repeat-on' and\n   * 'amplitude-repeat-off' classes. They represent the state\n   * of the player.\n   */\n  function syncRepeat() {\n    /*\n\t\t\tGets all of the repeat classes\n\t\t*/\n    let repeatClasses = document.getElementsByClassName(\"amplitude-repeat\");\n\n    /*\n\t\t\tIterate over all of the repeat classes. If repeat is on,\n\t\t\tthen add the 'amplitude-repeat-on' class and remove the\n\t\t\t'amplitude-repeat-off' class. If it's off, then do the\n\t\t\topposite.\n\t\t*/\n    for (let i = 0; i < repeatClasses.length; i++) {\n      if (config.repeat) {\n        repeatClasses[i].classList.add(\"amplitude-repeat-on\");\n        repeatClasses[i].classList.remove(\"amplitude-repeat-off\");\n      } else {\n        repeatClasses[i].classList.remove(\"amplitude-repeat-on\");\n        repeatClasses[i].classList.add(\"amplitude-repeat-off\");\n      }\n    }\n  }\n\n  /**\n   * Syncs repeat for all of the playlist repeat buttons. Users\n   * can apply styles to the `amplitude-repeat-on` and `amplitude-repeat-off`\n   * classes. They repreent the state of the playlist in the player.\n   */\n  function syncRepeatPlaylist(playlist) {\n    /*\n\t\t\t Gets all of the repeat buttons.\n\t\t */\n    let repeatButtons = document.getElementsByClassName(\"amplitude-repeat\");\n\n    /*\n\t\t\t Iterate over all of the repeat buttons\n\t\t */\n    for (let i = 0; i < repeatButtons.length; i++) {\n      /*\n\t\t\t\t Ensure that the repeat button belongs to matches the\n\t\t\t\t playlist we are syncing the state for.\n\t\t\t */\n      if (\n        repeatButtons[i].getAttribute(\"data-amplitude-playlist\") == playlist\n      ) {\n        /*\n\t\t\t\t\t If the state of the playlist is shuffled on, true, then\n\t\t\t\t\t we add the 'amplitude-repeat-on' class and remove the\n\t\t\t\t\t 'amplitude-repeat-off' class. If the player is not shuffled\n\t\t\t\t\t then we do the opposite.\n\t\t\t\t */\n        if (config.playlists[playlist].repeat) {\n          repeatButtons[i].classList.add(\"amplitude-repeat-on\");\n          repeatButtons[i].classList.remove(\"amplitude-repeat-off\");\n        } else {\n          repeatButtons[i].classList.add(\"amplitude-repeat-off\");\n          repeatButtons[i].classList.remove(\"amplitude-repeat-on\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs repeat for all of the repeat song buttons. Users\n   * can apply styles to the 'amplitude-repeat-song-on' and\n   * 'amplitude-repeat-song-off' classes. They represent the state\n   * of the player.\n   */\n  function syncRepeatSong() {\n    /*\n\t\t\tGets all of the repeat song classes\n\t\t*/\n    let repeatSongClasses = document.getElementsByClassName(\n      \"amplitude-repeat-song\"\n    );\n\n    /*\n\t\t\tIterate over all of the repeat song classes. If repeat is on,\n\t\t\tthen add the 'amplitude-repeat-song-on' class and remove the\n\t\t\t'amplitude-repeat-song-off' class. If it's off, then do the\n\t\t\topposite.\n\t\t*/\n    for (let i = 0; i < repeatSongClasses.length; i++) {\n      if (config.repeat_song) {\n        repeatSongClasses[i].classList.add(\"amplitude-repeat-song-on\");\n        repeatSongClasses[i].classList.remove(\"amplitude-repeat-song-off\");\n      } else {\n        repeatSongClasses[i].classList.remove(\"amplitude-repeat-song-on\");\n        repeatSongClasses[i].classList.add(\"amplitude-repeat-song-off\");\n      }\n    }\n  }\n\n  /*\n    Returns the publically available methods.\n  */\n  return {\n    syncRepeat: syncRepeat,\n    syncRepeatPlaylist: syncRepeatPlaylist,\n    syncRepeatSong: syncRepeatSong\n  };\n})();\n\nexport default RepeatElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/repeatElements.js","/**\n * Handles the visual state for all of the mute elements.\n *\n * @module visual/MuteElements\n */\nlet MuteElements = (function() {\n  /**\n   * Syncs mute for all of the mute buttons. This represents the\n   * state of the player if it's muted or not.\n   *\n   * @access public\n   * @param {string} state \t- The muted state of the player.\n   */\n  function setMuted(state) {\n    /*\n\t\t\tGet all of the mute buttons.\n\t\t*/\n    let muteClasses = document.getElementsByClassName(\"amplitude-mute\");\n\n    /*\n\t\t\tIterate over all of the mute classes. If the state of the player\n\t\t\tis not-muted then we add the amplitude-not-muted classe and remove\n\t\t\tthe amplitude muted class otherwise we do the opposite.\n\t\t*/\n    for (let i = 0; i < muteClasses.length; i++) {\n      if (!state) {\n        muteClasses[i].classList.add(\"amplitude-not-muted\");\n        muteClasses[i].classList.remove(\"amplitude-muted\");\n      } else {\n        muteClasses[i].classList.remove(\"amplitude-not-muted\");\n        muteClasses[i].classList.add(\"amplitude-muted\");\n      }\n    }\n  }\n\n  return {\n    setMuted: setMuted\n  };\n})();\n\nexport default MuteElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/muteElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Keeps the volume slider elements in sync.\n * @module visual/VolumeSliderElements\n */\nlet VolumeSliderElements = (function() {\n  /**\n   * Visually syncs the volume sliders so they are all the same if there\n   * are more than one.\n   *\n   * @access public\n   */\n  function sync() {\n    let volumeSliders = document.getElementsByClassName(\n      \"amplitude-volume-slider\"\n    );\n\n    /*\n\t\t\tIterates over all of the volume sliders for the song, setting the value\n\t\t\tto the config value.\n\t\t*/\n    for (let i = 0; i < volumeSliders.length; i++) {\n      volumeSliders[i].value = config.audio.volume * 100;\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    sync: sync\n  };\n})();\n\nexport default VolumeSliderElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/volumeSliderElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS Repeater utility. Handles setting the repeat for all scenarios.\n *\n * @module utilities/Repeater\n */\nlet Repeater = (function() {\n  /**\n   * Sets the state of the repeat for a song.\n   *\n   * @access public\n   * @param {boolean} repeat - A boolean representing whether the repeat should be on or off\n   */\n  function setRepeat(repeat) {\n    /*\n      Set the global repeat to be toggled\n    */\n    config.repeat = repeat;\n  }\n\n  /**\n   * Sets the state of the repeat for a playlist.\n   *\n   * @access public\n   * @param {boolean} repeat - A boolean representing whether the repeat should be on or off\n   * @param {string} playlist - The key of the playlist for repeating\n   */\n  function setRepeatPlaylist(repeat, playlist) {\n    /*\n      Set the playlist repeat to be toggled.\n    */\n    config.playlists[playlist].repeat = repeat;\n  }\n\n  /**\n   * Sets the state of the repeat song\n   *\n   * @access public\n   * @param {boolean} repeat - A boolean representing whether the repeat shoudl be on or off for the song.\n   */\n  function setRepeatSong(repeat) {\n    config.repeat_song = repeat;\n  }\n\n  /*\n    Returns the public facing methods\n  */\n  return {\n    setRepeat: setRepeat,\n    setRepeatPlaylist: setRepeatPlaylist,\n    setRepeatSong: setRepeatSong\n  };\n})();\n\nexport default Repeater;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/repeater.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS Shuffle Module. Handles all of the shuffling functionality for\n * AmplitudeJS\n *\n * @module utilities/Shuffler\n */\nlet Shuffler = (function() {\n  /**\n   * Sets the shuffle state globally\n   *\n   * @access public\n   * @param {boolean} shuffle   - True when we are shuffling, false when we turn it off.\n   */\n  function setShuffle(shuffle) {\n    config.shuffle_on = shuffle;\n\n    if (shuffle) {\n      shuffleSongs();\n    } else {\n      config.shuffle_list = [];\n    }\n  }\n\n  /**\n   * Toggles the shuffle status globally.\n   *\n   * @access public\n   */\n  function toggleShuffle() {\n    /*\n      If shuffle is on, we toggle it off. If shuffle is off, we\n      toggle on.\n    */\n    if (config.shuffle_on) {\n      config.shuffle_on = false;\n      config.shuffle_list = [];\n    } else {\n      config.shuffle_on = true;\n      shuffleSongs();\n    }\n  }\n\n  /**\n   * Sets the shuffle state for a playlist\n   *\n   * @access public\n   * @param {string} playlist   The key of the playlist we are shuffling.\n   * @param {boolean} shuffle   True when we are shuffling the playlist, false when we turn off shuffle.\n   */\n  function setShufflePlaylist(playlist, shuffle) {\n    config.playlists[playlist].shuffle = shuffle;\n\n    if (config.playlists[playlist].shuffle) {\n      shufflePlaylistSongs(playlist);\n    } else {\n      config.playlists[playlist].shuffle_list = [];\n    }\n  }\n\n  /**\n   * Sets the shuffle state for a playlist\n   *\n   * @access public\n   * @param {string} playlist   The key of the playlist we are shuffling.\n   */\n  function toggleShufflePlaylist(playlist) {\n    /*\n      If the playlist shuffled is on, we toggle it off. If the\n      playlist shuffled is off, we toggle it on.\n    */\n    if (config.playlists[playlist].shuffle) {\n      config.playlists[playlist].shuffle = false;\n      config.playlists[playlist].shuffle_list = [];\n    } else {\n      config.playlists[playlist].shuffle = true;\n      shufflePlaylistSongs(playlist);\n    }\n  }\n\n  /**\n   * Shuffles individual songs in the config\n   * Based off of: http://www.codinghorror.com/blog/2007/12/the-danger-of-naivete.html\n   *\n   * Public Accessor: Shuffle.shuffleSongs()\n   *\n   * @access public\n   */\n  function shuffleSongs() {\n    /*\n\t\t\tBuilds a temporary array with the length of the config.\n\t\t*/\n    let shuffleTemp = new Array(config.songs.length);\n\n    /*\n\t\t\tSet the temporary array equal to the songs array.\n\t\t*/\n    for (let i = 0; i < config.songs.length; i++) {\n      shuffleTemp[i] = config.songs[i];\n    }\n\n    /*\n\t\t\tIterate ove rthe songs and generate random numbers to\n\t\t\tswap the indexes of the shuffle array.\n\t\t*/\n    for (let i = config.songs.length - 1; i > 0; i--) {\n      let randNum = Math.floor(Math.random() * config.songs.length + 1);\n      shuffleSwap(shuffleTemp, i, randNum - 1);\n    }\n\n    /*\n\t\t\tSet the shuffle list to the shuffle temp.\n\t\t*/\n    config.shuffle_list = shuffleTemp;\n  }\n\n  /**\n   * Shuffle songs in a playlist\n   *\n   * Public Accessor: Shuffle.shufflePlaylistSongs( playlist )\n   *\n   * @access public\n   * @param {string} playlist - The playlist we are shuffling.\n   */\n  function shufflePlaylistSongs(playlist) {\n    /*\n      Builds a temporary array with the length of the playlist songs.\n    */\n    let shuffleTemp = new Array(config.playlists[playlist].songs.length);\n\n    /*\n      Set the temporary array equal to the playlist array.\n    */\n    for (let i = 0; i < config.playlists[playlist].songs.length; i++) {\n      shuffleTemp[i] = config.playlists[playlist].songs[i];\n    }\n\n    /*\n      Iterate ove rthe songs and generate random numbers to\n      swap the indexes of the shuffle array.\n    */\n    for (let i = config.playlists[playlist].songs.length - 1; i > 0; i--) {\n      let randNum = Math.floor(\n        Math.random() * config.playlists[playlist].songs.length + 1\n      );\n      shuffleSwap(shuffleTemp, i, randNum - 1);\n    }\n\n    /*\n      Set the shuffle list to the shuffle temp.\n    */\n    config.playlists[playlist].shuffle_list = shuffleTemp;\n  }\n\n  /**\n   * Swaps and randomizes the song shuffle.\n   *\n   * @access private\n   * @param {object} shuffleList \t- The list of songs that is going to be shuffled\n   * @param {number} original \t\t- The original index of he song in the songs array\n   * @param {number} random \t\t\t- The randomized index that will be the new index of the song in the shuffle array.\n   */\n  function shuffleSwap(shuffleList, original, random) {\n    let temp = shuffleList[original];\n    shuffleList[original] = shuffleList[random];\n    shuffleList[random] = temp;\n  }\n\n  /**\n   * Returns public facing methods\n   */\n  return {\n    setShuffle: setShuffle,\n    toggleShuffle: toggleShuffle,\n    setShufflePlaylist: setShufflePlaylist,\n    toggleShufflePlaylist: toggleShufflePlaylist,\n    shuffleSongs: shuffleSongs,\n    shufflePlaylistSongs: shufflePlaylistSongs\n  };\n})();\n\nexport default Shuffler;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/shuffler.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Defines the visual representation of AmplitudeJS song slider elements.\n * @module visual/SongSliderElements\n */\nlet SongSliderElements = (function() {\n  /**\n   * Syncs all of the song slider elements.\n   *\n   * @access public\n   * @param {number} location \t- The location of the song as a percentage.\n   * @param {string} playlist \t- The playlist we are setting the song slider for.\n   * @param {number} songIndex \t- The index of the song we are adjusting the song slider for.\n   */\n  function sync(location, playlist, songIndex) {\n    syncMain(location);\n    syncPlaylist(location, playlist);\n    syncSong(location, songIndex);\n    syncSongInPlaylist(location, playlist);\n  }\n\n  /**\n   * Syncs the main slider location\n   *\n   * @access public\n   * @param {number} location \t- The location of the song as a percentage.\n   */\n  function syncMain(location) {\n    /*\n\t\t\tEnsure we have a location that's a number\n\t\t*/\n    location = !isNaN(location) ? location : 0;\n\n    /*\n\t\t\tGets the main song sliders\n\t\t*/\n    const mainSongSliders = document.querySelectorAll(\".amplitude-song-slider\");\n\n    /*\n\t\t\tIterates over all of the main sliders and sets the value to the\n\t\t\tpercentage of the song played.\n\t\t*/\n    for (let i = 0; i < mainSongSliders.length; i++) {\n      /*\n        Grab the playlist and song attributes from the element.\n      */\n      let playlist = mainSongSliders[i].getAttribute(\"data-amplitude-playlist\");\n      let song = mainSongSliders[i].getAttribute(\"data-amplitude-song-index\");\n\n      /*\n        This method is responsible for only the global elements,\n        so we make sure there are no playlist or songs defined on\n        the element.\n      */\n      if (playlist == null && song == null) {\n        mainSongSliders[i].value = location;\n      }\n    }\n  }\n\n  /**\n   * Syncs playlist song slider locations\n   *\n   * @access public\n   * @param {number} location \t- The location of the song as a percentage.\n   * @param {string} playlist \t- The playlist we are setting the song slider for.\n   */\n  function syncPlaylist(location, playlist) {\n    /*\n\t\t\tEnsure we have a location that's a number\n\t\t*/\n    location = !isNaN(location) ? location : 0;\n\n    /*\n\t\t\tGets the playlist song sliders\n\t\t*/\n    const playlistSongSliders = document.querySelectorAll(\n      '.amplitude-song-slider[data-amplitude-playlist=\"' + playlist + '\"]'\n    );\n\n    /*\n\t\t\tIterates over all of the playlist sliders and sets the value to the\n\t\t\tpercentage of the song played.\n\t\t*/\n    for (let i = 0; i < playlistSongSliders.length; i++) {\n      /*\n        Grab the playlist and song attributes from the element.\n      */\n      let playlistAttribute = playlistSongSliders[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songAttribute = playlistSongSliders[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n\t\t\t\tThis method is responsible for only the playlist elements,\n\t\t\t\tso we make sure the playlist attribute matches what is passed\n\t\t\t\tin.\n\t\t\t*/\n      if (playlistAttribute == playlist && songAttribute == null) {\n        playlistSongSliders[i].value = location;\n      }\n    }\n  }\n\n  /**\n   * Syncs individual song slider locations\n   *\n   * @access public\n   * @param {number} location \t- The location of the song as a percentage.\n   * @param {number} songIndex \t- The index of the song we are adjusting the song slider for.\n   */\n  function syncSong(location, songIndex) {\n    /*\n\t\t\tWe only want to sync song sliders if the playlist is null.\n\t\t*/\n    if (config.active_playlist == null) {\n      /*\n\t\t\t\tEnsure we have a location that's a number\n\t\t\t*/\n      location = !isNaN(location) ? location : 0;\n\n      /*\n\t\t\t\tGets the individual song sliders\n\t\t\t*/\n      const songSliders = document.querySelectorAll(\n        '.amplitude-song-slider[data-amplitude-song-index=\"' + songIndex + '\"]'\n      );\n\n      /*\n\t\t\t\tIterates over all of the individual song sliders and sets the value\n\t\t\t\tto the percentage of the song played.\n\t\t\t*/\n      for (let i = 0; i < songSliders.length; i++) {\n        /*\n\t        Grab the playlist and song attributes from the element.\n\t      */\n        let playlistAttribute = songSliders[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n        let songAttribute = songSliders[i].getAttribute(\n          \"data-amplitude-song-index\"\n        );\n\n        /*\n\t\t\t\t\tThis method is responsible for only the playlist elements,\n\t\t\t\t\tso we make sure the playlist attribute matches what is passed\n\t\t\t\t\tin.\n\t\t\t\t*/\n        if (playlistAttribute == null && songAttribute == songIndex) {\n          songSliders[i].value = location;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs individual song slider locations\n   *\n   * @access public\n   * @param {number} location \t- The location of the song as a percentage.\n   * @param {string} playlist \t- The playlist we are setting the song slider for.\n   */\n  function syncSongInPlaylist(location, playlist) {\n    /*\n\t\t\tEnsure we have a location that's a number\n\t\t*/\n    location = !isNaN(location) ? location : 0;\n\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    /*\n\t\t\tGets the song in playlist sliders\n\t\t*/\n    const songInPlaylistSliders = document.querySelectorAll(\n      '.amplitude-song-slider[data-amplitude-playlist=\"' +\n        playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    /*\n\t\t\tIterates over all of the song in playlist sliders and sets the value\n\t\t\tto the percentage of the song played.\n\t\t*/\n    for (let i = 0; i < songInPlaylistSliders.length; i++) {\n      songInPlaylistSliders[i].value = location;\n    }\n  }\n\n  /**\n   * Visually syncs the song sliders back to 0. This usually happens when\n   * a song has changed, we ensure that all song sliders get reset.\n   *\n   * @access public\n   */\n  function resetElements() {\n    let songSliders = document.getElementsByClassName(\"amplitude-song-slider\");\n\n    /*\n\t\t\tIterate over all of the song sliders and set them to\n\t\t\t0 essentially resetting them.\n\t\t*/\n    for (let i = 0; i < songSliders.length; i++) {\n      songSliders[i].value = 0;\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    sync: sync,\n    syncMain: syncMain,\n    syncPlaylist: syncPlaylist,\n    syncSong: syncSong,\n    syncSongInPlaylist: syncSongInPlaylist,\n    resetElements: resetElements\n  };\n})();\n\nexport default SongSliderElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/songSliderElements.js","/**\n * Imports the AmplitudeJS Current Time\n * @module visual/time/CurrentTimeElements\n */\nimport CurrentTimeElements from \"./time/currentTimeElements.js\";\n\n/**\n * Imports the AmplitudeJS Current Hour Elements\n * @module visual/time/CurrentHourElements\n */\nimport CurrentHourElements from \"./time/currentHourElements.js\";\n\n/**\n * Imports the AmplitudeJS Current Minute Elements\n * @module visual/time/CurrentMinuteElements\n */\nimport CurrentMinuteElements from \"./time/currentMinuteElements.js\";\n\n/**\n * Imports the AmplitudeJS Current Second Elements\n * @module visual/time/CurrentTimeElements\n */\nimport CurrentSecondElements from \"./time/currentSecondElements.js\";\n\n/**\n * Imports the AmplitudeJS Duration Count Down Time Elements\n * @module visual/time/DurationCountDownTimeElements\n */\nimport DurationCountDownTimeElements from \"./time/durationCountDownTimeElements.js\";\n\n/**\n * Imports the AmplitudeJS Duration Hour Elements\n * @module visual/time/DurationHourElements\n */\nimport DurationHourElements from \"./time/durationHourElements.js\";\n\n/**\n * Imports the AmplitudeJS Duration Minute Elements\n * @module visual/time/DurationMinuteElements\n */\nimport DurationMinuteElements from \"./time/durationMinuteElements.js\";\n\n/**\n * Imports the AmplitudeJS Duration Second Elements\n * @module visual/time/DurationSecondElements\n */\nimport DurationSecondElements from \"./time/durationSecondElements.js\";\n\n/**\n * Imports the AmplitudeJS Duration Time Elements\n * @module visual/time/DurationTimeElements\n */\nimport DurationTimeElements from \"./time/durationTimeElements.js\";\n\n/**\n * Time Elements Interface. This allows us to update all of the sub time elements\n * through one central point.\n * @module visual/TimeElements\n */\nlet TimeElements = (function() {\n  /**\n   * Resets the current times.\n   */\n  function resetCurrentTimes() {\n    CurrentTimeElements.resetTimes();\n    CurrentHourElements.resetTimes();\n    CurrentMinuteElements.resetTimes();\n    CurrentSecondElements.resetTimes();\n  }\n\n  /**\n   * Syncs the current time elements to the time provided.\n   *\n   * @param {Object} currentTime - An object representing the current time of the audio.\n   */\n  function syncCurrentTimes(currentTime) {\n    CurrentTimeElements.sync(currentTime);\n    CurrentHourElements.sync(currentTime.hours);\n    CurrentMinuteElements.sync(currentTime.minutes);\n    CurrentSecondElements.sync(currentTime.seconds);\n  }\n\n  /**\n   * Resets the duration times.\n   */\n  function resetDurationTimes() {\n    DurationCountDownTimeElements.resetTimes();\n    DurationHourElements.resetTimes();\n    DurationMinuteElements.resetTimes();\n    DurationSecondElements.resetTimes();\n    DurationTimeElements.resetTimes();\n  }\n\n  /**\n   * Syncs the duration times to the times provided.\n   *\n   * @param {Object} currentTime - An object representing the current time of the audio.\n   * @param {Object} songDuration - An object representing the duration of the audio\n   */\n  function syncDurationTimes(currentTime, songDuration) {\n    DurationCountDownTimeElements.sync(currentTime, songDuration);\n    DurationTimeElements.sync(songDuration);\n    DurationHourElements.sync(songDuration.hours);\n    DurationMinuteElements.sync(songDuration.minutes);\n    DurationSecondElements.sync(songDuration.seconds);\n  }\n\n  /**\n   * Returns the publically accessible methods.\n   */\n  return {\n    resetCurrentTimes: resetCurrentTimes,\n    syncCurrentTimes: syncCurrentTimes,\n    resetDurationTimes: resetDurationTimes,\n    syncDurationTimes: syncDurationTimes\n  };\n})();\n\nexport default TimeElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/timeElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the debug module\n * @module utilities/Debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * Handles the visualizations elements.\n *\n * @module Visualizations\n */\nlet Visualizations = (function() {\n  /**\n   * Runs all of the visualizations on the screen.\n   */\n  function run() {\n    /*\n      Get all of the visualization elements on the page\n    */\n    let visualizationElements = document.querySelectorAll(\n      \".amplitude-visualization\"\n    );\n\n    /*\n      If the web audio API is available, we display the visualizations.\n    */\n    if (config.web_audio_api_available) {\n      /*\n        If the visualization has not started, there are visualizations available,\n        and we have at least one visualization element, then we continue.\n      */\n      if (\n        Object.keys(config.visualizations.available).length > 0 &&\n        visualizationElements.length > 0\n      ) {\n        /*\n            Iterate over all of the visualizations on the page and activate the\n            ones we need.\n          */\n        for (let i = 0; i < visualizationElements.length; i++) {\n          /*\n              Grab the playlist and song attributes from the visualization to\n              determine which one we run.\n            */\n          let playlist = visualizationElements[i].getAttribute(\n            \"data-amplitude-playlist\"\n          );\n          let song = visualizationElements[i].getAttribute(\n            \"data-amplitude-song-index\"\n          );\n\n          /*\n              If the playlist and song are null, it's a global visualization element.\n            */\n          if (playlist == null && song == null) {\n            runGlobalVisualization(visualizationElements[i]);\n          }\n\n          /*\n              if the playlist is not null and the song is null it's a playlist visualization\n              element.\n            */\n          if (playlist != null && song == null) {\n            runPlaylistVisualization(visualizationElements[i], playlist);\n          }\n\n          /*\n              If the playlist is null and the song is not null it's a song visualization element.\n            */\n          if (playlist == null && song != null) {\n            runSongVisualization(visualizationElements[i], song);\n          }\n\n          /*\n              If the playlist and song are not null then it's a song in playlist visualization\n              element.\n            */\n          if (playlist != null && song != null) {\n            runSongInPlaylistVisualization(\n              visualizationElements[i],\n              playlist,\n              song\n            );\n          }\n        }\n      }\n    } else {\n      displayBackups();\n    }\n  }\n\n  /**\n   * Runs a global visualization\n   *\n   * @param {Node} element  The container element that handles the visualization.\n   */\n  function runGlobalVisualization(element) {\n    /*\n      Gets the global visualization index and the active song visualization indexes\n      so we know which visualization to use. The song will override the global\n    */\n    let globalVisualizationIndex = config.visualization;\n    let activeSongVisualizationIndex =\n      config.active_index != null\n        ? config.songs[config.active_index].visualization\n        : config.playlists[config.active_playlist].songs[\n            config.playlists[config.active_playlist].active_index\n          ].visualization;\n\n    /*\n      If the active song visualization is defined and the visualization exists,\n      use that visualization.\n    */\n    if (\n      activeSongVisualizationIndex != undefined &&\n      config.visualizations.available[activeSongVisualizationIndex] != undefined\n    ) {\n      addToActiveVisualizations(activeSongVisualizationIndex, element);\n\n      /*\n      If the user defined a global visualization, use that one.\n    */\n    } else if (\n      globalVisualizationIndex != undefined &&\n      config.visualizations.available[globalVisualizationIndex] != undefined\n    ) {\n      addToActiveVisualizations(globalVisualizationIndex, element);\n\n      /*\n      If the user didn't define a global visualization, use the first visualization\n      registered if there is one.\n    */\n    } else {\n      /*\n        Grab the first registered visualization. If it exists, use that one.\n      */\n      let firstVisualization =\n        Object.keys(config.visualizations.available).length > 0\n          ? Object.keys(config.visualizations.available)[0]\n          : null;\n\n      if (firstVisualization != null) {\n        addToActiveVisualizations(firstVisualization, element);\n      }\n    }\n  }\n\n  /**\n   * Run a specific playlist visualization.\n   *\n   * @param {Node} element  The container element that handles the visualization.\n   * @param {string} playlist The key of the playlist we are running the visualization for.\n   */\n  function runPlaylistVisualization(element, playlist) {\n    /*\n      If the playlist is equal to the active playlist, then we continue.\n    */\n    if (playlist == config.active_playlist) {\n      /*\n        Checks if the song has a visualization and that visualization exists,\n        run that visualization.\n      */\n      let activeSongVisualizationIndex =\n        config.playlists[config.active_playlist].songs[\n          config.playlists[config.active_playlist].active_index\n        ].visualization;\n      let activePlaylistVisualizationIndex =\n        config.playlists[config.active_playlist].visualization;\n      let globalVisualizationIndex = config.visualization;\n\n      /*\n        If the actual song has a visualization, we run that.\n      */\n      if (\n        activeSongVisualizationIndex != undefined &&\n        config.visualizations.available[activeSongVisualizationIndex] !=\n          undefined\n      ) {\n        addToActiveVisualizations(activeSongVisualizationIndex, element);\n\n        /*\n        If the actual playlist has a visualization, run that.\n      */\n      } else if (\n        activePlaylistVisualizationIndex != undefined &&\n        config.visualizations.available[activePlaylistVisualizationIndex] !=\n          undefined\n      ) {\n        addToActiveVisualizations(activePlaylistVisualizationIndex, element);\n\n        /*\n        If a global visualization is defined, run that.\n      */\n      } else if (\n        globalVisualizationIndex != undefined &&\n        config.visualizations.available[globalVisualizationIndex] != undefined\n      ) {\n        addToActiveVisualizations(globalVisualizationIndex, element);\n      } else {\n        /*\n          Grab the first registered visualization. If it exists, use that one.\n        */\n        let firstVisualization =\n          Object.keys(config.visualizations.available).length > 0\n            ? Object.keys(config.visualizations.available)[0]\n            : null;\n\n        if (firstVisualization != null) {\n          addToActiveVisualizations(firstVisualization, element);\n        }\n      }\n    }\n  }\n\n  /**\n   * Run a song specific visualization.\n   *\n   * @param {Node} element The container element that handles the visualization.\n   * @param {string} song The song index that we are running the visualization for.\n   */\n  function runSongVisualization(element, song) {\n    /*\n      If the song is equal to the active song, then we continue.\n    */\n    if (song == config.active_index) {\n      /*\n        Get the indexes of the song\n      */\n      let activeSongVisualizationIndex =\n        config.songs[config.active_index].visualization;\n      let globalVisualizationIndex = config.visualization;\n\n      /*\n        If the song has a visualization, run that.\n      */\n      if (\n        activeSongVisualizationIndex != undefined &&\n        config.visualizations.available[activeSongVisualizationIndex] !=\n          undefined\n      ) {\n        addToActiveVisualizations(activeSongVisualizationIndex, element);\n\n        /*\n        If the global visualization is set, use that.\n      */\n      } else if (\n        globalVisualizationIndex != undefined &&\n        config.visualizations.available[globalVisualizationIndex] != undefined\n      ) {\n        addToActiveVisualizations(globalVisualizationIndex, element);\n      } else {\n        /*\n          Grab the first registered visualization. If it exists, use that one.\n        */\n        let firstVisualization =\n          Object.keys(config.visualizations.available).length > 0\n            ? Object.keys(config.visualizations.available)[0]\n            : null;\n\n        if (firstVisualization != null) {\n          addToActiveVisualizations(firstVisualization, element);\n        }\n      }\n    }\n  }\n\n  /**\n   * Run a song in playlist visualization.\n   *\n   * @param {Node} element - The element containing the visualization.\n   * @param {string} playlist - The string of the playlist key.\n   * @param {index} song - The index of the song in the playlist.\n   */\n  function runSongInPlaylistVisualization(element, playlist, song) {\n    /*\n      If the playlist is the same as the active playlist and the active\n      index of the song is the same as the song, then we continue.\n    */\n    if (\n      playlist == config.active_playlist &&\n      config.playlists[playlist].active_index == song\n    ) {\n      /*\n        Checks if the song has a visualization and that visualization exists,\n        run that visualization.\n      */\n      let activeSongVisualizationIndex =\n        config.playlists[config.active_playlist].songs[\n          config.playlists[config.active_playlist].active_index\n        ].visualization;\n      let activePlaylistVisualizationIndex =\n        config.playlists[config.active_playlist].visualization;\n      let globalVisualizationIndex = config.visualization;\n\n      /*\n        If the active song has a visualization, we use that.\n      */\n      if (\n        activeSongVisualizationIndex != undefined &&\n        config.visualizations.available[activeSongVisualizationIndex] !=\n          undefined\n      ) {\n        addToActiveVisualizations(activeSongVisualizationIndex, element);\n\n        /*\n        If the active playlist has a visualization, we use that.\n      */\n      } else if (\n        activePlaylistVisualizationIndex != undefined &&\n        config.visualizations.available[activePlaylistVisualizationIndex] !=\n          undefined\n      ) {\n        addToActiveVisualizations(activePlaylistVisualizationIndex, element);\n\n        /*\n        If the global visualization has been set, we use that.\n      */\n      } else if (\n        globalVisualizationIndex != undefined &&\n        config.visualizations.available[globalVisualizationIndex] != undefined\n      ) {\n        addToActiveVisualizations(globalVisualizationIndex, element);\n      } else {\n        /*\n          Grab the first registered visualization. If it exists, use that one.\n        */\n        let firstVisualization =\n          Object.keys(config.visualizations.available).length > 0\n            ? Object.keys(config.visualizations.available)[0]\n            : null;\n\n        if (firstVisualization != null) {\n          addToActiveVisualizations(firstVisualization, element);\n        }\n      }\n    }\n  }\n\n  /**\n   * Add a visualization to the array of active visualizations.\n   *\n   * @param {string} key - The key of the active visualization.\n   * @param {Node} element - The element that the visualization will be applied to.\n   */\n  function addToActiveVisualizations(key, element) {\n    let visualization = new config.visualizations.available[key][\"object\"]();\n    visualization.setPreferences(\n      config.visualizations.available[key][\"preferences\"]\n    );\n    visualization.startVisualization(element);\n    config.visualizations.active.push(visualization);\n  }\n\n  /**\n   * Stops all active visualizations.\n   */\n  function stop() {\n    /*\n      Iterates over all of the visualizations and stop the visualization.\n    */\n    for (let i = 0; i < config.visualizations.active.length; i++) {\n      config.visualizations.active[i].stopVisualization();\n    }\n\n    /*\n      Clear the active visualizations.\n    */\n    config.visualizations.active = [];\n  }\n\n  /**\n   * Registers any visualization we can use.\n   *\n   * @param {object} visualization The visualization object itself\n   * @param {object} preferences User preferences overrides.\n   */\n  function register(visualization, preferences) {\n    /*\n      Initialize the new visualization.\n    */\n    let newVisualization = new visualization();\n\n    /*\n\t    Adds the visualization to the global config so it knows\n\t    it can be used when playing songs.\n\n\t    getID is a public function for getting a visualization's id.\n\t    It becomes the key to access the visualization.\n\t  */\n    config.visualizations.available[newVisualization.getID()] = new Array();\n    config.visualizations.available[newVisualization.getID()][\n      \"object\"\n    ] = visualization;\n    config.visualizations.available[newVisualization.getID()][\n      \"preferences\"\n    ] = preferences;\n  }\n\n  /**\n   * Displays the backups for the visualizations.\n   */\n  function displayBackups() {\n    /*\n      Get all of the visualization elements on the page\n    */\n    let visualizationElements = document.querySelectorAll(\n      \".amplitude-visualization\"\n    );\n\n    if (visualizationElements.length > 0) {\n      for (let x = 0; x < visualizationElements.length; x++) {\n        /*\n          Grab the playlist and song attributes from the visualization to\n          determine which one we run.\n        */\n        let playlist = visualizationElements[x].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n        let song = visualizationElements[x].getAttribute(\n          \"data-amplitude-song-index\"\n        );\n\n        /*\n          If the playlist and song are null, it's a global visualization element.\n        */\n        if (playlist == null && song == null) {\n          displayGlobalBackup(visualizationElements[x]);\n        }\n\n        /*\n          if the playlist is not null and the song is null it's a playlist visualization\n          element.\n        */\n        if (playlist != null && song == null) {\n          displayPlaylistBackup(visualizationElements[x], playlist);\n        }\n\n        /*\n          If the playlist is null and the song is not null it's a song visualization element.\n        */\n        if (playlist == null && song != null) {\n          displaySongBackup(visualizationElements[x], song);\n        }\n\n        /*\n          If the playlist and song are not null then it's a song in playlist visualization\n          element.\n        */\n        if (playlist != null && song != null) {\n          displaySongInPlaylistBackup(visualizationElements[x], playlist, song);\n        }\n      }\n    }\n  }\n\n  /**\n   * Displays the global backup which is the cover art of the image in the\n   * visualization container.\n   *\n   * @param {node} element  - The element we are adding the background image to.\n   */\n  function displayGlobalBackup(element) {\n    element.style.backgroundImage =\n      \"url(\" + config.active_metadata.cover_art_url + \")\";\n  }\n\n  /**\n   * Displays the playlist backup which is the cover art of the image in the\n   * visualization container.\n   *\n   * @param {node} element  - The element we are adding the background image to.\n   */\n  function displayPlaylistBackup(element, playlist) {\n    if (config.active_playlist == playlist) {\n      element.style.backgroundImage =\n        \"url(\" + config.active_metadata.cover_art_url + \")\";\n    }\n  }\n\n  /**\n   * Displays the song backup which is the cover art of the image in the\n   * visualization container.\n   *\n   * @param {node} element  - The element we are adding the background image to.\n   */\n  function displaySongBackup(element, song) {\n    if (config.active_index == song) {\n      element.style.backgroundImage =\n        \"url(\" + config.active_metadata.cover_art_url + \")\";\n    }\n  }\n\n  /**\n   * Displays the song in playlist backup which is the cover art of the image in the\n   * visualization container.\n   *\n   * @param {node} element  - The element we are adding the background image to.\n   */\n  function displaySongInPlaylistBackup(element, playlist, song) {\n    if (\n      config.active_playlist == playlist &&\n      config.playlists[active_playlist].active_index == song\n    ) {\n      element.style.backgroundImage =\n        \"url(\" + config.active_metadata.cover_art_url + \")\";\n    }\n  }\n\n  /*\n    Returns the public facing methods\n  */\n  return {\n    run: run,\n    stop: stop,\n    register: register\n  };\n})();\n\nexport default Visualizations;\n\n\n\n// WEBPACK FOOTER //\n// ./src/fx/visualizations.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the initializer\n * @module init/AmplitudeInitializer\n */\nimport AmplitudeInitializer from \"../init/init.js\";\n\n/**\n * These helpers wrap around the basic methods of the Soundcloud API\n * and get the information we need from SoundCloud to make the songs\n * streamable through Amplitude\n *\n * @module soundcloud/SoundCloud\n */\nlet SoundCloud = (function() {\n  /**\n   * Defines the temporary user config used while we configure soundcloud\n   * @type {object}\n   */\n  let tempUserConfig = {};\n\n  /**\n   * Loads the soundcloud SDK for use with Amplitude so the user doesn't have\n   * to load it themselves.\n   * With help from: http://stackoverflow.com/questions/950087/include-a-javascript-file-in-another-javascript-file\n   *\n   * @access public\n   * @param {object} userConfig \t- The config defined by the user for AmplitudeJS\n   */\n  function loadSoundCloud(userConfig) {\n    /*\n\t\t\tSets the temporary config to the config passed by the user so we can make changes\n\t\t\tand not break the actual config.\n\t\t*/\n    tempUserConfig = userConfig;\n\n    /*\n\t\t\tGets the head tag for the document and create a script element.\n\t\t*/\n    let head = document.getElementsByTagName(\"head\")[0];\n    let script = document.createElement(\"script\");\n\n    script.type = \"text/javascript\";\n\n    /*\n\t\t\tURL to the remote soundcloud SDK\n\t\t*/\n    script.src = \"https://connect.soundcloud.com/sdk.js\";\n    script.onreadystatechange = initSoundcloud;\n    script.onload = initSoundcloud;\n\n    /*\n\t\t\tAdd the script to the head of the document.\n\t\t*/\n    head.appendChild(script);\n  }\n\n  /**\n   * Initializes soundcloud with the key provided.\n   *\n   * @access private\n   */\n  function initSoundcloud() {\n    /*\n\t\t\tCalls the SoundCloud initialize function\n\t\t\tfrom their API and sends it the client_id\n\t\t\tthat the user passed in.\n\t\t*/\n    SC.initialize({\n      client_id: config.soundcloud_client\n    });\n\n    /*\n\t\t\tGets the streamable URLs to run through Amplitue. This is\n\t\t\tVERY important since Amplitude can't stream the copy and pasted\n\t\t\tlink from the SoundCloud page, but can resolve the streaming\n\t\t\tURLs from the link.\n\t\t*/\n    getStreamableURLs();\n  }\n\n  /**\n   * Gets the streamable URL from the URL provided for\n   * all of the soundcloud links.  This will loop through\n   * and set all of the information for the soundcloud\n   * urls.\n   *\n   * @access private\n   */\n  function getStreamableURLs() {\n    /*\n\t\t\tDefine the regex to find the soundcloud URLs\n\t\t*/\n    let soundcloud_regex = /^https?:\\/\\/(soundcloud.com|snd.sc)\\/(.*)$/;\n\n    for (let i = 0; i < config.songs.length; i++) {\n      /*\n\t\t\t\tIf the URL matches soundcloud, we grab\n\t\t\t\tthat url and get the streamable link\n\t\t\t\tif there is one.\n\t\t\t*/\n      if (config.songs[i].url.match(soundcloud_regex)) {\n        config.soundcloud_song_count++;\n        resolveStreamable(config.songs[i].url, i);\n      }\n    }\n  }\n\n  /**\n   * Resolves an individual streamable URL.\n   *\n   * @param {string} url - The URL of the SoundCloud song to get the streamable URL from.\n   * @param {string} playlist - The playlist we are getting the streamable URL for.\n   * @param {Integer} index - The index of the song in the playlist or the songs array.\n   * @param {boolean} addToShuffleList - Whether we add to the shuffle list for the songs or playlist.\n   *\n   */\n  function resolveIndividualStreamableURL(\n    url,\n    playlist,\n    index,\n    addToShuffleList = false\n  ) {\n    SC.get(\"/resolve/?url=\" + url, function(sound) {\n      /*\n        If streamable we get the url and bind the client ID to the end\n        so Amplitude can just stream the song normally. We then overwrite\n        the url the user provided with the streamable URL.\n      */\n      if (sound.streamable) {\n        if (playlist != null) {\n          config.playlists[playlist].songs[index].url =\n            sound.stream_url + \"?client_id=\" + config.soundcloud_client;\n\n          if (addToShuffleList) {\n            config.playlists[playlist].shuffle_list[index].url =\n              sound.stream_url + \"?client_id=\" + config.soundcloud_client;\n          }\n          /*\n            If the user want's to use soundcloud art, we overwrite the\n            cover_art_url with the soundcloud artwork url.\n          */\n          if (config.soundcloud_use_art) {\n            config.playlists[playlist].songs[index].cover_art_url =\n              sound.artwork_url;\n\n            if (addToShuffleList) {\n              config.playlists[playlist].shuffle_list[index].cover_art_url =\n                sound.artwork_url;\n            }\n          }\n\n          /*\n            Grab the extra metadata from soundcloud and bind it to the\n            song.  The user can get this through the public function:\n            getActiveSongMetadata\n          */\n          config.playlists[playlist].songs[index].soundcloud_data = sound;\n\n          if (addToShuffleList) {\n            config.playlists[playlist].shuffle_list[\n              index\n            ].soundcloud_data = sound;\n          }\n        } else {\n          config.songs[index].url =\n            sound.stream_url + \"?client_id=\" + config.soundcloud_client;\n\n          if (addToShuffleList) {\n            config.shuffle_list[index].stream_url +\n              \"?client_id=\" +\n              config.soundcloud_client;\n          }\n\n          /*\n            If the user want's to use soundcloud art, we overwrite the\n            cover_art_url with the soundcloud artwork url.\n          */\n          if (config.soundcloud_use_art) {\n            config.songs[index].cover_art_url = sound.artwork_url;\n\n            if (addToShuffleList) {\n              config.shuffle_list[index].cover_art_url = sound.artwork_url;\n            }\n          }\n\n          /*\n            Grab the extra metadata from soundcloud and bind it to the\n            song.  The user can get this through the public function:\n            getActiveSongMetadata\n          */\n          config.songs[index].soundcloud_data = sound;\n\n          if (addToShuffleList) {\n            config.shuffle_list[index].soundcloud_data = sound;\n          }\n        }\n      } else {\n        if (playlist != null) {\n          AmplitudeHelpers.writeDebugMessage(\n            config.playlists[playlist].songs[index].name +\n              \" by \" +\n              config.playlists[playlist].songs[index].artist +\n              \" is not streamable by the Soundcloud API\"\n          );\n        } else {\n          /*\n            If not streamable, then we print a message to the user stating\n            that the song with name X and artist X is not streamable. This\n            gets printed ONLY if they have debug turned on.\n          */\n          AmplitudeHelpers.writeDebugMessage(\n            config.songs[index].name +\n              \" by \" +\n              config.songs[index].artist +\n              \" is not streamable by the Soundcloud API\"\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Due to Soundcloud SDK being asynchronous, we need to scope the\n   * index of the song in another function. The privateGetSoundcloudStreamableURLs\n   * function does the actual iteration and scoping.\n   *\n   * @access private\n   * @param {string} url \t\t- URL of the soundcloud song\n   * @param {number} index \t- The index of the soundcloud song in the songs array.\n   */\n  function resolveStreamable(url, index) {\n    SC.get(\"/resolve/?url=\" + url, function(sound) {\n      /*\n\t\t\t\tIf streamable we get the url and bind the client ID to the end\n\t\t\t\tso Amplitude can just stream the song normally. We then overwrite\n\t\t\t\tthe url the user provided with the streamable URL.\n\t\t\t*/\n      if (sound.streamable) {\n        config.songs[index].url =\n          sound.stream_url + \"?client_id=\" + config.soundcloud_client;\n\n        /*\n\t\t\t\t\tIf the user want's to use soundcloud art, we overwrite the\n\t\t\t\t\tcover_art_url with the soundcloud artwork url.\n\t\t\t\t*/\n        if (config.soundcloud_use_art) {\n          config.songs[index].cover_art_url = sound.artwork_url;\n        }\n\n        /*\n\t\t\t\t\tGrab the extra metadata from soundcloud and bind it to the\n\t\t\t\t\tsong.  The user can get this through the public function:\n\t\t\t\t\tgetActiveSongMetadata\n\t\t\t\t*/\n        config.songs[index].soundcloud_data = sound;\n      } else {\n        /*\n\t\t\t\t\tIf not streamable, then we print a message to the user stating\n\t\t\t\t\tthat the song with name X and artist X is not streamable. This\n\t\t\t\t\tgets printed ONLY if they have debug turned on.\n\t\t\t\t*/\n        AmplitudeHelpers.writeDebugMessage(\n          config.songs[index].name +\n            \" by \" +\n            config.songs[index].artist +\n            \" is not streamable by the Soundcloud API\"\n        );\n      }\n      /*\n\t\t\t\tIncrements the song ready counter.\n\t\t\t*/\n      config.soundcloud_songs_ready++;\n\n      /*\n\t\t\t\tWhen all songs are accounted for, then amplitude is ready\n\t\t\t\tto rock and we set the rest of the config.\n\t\t\t*/\n      if (config.soundcloud_songs_ready == config.soundcloud_song_count) {\n        AmplitudeInitializer.setConfig(tempUserConfig);\n      }\n    });\n  }\n\n  /**\n   * Determines if a given URL is a SoundCloud URL.\n   *\n   * @param {string} url - The URL to test if it's a SoundCloud URL.\n   */\n  function isSoundCloudURL(url) {\n    let soundcloud_regex = /^https?:\\/\\/(soundcloud.com|snd.sc)\\/(.*)$/;\n\n    return url.match(soundcloud_regex);\n  }\n\n  /*\n\t\tReturns the publically accessible methods\n\t*/\n  return {\n    loadSoundCloud: loadSoundCloud,\n    resolveIndividualStreamableURL: resolveIndividualStreamableURL,\n    isSoundCloudURL: isSoundCloudURL\n  };\n})();\n\nexport default SoundCloud;\n\n\n\n// WEBPACK FOOTER //\n// ./src/soundcloud/soundcloud.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Defines the Playback Speed Visual Elements Handler\n * @module visual/PlaybackSpeedElements\n */\nlet PlaybackSpeedElements = (function() {\n  /**\n   * Sets all of the visual playback speed buttons to have the right class\n   * to display the background image that represents the current playback\n   * speed.\n   *\n   * @access public\n   */\n  function sync() {\n    /*\n\t\t\tGets all of the playback speed classes.\n\t\t*/\n    let playbackSpeedClasses = document.getElementsByClassName(\n      \"amplitude-playback-speed\"\n    );\n\n    /*\n\t\t\tIterates over all of the playback speed classes\n\t\t\tapplying the right speed class for visual purposes.\n\t\t*/\n    for (let i = 0; i < playbackSpeedClasses.length; i++) {\n      /*\n\t\t\t\tRemoves all of the old playback speed classes.\n\t\t\t*/\n      playbackSpeedClasses[i].classList.remove(\"amplitude-playback-speed-10\");\n      playbackSpeedClasses[i].classList.remove(\"amplitude-playback-speed-15\");\n      playbackSpeedClasses[i].classList.remove(\"amplitude-playback-speed-20\");\n\n      /*\n\t\t\t\tSwitch the current playback speed and apply the appropriate\n\t\t\t\tspeed class.\n\t\t\t*/\n      switch (config.playback_speed) {\n        case 1:\n          playbackSpeedClasses[i].classList.add(\"amplitude-playback-speed-10\");\n          break;\n        case 1.5:\n          playbackSpeedClasses[i].classList.add(\"amplitude-playback-speed-15\");\n          break;\n        case 2:\n          playbackSpeedClasses[i].classList.add(\"amplitude-playback-speed-20\");\n          break;\n      }\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    sync: sync\n  };\n})();\n\nexport default PlaybackSpeedElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/playbackSpeedElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Handles all of the shuffle elements\n * @module visual/ShuffleElements\n */\nlet ShuffleElements = (function() {\n  /**\n   * Syncs the global shuffle button visual state.\n   *\n   * @access public\n   */\n  function syncMain() {\n    /*\n\t\t\tGets the shuffle buttons.\n\t\t*/\n    let shuffleButtons = document.getElementsByClassName(\"amplitude-shuffle\");\n\n    /*\n\t\t\tIterate over all of the shuffle buttons.\n\t\t*/\n    for (let i = 0; i < shuffleButtons.length; i++) {\n      /*\n\t\t\t\tEnsure the shuffle button doesn't belong to a playlist. We have\n\t\t\t\ta separate method for that.\n\t\t\t*/\n      if (shuffleButtons[i].getAttribute(\"data-amplitude-playlist\") == null) {\n        /*\n\t\t\t\t\tIf the state of the player is shuffled on, true, then\n\t\t\t\t\twe add the 'amplitude-shuffle-on' class and remove the\n\t\t\t\t\t'amplitude-shuffle-off' class. If the player is not shuffled\n\t\t\t\t\tthen we do the opposite.\n\t\t\t\t*/\n        if (config.shuffle_on) {\n          shuffleButtons[i].classList.add(\"amplitude-shuffle-on\");\n          shuffleButtons[i].classList.remove(\"amplitude-shuffle-off\");\n        } else {\n          shuffleButtons[i].classList.add(\"amplitude-shuffle-off\");\n          shuffleButtons[i].classList.remove(\"amplitude-shuffle-on\");\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist shuffle button visual state.\n   *\n   * @access public\n   * @param {string} playlist - The playlist string the shuffle button belongs to.\n   */\n  function syncPlaylist(playlist) {\n    /*\n\t\t\tGets all of the shuffle buttons.\n\t\t*/\n    let shuffleButtons = document.querySelectorAll(\n      '.amplitude-shuffle[data-amplitude-playlist=\"' + playlist + '\"]'\n    );\n\n    /*\n\t\t\tIterate over all of the shuffle buttons\n\t\t*/\n    for (let i = 0; i < shuffleButtons.length; i++) {\n      /*\n\t\t\t\tIf the state of the playlist is shuffled on, true, then\n\t\t\t\twe add the 'amplitude-shuffle-on' class and remove the\n\t\t\t\t'amplitude-shuffle-off' class. If the player is not shuffled\n\t\t\t\tthen we do the opposite.\n\t\t\t*/\n      if (config.playlists[playlist].shuffle) {\n        shuffleButtons[i].classList.add(\"amplitude-shuffle-on\");\n        shuffleButtons[i].classList.remove(\"amplitude-shuffle-off\");\n      } else {\n        shuffleButtons[i].classList.add(\"amplitude-shuffle-off\");\n        shuffleButtons[i].classList.remove(\"amplitude-shuffle-on\");\n      }\n    }\n  }\n\n  /**\n   * Returns public facing methods\n   */\n  return {\n    syncMain: syncMain,\n    syncPlaylist: syncPlaylist\n  };\n})();\n\nexport default ShuffleElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/shuffleElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Handles the syncing of the song played progress elements.\n *\n * @module visual/SongPlayedProgressElements\n */\nlet SongPlayedProgressElements = (function() {\n  /**\n   * Syncs the song played progress bars. These are HTML5 progress elements.\n   *\n   * @access private\n   * @param {number} songPlayedPercentage  \t- The percentage of the song that has been played.\n   */\n  function sync(songPlayedPercentage) {\n    syncGlobal(songPlayedPercentage);\n    syncPlaylist(songPlayedPercentage);\n    syncSong(songPlayedPercentage);\n    syncSongInPlaylist(songPlayedPercentage);\n  }\n\n  /**\n   * Sync how much has been played with a progress bar. This is the global progress bar.\n   *\n   * @access private\n   * @param {number} songPlayedPercentage \t- The percent of the song completed.\n   */\n  function syncGlobal(percentage) {\n    /*\n\t\t\tEnsure that the song completion percentage is a number\n\t\t*/\n    if (!isNaN(percentage)) {\n      /*\n\t\t\t\tGet all of the song progress bars\n\t\t\t*/\n      let songPlayedProgressBars = document.querySelectorAll(\n        \".amplitude-song-played-progress\"\n      );\n\n      for (let i = 0; i < songPlayedProgressBars.length; i++) {\n        let playlist = songPlayedProgressBars[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n        let songIndex = songPlayedProgressBars[i].getAttribute(\n          \"data-amplitude-song-index\"\n        );\n\n        if (playlist == null && songIndex == null) {\n          let max = songPlayedProgressBars[i].max;\n\n          songPlayedProgressBars[i].value = (percentage / 100) * max;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sync how much has been played with a progress bar. This is the playlist progress bar.\n   *\n   * @access public\n   * @param {number} songPlayedPercentage \t- The percent of the song completed.\n   */\n  function syncPlaylist(percentage) {\n    /*\n\t\t\tEnsure that the song completion percentage is a number\n\t\t*/\n    if (!isNaN(percentage)) {\n      /*\n\t\t\t\tGet all of the song progress bars\n\t\t\t*/\n      let songPlayedProgressBars = document.querySelectorAll(\n        '.amplitude-song-played-progress[data-amplitude-playlist=\"' +\n          config.active_playlist +\n          '\"]'\n      );\n\n      for (let i = 0; i < songPlayedProgressBars.length; i++) {\n        let song = songPlayedProgressBars[i].getAttribute(\n          \"data-amplitude-song-index\"\n        );\n\n        if (song == null) {\n          let max = songPlayedProgressBars[i].max;\n\n          songPlayedProgressBars[i].value = (percentage / 100) * max;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sync how much has been played with a progress bar. This is for an individual song.\n   *\n   * @access private\n   * @param {number} songPlayedPercentage \t- The percent of the song completed.\n   */\n  function syncSong(percentage) {\n    if (config.active_playlist == null) {\n      /*\n\t\t\t\tEnsure that the song completion percentage is a number\n\t\t\t*/\n      if (!isNaN(percentage)) {\n        /*\n\t\t\t\t\tGet all of the song progress bars\n\t\t\t\t*/\n        let songPlayedProgressBars = document.querySelectorAll(\n          '.amplitude-song-played-progress[data-amplitude-song-index=\"' +\n            config.active_index +\n            '\"]'\n        );\n\n        for (let i = 0; i < songPlayedProgressBars.length; i++) {\n          let playlist = songPlayedProgressBars[i].getAttribute(\n            \"data-amplitude-playlist\"\n          );\n\n          if (playlist == null) {\n            let max = songPlayedProgressBars[i].max;\n\n            songPlayedProgressBars[i].value = (percentage / 100) * max;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Sync how much has been played with a progress bar. This is for an individual song in playlist.\n   *\n   * @access private\n   * @param {number} songPlayedPercentage \t- The percent of the song completed.\n   */\n  function syncSongInPlaylist(percentage) {\n    /*\n\t\t\tEnsure that the song completion percentage is a number\n\t\t*/\n    if (!isNaN(percentage)) {\n      let activePlaylistIndex =\n        config.active_playlist != \"\" && config.active_playlist != null\n          ? config.playlists[config.active_playlist].active_index\n          : null;\n\n      /*\n\t\t\t\tGet all of the song progress bars\n\t\t\t*/\n      let songPlayedProgressBars = document.querySelectorAll(\n        '.amplitude-song-played-progress[data-amplitude-playlist=\"' +\n          config.active_playlist +\n          '\"][data-amplitude-song-index=\"' +\n          activePlaylistIndex +\n          '\"]'\n      );\n\n      /*\n        Iterates over all of the song played progress elements\n        and sets them accordingly.\n      */\n      for (let i = 0; i < songPlayedProgressBars.length; i++) {\n        let playlist = songPlayedProgressBars[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n        let songIndex = songPlayedProgressBars[i].getAttribute(\n          \"data-amplitude-song-index\"\n        );\n\n        if (playlist != null && songIndex != null) {\n          let max = songPlayedProgressBars[i].max;\n\n          songPlayedProgressBars[i].value = (percentage / 100) * max;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets all of the song played progress bars to 0\n   *\n   * @access public\n   */\n  function resetElements() {\n    let songPlayedProgressBars = document.getElementsByClassName(\n      \"amplitude-song-played-progress\"\n    );\n\n    for (let i = 0; i < songPlayedProgressBars.length; i++) {\n      songPlayedProgressBars[i].value = 0;\n    }\n  }\n\n  return {\n    sync: sync,\n    resetElements: resetElements\n  };\n})();\n\nexport default SongPlayedProgressElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/songPlayedProgressElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS Core Module\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * AmplitudeJS SoundCloud Module\n * @module soundcloud/SoundCloud\n */\nimport SoundCloud from \"../soundcloud/soundcloud.js\";\n\n/**\n * Imports the utilities used by the main module.\n */\n/**\n * AmplitudeJS Config State Module\n * @module utilities/ConfigState\n */\nimport ConfigState from \"../utilities/configState.js\";\n\n/**\n * AmplitudeJS Debug Module\n * @module utilities/Debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * AmplitudeJS Checks Module\n * @module utilities/Checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * AmplitudeJS Shuffler Module\n * @module utilities/Shuffler\n */\nimport Shuffler from \"../utilities/shuffler.js\";\n\n/**\n * AmplitudeJS Events Module\n * @module events/Events\n */\nimport Events from \"../events/events.js\";\n\n/**\n * AmplitudeJS FX Module\n * @module fx/Fx\n */\nimport Fx from \"../fx/fx.js\";\n\n/**\n * AmplitudeJS Visualizations Module\n * @module fx/Visualizations\n */\nimport Visualizations from \"../fx/visualizations.js\";\n\n/**\n * AmplitudeJS WaveForm Module\n * @module fx/WaveForm\n */\nimport WaveForm from \"../fx/waveform.js\";\n\n/**\n * AmplitudeJS Audio Navigation Module.\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * AmplitudeJS Callbacks Module\n * @module utilities/Callbacks\n */\nimport Callbacks from \"../utilities/callbacks.js\";\n\n/**\n * AmplitudeJS Playlists Initializer Module\n * @module init/Playlists\n */\nimport PlaylistsInitializer from \"./playlists.js\";\n\n/**\n * Imports the AmplitudeJS Shuffle Elements\n * @module visual/ShuffleElements\n */\nimport ShuffleElements from \"../visual/shuffleElements.js\";\n\n/**\n * Imports the AmplitudeJS Mute Elements\n * @module visual/MuteElements\n */\nimport MuteElements from \"../visual/muteElements.js\";\n\n/**\n * Imports the AmplitudeJS Volume Slider\n * @module visual/VolumeSliderElements\n */\nimport VolumeSliderElements from \"../visual/volumeSliderElements.js\";\n\n/**\n * Imports the AmplitudeJS Time Elements\n * @module visual/TimeElements\n */\nimport TimeElements from \"../visual/timeElements.js\";\n\n/**\n * Imports the AmplitudeJS Play/Pause Elements Module.\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Imports the AmplitudeJS MetaData Elements Module.\n * @module visual/MetaDataElements\n */\nimport MetaDataElements from \"../visual/metaDataElements.js\";\n\n/**\n * Imports the AmplitudeJS PlaybackSpeedElements Module.\n * @module visual/PlayBackSpeedElements\n */\nimport PlaybackSpeedElements from \"../visual/playbackSpeedElements.js\";\n\n/**\n * Imports the AmplitudeJS Repeat Element\n * @module visual/RepeatElements\n */\nimport RepeatElements from \"../visual/repeatElements.js\";\n\n/**\n * AmplitudeJS Initializer Module. Helps with the handling of all of the\n * initialization for AmplitudeJS.\n *\n * @module init/Initializer\n */\nlet Initializer = (function() {\n  /**\n   * The main init function.  The user will call this through\n   * Amplitude.init({}) and pass in their settings.\n   *\n   * Public Accessor: Amplitude.init( user_config_json )\n   * @access public\n   * @param {object} userConfig - A JSON object of user defined values that help configure and initialize AmplitudeJS.\n   */\n  function initialize(userConfig) {\n    let ready = false;\n\n    /*\n\t\t\tReset the config on init so we have a clean slate. This is if the\n\t\t\tuser has to re-init.\n\t\t*/\n    ConfigState.resetConfig();\n\n    /*\n\t\t\tInitialize event handlers on init. This will clear any old\n\t\t\tevent handlers on the amplitude element and re-bind what is\n\t\t\tnecessary.\n\t\t*/\n    Events.initialize();\n\n    /*\n      Initialize the callbacks we listen to for the audio object.\n    */\n    Callbacks.initialize();\n\n    /*\n\t\t\tInitializes debugging right away so we can use it for the rest\n\t\t\tof the configuration.\n\t\t*/\n    config.debug = userConfig.debug != undefined ? userConfig.debug : false;\n\n    /*\n      Set default artwork, if specified.\n    */\n    setArt(userConfig)\n\n    /*\n\t\t\tChecks to see if the user has songs defined.\n\t\t*/\n    if (userConfig.songs) {\n      /*\n\t\t\t\tChecks to see if the user has some songs in the songs array.\n\t\t\t*/\n      if (userConfig.songs.length != 0) {\n        /*\n\t\t\t\t\tCopies over the user defined songs. and prepares\n\t\t\t\t\tAmplitude for the rest of the configuration.\n\t\t\t\t*/\n        config.songs = userConfig.songs;\n        /*\n\t\t\t\t\tFlag amplitude as ready.\n\t\t\t\t*/\n        ready = true;\n      } else {\n        Debug.writeMessage(\"Please add some songs, to your songs object!\");\n      }\n    } else {\n      Debug.writeMessage(\n        \"Please provide a songs object for AmplitudeJS to run!\"\n      );\n    }\n\n    /*\n\t\t\tInitializes the audio context. In this method it checks to see if the\n\t\t\tuser wants to use visualizations or not before proceeding.\n\t\t*/\n    if (Fx.webAudioAPIAvailable()) {\n      if( Fx.determineUsingAnyFX() ){\n        /*\n          Configure the Web Audio API If It's available.\n        */\n        Fx.configureWebAudioAPI();\n\n        /*\n            Activates the audio context after an event for the user.\n        */\n        document.documentElement.addEventListener(\n          \"mousedown\", function(){\n            if (config.context.state !== 'running') {\n              config.context.resume();\n            }\n          });\n\n          document.documentElement.addEventListener(\n          \"keydown\", function(){\n            if (config.context.state !== 'running') {\n              config.context.resume();\n            }\n          });\n\n          document.documentElement.addEventListener(\n            \"keyup\", function(){\n              if (config.context.state !== 'running') {\n                config.context.resume();\n              }\n          });\n  \n      \n\n          /*\n            Set the user waveform settings if provided.\n          */\n          if (\n            userConfig.waveforms != undefined &&\n            userConfig.waveforms.sample_rate != undefined\n          ) {\n            config.waveforms.sample_rate = userConfig.waveforms.sample_rate;\n          }\n\n          /*\n            Initialize the waveform.\n          */\n          WaveForm.init();\n\n          /*\n            If the user is registering visualizations on init,\n            we set them right away.\n          */\n          if (\n            userConfig.visualizations != undefined &&\n            userConfig.visualizations.length > 0\n          ) {\n            /*\n                  Iterate over all of the visualizations and\n                  register them in our player.\n                */\n            for (let i = 0; i < userConfig.visualizations.length; i++) {\n              Visualizations.register(\n                userConfig.visualizations[i].object,\n                userConfig.visualizations[i].params\n              );\n            }\n          }\n      }\n    } else {\n      Debug.writeMessage(\n        \"The Web Audio API is not available on this platform. We are using your defined backups!\"\n      );\n    }\n\n    /*\n      Initialize default live settings\n    */\n    initializeDefaultLiveSettings();\n\n    /*\n      Initialize default song indexes\n    */\n    initializeDefaultSongIndexes();\n\n    /*\n\t\t\tWhen the preliminary config is ready, we are ready to proceed.\n\t\t*/\n    if (ready) {\n      /*\n\t\t\t\tCopies over the soundcloud information to the global config\n\t\t\t\twhich will determine where we go from there.\n\t\t\t*/\n      config.soundcloud_client =\n        userConfig.soundcloud_client != undefined\n          ? userConfig.soundcloud_client\n          : \"\";\n\n      /*\n\t\t\t\tChecks if we want to use the art loaded from soundcloud.\n\t\t\t*/\n      config.soundcloud_use_art =\n        userConfig.soundcloud_use_art != undefined\n          ? userConfig.soundcloud_use_art\n          : \"\";\n\n      /*\n\t\t\t\tIf the user provides a soundcloud client then we assume that\n\t\t\t\tthere are URLs in their songs that will reference SoundCloud.\n\t\t\t\tWe then copy over the user config they provided to the\n\t\t\t\ttemp_user_config so we don't mess up the global or their configs\n\t\t\t\tand load the soundcloud information.\n\t\t\t*/\n      let tempUserConfig = {};\n\n      /*\n        If there's a soundcloud_client key set, we load the SoundCloud data\n        for all of the songs in the array.\n      */\n      if (config.soundcloud_client != \"\") {\n        tempUserConfig = userConfig;\n\n        /*\n\t\t\t\t\tLoad up SoundCloud for use with AmplitudeJS.\n\t\t\t\t*/\n        SoundCloud.loadSoundCloud(tempUserConfig);\n      } else {\n        /*\n\t\t\t\t\tThe user is not using Soundcloud with Amplitude at this point\n\t\t\t\t\tso we just finish the configuration with the users's preferences.\n\t\t\t\t*/\n        setConfig(userConfig);\n      }\n    }\n\n    /*\n\t\t\tDebug out what was initialized with AmplitudeJS.\n\t\t*/\n    Debug.writeMessage(\"Initialized With: \");\n    Debug.writeMessage(config);\n  }\n\n  /**\n   * Rebinds all of the elements in the display.\n   *\n   * Public Accessor: Amplitude.rebindDisplay()\n   * @access public\n   */\n  function rebindDisplay() {\n    Events.initialize();\n    MetaDataElements.displayMetaData();\n  }\n\n  /**\n   * Finishes the initalization of the config. Takes all of the user defined\n   * parameters and makes sure they override the defaults. The important\n   * config information is assigned in the publicInit() function.\n   *\n   * This function can be called from 2 different locations:\n   * \t1. Right away on init after the important settings are defined.\n   *\n   * \t2. After all of the Soundcloud URLs are resolved properly and\n   *\t \tsoundcloud is configured.  We will need the proper URLs from Soundcloud\n   * \t\tto stream through Amplitude so we get those right away before we\n   * \t\tset the information and the active song\n   *\n   * @access public\n   * @param {object} userConfig - A JSON object of user defined values that help configure and initialize AmplitudeJS.\n   */\n  function setConfig(userConfig) {\n    /*\n      Checks if the user has any playlists defined. If they do\n      we have to initialize the functionality for the playlists.\n    */\n    if (userConfig.playlists && countPlaylists(userConfig.playlists) > 0) {\n      PlaylistsInitializer.initialize(userConfig.playlists);\n    }\n\n    /*\n\t\t\tCheck to see if the user entered a start song\n\t\t*/\n    if (userConfig.start_song != undefined && userConfig.starting_playlist) {\n      /*\n\t\t\t\tEnsure what has been entered is an integer.\n\t\t\t*/\n      if (Checks.isInt(userConfig.start_song)) {\n        AudioNavigation.changeSong(\n          config.songs[userConfig.start_song],\n          userConfig.start_song\n        );\n      } else {\n        Debug.writeMessage(\n          \"You must enter an integer index for the start song.\"\n        );\n      }\n    } else {\n      AudioNavigation.changeSong(config.songs[0], 0);\n    }\n\n    /*\n      If the shuffle is on by default, shuffle the songs and\n      switch to the shuffled song.\n    */\n    if (userConfig.shuffle_on != undefined && userConfig.shuffle_on) {\n      config.shuffle_on = true;\n      Shuffler.shuffleSongs();\n\n      AudioNavigation.changeSong(config.shuffle_list[0], 0);\n    }\n\n    /*\n\t\t\tAllows the user to set whether they want to continue to the next song\n\t\t\twhen the current song finishes or not. In any scenario that's not a playlist,\n\t\t\tcontining to the next song may not be desired.\n\t\t*/\n    config.continue_next =\n      userConfig.continue_next != undefined ? userConfig.continue_next : true;\n\n    /*\n\t\t\tIf the user defined a playback speed, we copy over their\n\t\t\tpreference here, otherwise we default to normal playback\n\t\t\tspeed of 1.0.\n\t\t*/\n    config.playback_speed =\n      userConfig.playback_speed != undefined ? userConfig.playback_speed : 1.0;\n\n    /*\n\t\t\tSets the audio playback speed.\n\t\t*/\n    Core.setPlaybackSpeed(config.playback_speed);\n\n    /*\n\t\t\tIf the user wants the song to be pre-loaded for instant\n\t\t\tplayback, they set it to true. By default it's set to just\n\t\t\tload the metadata.\n\t\t*/\n    config.audio.preload =\n      userConfig.preload != undefined ? userConfig.preload : \"auto\";\n\n    /*\n\t\t\tInitializes the user defined callbacks. This should be a JSON\n\t\t\tobject that contains a key->value store of the callback name\n\t\t\tand the name of the function the user needs to call.\n\t\t*/\n    config.callbacks =\n      userConfig.callbacks != undefined ? userConfig.callbacks : {};\n\n    /*\n\t\t\tInitializes the user defined key bindings. This should be a JSON\n\t\t\tobject that contains a key->value store of the key event number\n\t\t\tpressed and the method to be run.\n\t\t*/\n    config.bindings =\n      userConfig.bindings != undefined ? userConfig.bindings : {};\n\n    /*\n\t\t\tThe user can define a starting volume in a range of 0-100 with\n\t\t\t0 being muted and 100 being the loudest. After the config is set\n\t\t\tAmplitude sets the active song's volume to the volume defined\n\t\t\tby the user.\n\t\t*/\n    config.volume = userConfig.volume != undefined ? userConfig.volume : 50;\n\n    /*\n\t\t\tSets the delay between songs if the user has it set. This should be in MS.\n\t\t*/\n    config.delay = userConfig.delay != undefined ? userConfig.delay : 0;\n\n    /*\n\t\t\tThe user can set the volume increment and decrement values between 1 and 100\n\t\t\tfor when the volume up or down button is pressed.  The default is an increase\n\t\t\tor decrease of 5.\n\t\t*/\n    config.volume_increment =\n      userConfig.volume_increment != undefined\n        ? userConfig.volume_increment\n        : 5;\n\n    config.volume_decrement =\n      userConfig.volume_decrement != undefined\n        ? userConfig.volume_decrement\n        : 5;\n\n    /*\n\t\t\tSet the volume to what is defined in the config. The user can define this,\n\t\t\tso we should set it up that way.\n\t\t*/\n    Core.setVolume(config.volume);\n\n    /*\n     Set default artwork, if specified\n     */\n    setArt(userConfig)\n\n    /*\n      Initialize the visual elements\n    */\n    initializeElements();\n\n    /*\n\t\t\tIf the user has selected a starting playlist, we need to set the starting playlist\n\t\t\tand sync the visuals\n\t\t*/\n    if (\n      userConfig.starting_playlist != undefined &&\n      userConfig.starting_playlist != \"\"\n    ) {\n      /*\n\t\t\t\tSet the active playlist to the starting playlist by the user\n\t\t\t*/\n      config.active_playlist = userConfig.starting_playlist;\n\n      /*\n\t\t\t\tCheck if the user defined a song to start with in the playlist.\n\t\t\t*/\n      if (\n        userConfig.starting_playlist_song != undefined &&\n        userConfig.starting_playlist_song != \"\"\n      ) {\n        /*\n\t\t\t\t\tEnsure the song is a valid index.\n\t\t\t\t*/\n        if (\n          typeof userConfig.playlists[userConfig.starting_playlist].songs[\n            parseInt(userConfig.starting_playlist_song)\n          ] != undefined\n        ) {\n          /*\n\t\t\t\t\t\tSet the player to the song defined by the user.\n\t\t\t\t\t*/\n          AudioNavigation.changeSongPlaylist(\n            config.active_playlist,\n            userConfig.playlists[userConfig.starting_playlist].songs[\n              parseInt(userConfig.starting_playlist_song)\n            ],\n            parseInt(userConfig.starting_playlist_song)\n          );\n        } else {\n          /*\n\t\t\t\t\t\tSet the player to the first song in the playlist\n\t\t\t\t\t*/\n          AudioNavigation.changeSongPlaylist(\n            config.active_playlist,\n            userConfig.playlists[userConfig.starting_playlist].songs[0],\n            0\n          );\n          /*\n\t\t\t\t\t\tDebug that the song index doesn't exist\n\t\t\t\t\t*/\n          Debug.writeMessage(\n            \"The index of \" +\n              userConfig.starting_playlist_song +\n              \" does not exist in the playlist \" +\n              userConfig.starting_playlist\n          );\n        }\n      } else {\n        /*\n\t\t\t\t\tSet the player to the first song in the playlist\n\t\t\t\t*/\n        AudioNavigation.changeSong(\n          config.active_playlist,\n          userConfig.playlists[userConfig.starting_playlist].songs[0],\n          0\n        );\n      }\n\n      /*\n\t\t\t\tSync the main and song play pause buttons.\n\t\t\t*/\n      PlayPauseElements.sync();\n    }\n\n    /*\n\t\t\tRun after init callback\n\t\t*/\n    Callbacks.run(\"initialized\");\n  }\n\n  /**\n   * Sets the default_album_art and default_playlist_art from the\n   * user supplied configuration.\n   *\n   * @access public\n   * @param {object} userConfig - A JSON object of user defined values that help configure and initialize AmplitudeJS.\n   */\n  function setArt(userConfig){\n    /*\n      If the user defines default album art, this image will display if the active\n      song doesn't have album art defined.\n    */\n    if (userConfig.default_album_art != undefined) {\n      config.default_album_art = userConfig.default_album_art;\n    } else {\n      config.default_album_art = \"\";\n    }\n\n    /*\n\t\t\tIf the user defines default playlist art, this image will display if the user\n\t\t\ttries to set up a playlist meta data image tag but doesn't have one defined.\n\t\t*/\n    if (userConfig.default_playlist_art != undefined) {\n      config.default_playlist_art = userConfig.default_playlist_art;\n    } else {\n      config.default_playlist_art = \"\";\n    }\n  }\n\n  /**\n   * Initializes all of the elements on the page to the default starting point\n   * to build from there.\n   *\n   * @access private\n   */\n  function initializeElements() {\n    /*\n\t\t\tVisually sync the shuffle statuses\n\t\t*/\n    ShuffleElements.syncMain();\n\n    /*\n\t\t\tSync Mute Elements.\n\t\t*/\n    MuteElements.setMuted(config.volume == 0 ? true : false);\n\n    /*\n\t\t\tSync Volume Slider Elements\n\t\t*/\n    VolumeSliderElements.sync();\n\n    /*\n\t\t\tSyncs all of the playback speed elements.\n\t\t*/\n    PlaybackSpeedElements.sync();\n\n    /*\n\t\t\tSyncs all of the visual time elements to 00.\n\t\t*/\n    TimeElements.resetCurrentTimes();\n\n    /*\n\t\t\tSets all of the play pause buttons to pause.\n\t\t*/\n    PlayPauseElements.syncToPause();\n\n    /*\n\t\t\tSets the meta data for the songs automatically.\n\t\t*/\n    MetaDataElements.syncMetaData();\n\n    /*\n\t\t\tSets the repeat buttons automatically.\n\t\t*/\n    RepeatElements.syncRepeatSong();\n  }\n\n  /**\n   * Counts the number of playlists the user has configured. This ensures\n   * that the user has at least 1 playlist so we can validate the songs\n   * defined in the playlist are correct and they didn't enter an invalid\n   * ID.\n   *\n   * @access private\n   * @param {object} playlists \t-\n   */\n  function countPlaylists(playlists) {\n    /*\n\t\t\tInitialize the placeholders to iterate through the playlists\n\t\t\tand find out how many we have to account for.\n\t\t*/\n    let size = 0,\n      key;\n\n    /*\n\t\t\tIterate over playlists and if the user has the playlist defined,\n\t\t\tincrement the size of playlists.\n\t\t*/\n    for (key in playlists) {\n      if (playlists.hasOwnProperty(key)) {\n        size++;\n      }\n    }\n\n    /*\n\t\t\tDebug how many playlists are in the config.\n\t\t*/\n    Debug.writeMessage(\"You have \" + size + \" playlist(s) in your config\");\n\n    /*\n\t\t\tReturn the number of playlists in the config.\n\t\t*/\n    return size;\n  }\n\n  /**\n   * Intializes the default live settings for all of the songs.\n   *\n   * @access private\n   */\n  function initializeDefaultLiveSettings() {\n    for (let i = 0; i < config.songs.length; i++) {\n      if (config.songs[i].live == undefined) {\n        config.songs[i].live = false;\n      }\n    }\n  }\n\n  /** \n   * Initializes the index of the song in the songs array so\n   * we can reference it if needed\n   * \n   * @access private\n   */\n  function initializeDefaultSongIndexes(){\n    for (let i = 0; i < config.songs.length; i++) {\n      config.songs[i].index = i;\n    }\n  }\n\n\n  /*\n\t\tReturns the publicly accessible methods\n\t*/\n  return {\n    initialize: initialize,\n    setConfig: setConfig,\n    rebindDisplay: rebindDisplay\n  };\n})();\n\nexport default Initializer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/init/init.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Builds a waveform for the current audio.\n * Help from: https://robots.thoughtbot.com/javascript-audio-api\n * https://stackoverflow.com/questions/21347833/html-svg-not-drawing-works-in-other-pages\n */\nlet WaveForm = (function() {\n  /*\n    Initialize the local variables used in the Waveform.\n  */\n  let buffer = \"\";\n  let sampleRate = config.waveforms.sample_rate;\n  let peaks = \"\";\n\n  function init() {\n    /*\n      Grabs all of the waveform elements on the page.\n    */\n    let waveforms = document.querySelectorAll(\".amplitude-wave-form\");\n\n    /*\n      If there are waveforms, we iterate over them and set them up to display\n      properly.\n    */\n    if (waveforms.length > 0) {\n      /*\n        Iterate over all of the waveforms and build the SVG parts.\n      */\n      for (let i = 0; i < waveforms.length; i++) {\n        /*\n          Clear the inner HTML of the element if we are replacing the waveform.\n        */\n        waveforms[i].innerHTML = \"\";\n\n        /*\n          Inserts an SVG into the element.\n        */\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svg.setAttribute(\"viewBox\", \"0 -1 \" + sampleRate + \" 2\");\n        svg.setAttribute(\"preserveAspectRatio\", \"none\");\n\n        /*\n          Add a g component to the SVG\n        */\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        svg.appendChild(g);\n\n        /*\n          Add a path component to the g\n        */\n        let path = document.createElementNS(\n          \"http://www.w3.org/2000/svg\",\n          \"path\"\n        );\n        path.setAttribute(\"d\", \"\");\n        path.setAttribute(\"id\", \"waveform\");\n\n        g.appendChild(path);\n\n        /*\n          Append the SVG to the waveform.\n        */\n        waveforms[i].appendChild(svg);\n      }\n    }\n  }\n\n  /**\n   * Builds each waveform for the page.\n   */\n  function build() {\n    if (config.web_audio_api_available) {\n      /*\n        If we don't have the wave form built, we need to build the waveform by loading\n        the src with an array buffer.\n      */\n      if (\n        config.waveforms.built[\n          Math.abs(\n            config.audio.src.split(\"\").reduce(function(a, b) {\n              a = (a << 5) - a + b.charCodeAt(0);\n              return a & a;\n            }, 0)\n          )\n        ] == undefined\n      ) {\n        /*\n          Initializes a new XML Http Request.\n        */\n        var req = new XMLHttpRequest();\n\n        /*\n          Opens the src parameter for the audio file to read in.\n        */\n        req.open(\"GET\", config.audio.src, true);\n        req.responseType = \"arraybuffer\";\n\n        /*\n          When the ready state changes, check to see if we can render the\n          wave form.\n        */\n        req.onreadystatechange = function(e) {\n          /*\n            When the request is complete, then we begin decoding the\n            audio to build the waveform.\n          */\n          if (req.readyState == 4) {\n            /*\n              If the status is 200 means the response is a success and\n              we decode the audio data.\n            */\n            if (req.status == 200) {\n              /*\n                Decode the audio data and process the waveform.\n              */\n              config.context.decodeAudioData(req.response, function(\n                bufferedAudio\n              ) {\n                /*\n                  Set the buffer to the audio returned.\n                */\n                buffer = bufferedAudio;\n\n                /*\n                  Get the peaks in the audio.\n                */\n                peaks = getPeaks(sampleRate, buffer);\n\n                /*\n                  Build the SVG\n                */\n                process(sampleRate, buffer, peaks);\n              });\n            }\n          }\n        };\n        req.send();\n      } else {\n        /*\n          If we already have a waveform, we grab the waveform that\n          was created for the song and display it. We do a simple hash\n          of the song URL so it's already unique.\n        */\n        displayWaveForms(\n          config.waveforms.built[\n            Math.abs(\n              config.audio.src.split(\"\").reduce(function(a, b) {\n                a = (a << 5) - a + b.charCodeAt(0);\n                return a & a;\n              }, 0)\n            )\n          ]\n        );\n      }\n    }\n  }\n\n  /**\n   * Processes the audio and generates the waveform.\n   *\n   * @param {sampleRate} sampleRate - The rate we should sample the audio.\n   * @param {arraybuffer} buffer - The Web Audio API\n   * @param {array} peaks - The peaks in the audio.\n   */\n  function process(sampleRate, buffer, peaks) {\n    /*\n      If we have a buffer, we find the peaks in the audio.\n    */\n    if (buffer) {\n      /*\n        Get the total peaks in the song.\n      */\n      let totalPeaks = peaks.length;\n\n      /*\n        Figure out the depth of the peak.\n      */\n      let d = \"\";\n      for (let peakNumber = 0; peakNumber < totalPeaks; peakNumber++) {\n        if (peakNumber % 2 === 0) {\n          d += ` M${~~(peakNumber / 2)}, ${peaks.shift()}`;\n        } else {\n          d += ` L${~~(peakNumber / 2)}, ${peaks.shift()}`;\n        }\n      }\n\n      /*\n        Add the waveform to the built waveforms array.\n      */\n      config.waveforms.built[\n        Math.abs(\n          config.audio.src.split(\"\").reduce(function(a, b) {\n            a = (a << 5) - a + b.charCodeAt(0);\n            return a & a;\n          }, 0)\n        )\n      ] = d;\n\n      /*\n        Display the waveform.\n      */\n      displayWaveForms(\n        config.waveforms.built[\n          Math.abs(\n            config.audio.src.split(\"\").reduce(function(a, b) {\n              a = (a << 5) - a + b.charCodeAt(0);\n              return a & a;\n            }, 0)\n          )\n        ]\n      );\n    }\n  }\n\n  /**\n   * Get the peaks of the audio for the waveform.\n   *\n   * @param {number} length - The sample size of the audio.\n   * @param {array} buffer - The array buffer used to find the peaks in the audio.\n   */\n  function getPeaks(length, buffer) {\n    /*\n      Set the parameters needed to build the SVG.\n    */\n    const sampleSize = buffer.length / length;\n    const sampleStep = ~~(sampleSize / 10) || 1;\n    const numberOfChannels = buffer.numberOfChannels;\n    const mergedPeaks = [];\n\n    /*\n      Iterate over the channels and find the peaks.\n    */\n    for (\n      let channelNumber = 0;\n      channelNumber < numberOfChannels;\n      channelNumber++\n    ) {\n      /*\n        Initialize the peaks array and set the channel data to what\n        the buffer has in its channel data.\n      */\n      const peaks = [];\n      const channelData = buffer.getChannelData(channelNumber);\n\n      /*\n        Iterate over peaks with respect to the sample size.\n      */\n      for (let peakNumber = 0; peakNumber < length; peakNumber++) {\n        /*\n          Gt the start and end peak.\n        */\n        const start = ~~(peakNumber * sampleSize);\n        const end = ~~(start + sampleSize);\n\n        /*\n          Set min and max to the channel data first peak.\n        */\n        let min = channelData[0];\n        let max = channelData[0];\n\n        /*\n          Iterate over the parts of the song starting to the\n          ending to display the waveform.\n        */\n        for (\n          let sampleIndex = start;\n          sampleIndex < end;\n          sampleIndex += sampleStep\n        ) {\n          const value = channelData[sampleIndex];\n\n          if (value > max) {\n            max = value;\n          }\n          if (value < min) {\n            min = value;\n          }\n        }\n\n        /*\n          Set the max and min for the peak.\n        */\n        peaks[2 * peakNumber] = max;\n        peaks[2 * peakNumber + 1] = min;\n\n        /*\n          Merge the peaks\n        */\n        if (channelNumber === 0 || max > mergedPeaks[2 * peakNumber]) {\n          mergedPeaks[2 * peakNumber] = max;\n        }\n\n        if (channelNumber === 0 || min < mergedPeaks[2 * peakNumber + 1]) {\n          mergedPeaks[2 * peakNumber + 1] = min;\n        }\n      }\n    }\n\n    /*\n      Returns the merged peaks.\n    */\n    return mergedPeaks;\n  }\n\n  /**\n   * Displays all of the waveforms necessary.\n   *\n   * @param {path} svg - The drawing of the waveform.\n   */\n  function displayWaveForms(svg) {\n    let waveformElements = document.querySelectorAll(\".amplitude-wave-form\");\n\n    /*\n      Iterate over all of the waveform elements and\n      display the waveform.\n    */\n    for (let i = 0; i < waveformElements.length; i++) {\n      /*\n        Get the playlist attribute of the waveform element.\n      */\n      let playlist = waveformElements[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n\n      /*\n        Get the song index attribute of the waveform element.\n      */\n      let song = waveformElements[i].getAttribute(\"data-amplitude-song-index\");\n\n      /*\n        If the playlist is null and the song is null it's a global element.\n      */\n      if (playlist == null && song == null) {\n        displayGlobalWaveform(waveformElements[i], svg);\n      }\n\n      /*\n        If the playlist is defined but the song is null it's a playlist element.\n      */\n      if (playlist != null && song == null) {\n        displayPlaylistWaveform(waveformElements[i], svg, playlist);\n      }\n\n      /*\n        If the playlist is not defined and the song is not null it's a song\n        element.\n      */\n      if (playlist == null && song != null) {\n        displaySongWaveform(waveformElements[i], svg, song);\n      }\n\n      /*\n        If the playlist and song are defined it's a song in the playlist element.\n      */\n      if (playlist != null && song != null) {\n        displaySongInPlaylistWaveform(waveformElements[i], svg, playlist, song);\n      }\n    }\n  }\n\n  /**\n   * Displays a global wave form.\n   *\n   * @param {Node} element - Element to display the waveform in.\n   * @param {SVG} svg - The waveform path.\n   */\n  function displayGlobalWaveform(element, svg) {\n    let waveformPath = element.querySelector(\"svg g path\");\n\n    waveformPath.setAttribute(\"d\", svg);\n  }\n\n  /**\n   * Displays a playlist wave form.\n   *\n   * @param {Node} element - Element to display the waveform in.\n   * @param {SVG} svg - The waveform path.\n   * @param {string} playlist - The playlist we are displaying the waveform for.\n   */\n  function displayPlaylistWaveform(element, svg, playlist) {\n    /*\n      Ensure the playlist is the active playlist.\n    */\n    if (config.active_playlist == playlist) {\n      let waveformPath = element.querySelector(\"svg g path\");\n\n      waveformPath.setAttribute(\"d\", svg);\n    }\n  }\n\n  /**\n   * Displays a song wave form.\n   *\n   * @param {Node} element - Element to display the waveform in.\n   * @param {SVG} svg - The waveform path.\n   * @param {Integer} song - The index of the song we are displaying the\n   * waveform for.\n   */\n  function displaySongWaveform(element, svg, song) {\n    /*\n      Ensure it's the active song being displayed.\n    */\n    if (config.active_index == song) {\n      let waveformPath = element.querySelector(\"svg g path\");\n\n      waveformPath.setAttribute(\"d\", svg);\n    }\n  }\n\n  /**\n   * Displays a song in playlist waveform.\n   *\n   * @param {Node} element - Element to display the waveform in.\n   * @param {SVG} svg - The waveform path.\n   * @param {String} playlist - The playlist the waveform is in.\n   * @param {Integer} song - The index of the song we are displaying the waveform for.\n   */\n  function displaySongInPlaylistWaveform(element, svg, playlist, song) {\n    /*\n      Ensure it's the active song in the active playlist.\n    */\n    if (\n      config.active_playlist == playlist &&\n      config.playlists[config.active_playlist].active_index == song\n    ) {\n      let waveformPath = element.querySelector(\"svg g path\");\n\n      waveformPath.setAttribute(\"d\", svg);\n    }\n  }\n\n  /**\n   * Determines if the user is using waveforms\n   */\n  function determineIfUsingWaveforms(){\n    let waveforms = document.querySelectorAll(\".amplitude-wave-form\");\n\n    if( waveforms.length > 0 ){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  /*\n    Return the public methods.\n  */\n  return {\n    init: init,\n    build: build,\n    determineIfUsingWaveforms: determineIfUsingWaveforms\n  };\n})();\n\nexport default WaveForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/fx/waveform.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * The utility to handle the computation of time in AmplitudeJS.\n * @module utilities/Time\n */\nlet Time = (function() {\n  /**\n   * Computes the current song time. Breaks down where the song is into\n   * hours, minutes, seconds and formats it to be displayed to the user.\n   *\n   * @access public\n   */\n  function computeCurrentTimes() {\n    /*\n\t\t\tInitialize the current time object that will be returned.\n\t\t*/\n    let currentTime = {};\n\n    /*\n\t\t\tComputes the current seconds for the song.\n\t\t*/\n    let currentSeconds =\n      (Math.floor(config.audio.currentTime % 60) < 10 ? \"0\" : \"\") +\n      Math.floor(config.audio.currentTime % 60);\n\n    /*\n\t\t\tComputes the current minutes for the song.\n\t\t*/\n    let currentMinutes = Math.floor(config.audio.currentTime / 60);\n\n    /*\n\t\t\tInitialize the current hours variable.\n\t\t*/\n    let currentHours = \"00\";\n\n    /*\n\t\t\tIf the current minutes is less than 10, we add a leading 0.\n\t\t*/\n    if (currentMinutes < 10) {\n      currentMinutes = \"0\" + currentMinutes;\n    }\n\n    /*\n\t\t\tIf the user is more than 60 minutes into the song, then\n\t\t\twe extract the hours.\n\t\t*/\n    if (currentMinutes >= 60) {\n      currentHours = Math.floor(currentMinutes / 60);\n      currentMinutes = currentMinutes % 60;\n\n      /*\n\t\t\t\tIf the user is less than 10 minutes in, we append the\n\t\t\t\tadditional 0 to the minutes.\n\t\t\t*/\n      if (currentMinutes < 10) {\n        currentMinutes = \"0\" + currentMinutes;\n      }\n    }\n\n    /*\n\t\t\tBuild a clean current time object and send back the appropriate information.\n\t\t*/\n    currentTime.seconds = currentSeconds;\n    currentTime.minutes = currentMinutes;\n    currentTime.hours = currentHours;\n\n    return currentTime;\n  }\n\n  /**\n   * Computes the current song duration. Breaks down where the song is into\n   * hours, minutes, seconds and formats it to be displayed to the user.\n   *\n   * @access public\n   */\n  function computeSongDuration() {\n    /*\n\t\t\tInitialize the song duration object that will be returned.\n\t\t*/\n    let songDuration = {};\n\n    /*\n\t\t\tComputes the duration of the song's seconds.\n\t\t*/\n    let songDurationSeconds =\n      (Math.floor(config.audio.duration % 60) < 10 ? \"0\" : \"\") +\n      Math.floor(config.audio.duration % 60);\n\n    /*\n\t\t\tComputes the duration of the song's minutes.\n\t\t*/\n    let songDurationMinutes = Math.floor(config.audio.duration / 60);\n\n    /*\n\t\t\tInitialize the hours duration variable.\n\t\t*/\n    var songDurationHours = \"00\";\n\n    /*\n\t\t\tIf the song duration minutes is less than 10, we add a leading 0.\n\t\t*/\n    if (songDurationMinutes < 10) {\n      songDurationMinutes = \"0\" + songDurationMinutes;\n    }\n\n    /*\n\t\t\tIf there is more than 60 minutes in the song, then we\n\t\t\textract the hours.\n\t\t*/\n    if (songDurationMinutes >= 60) {\n      songDurationHours = Math.floor(songDurationMinutes / 60);\n      songDurationMinutes = songDurationMinutes % 60;\n\n      /*\n\t\t\t\tIf the song duration minutes is less than 10 we append\n\t\t\t\tthe additional 0.\n\t\t\t*/\n      if (songDurationMinutes < 10) {\n        songDurationMinutes = \"0\" + songDurationMinutes;\n      }\n    }\n\n    /*\n\t\t\tBuild a clean song duration object and send back the appropriate information.\n\t\t*/\n    songDuration.seconds = isNaN(songDurationSeconds)\n      ? \"00\"\n      : songDurationSeconds;\n    songDuration.minutes = isNaN(songDurationMinutes)\n      ? \"00\"\n      : songDurationMinutes;\n    songDuration.hours = isNaN(songDurationHours)\n      ? \"00\"\n      : songDurationHours.toString();\n\n    return songDuration;\n  }\n\n  /**\n   * Computes the song completion percentage.\n   *\n   * @access public\n   */\n  function computeSongCompletionPercentage() {\n    return (config.audio.currentTime / config.audio.duration) * 100;\n  }\n\n  /**\n   * Sets the current time for the audio.\n   *\n   * @access public\n   */\n  function setCurrentTime(time) {\n    /*\n      If the song is not live, we can set the current time.\n    */\n    if (!config.active_metadata.live) {\n      /*\n        Makes sure the number is finite to set the time.\n      */\n      if (isFinite(time)) {\n        config.audio.currentTime = time;\n      }\n    }\n  }\n\n  /**\n   * Defines what is returned by the module\n   */\n  return {\n    computeCurrentTimes: computeCurrentTimes,\n    computeSongDuration: computeSongDuration,\n    computeSongCompletionPercentage: computeSongCompletionPercentage,\n    setCurrentTime: setCurrentTime\n  };\n})();\n\nexport default Time;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utilities/time.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS Visual Handler for Buffered Progress Elements\n *\n * @module visual/BufferedProgressElements\n */\nlet BufferedProgressElements = (function() {\n  /**\n   * Syncs the buffered progress bars to the current percentage in the config\n   *\n   * @access public\n   */\n  function sync() {\n    syncGlobal();\n    syncPlaylist();\n    syncSong();\n    syncSongInPlaylist();\n  }\n\n  /**\n   * Sync the global song buffered progress elements.\n   */\n  function syncGlobal() {\n    /*\n\t\t\tGets all of the song buffered progress bars.\n\t\t*/\n    const songBufferedProgressBars = document.getElementsByClassName(\n      \"amplitude-buffered-progress\"\n    );\n\n    /*\n\t\t\tIterate over all of the song buffered progress bar and\n\t\t\tset them to 0 which is like re-setting them.\n\t\t*/\n    for (let i = 0; i < songBufferedProgressBars.length; i++) {\n      let playlist = songBufferedProgressBars[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let song = songBufferedProgressBars[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && song == null) {\n        songBufferedProgressBars[i].value = parseFloat(\n          parseFloat(config.buffered) / 100\n        );\n      }\n    }\n  }\n\n  /**\n   * Sync the playlist song buffered progress elements.\n   */\n  function syncPlaylist() {\n    /*\n\t\t\tGets all of the song buffered progress bars.\n\t\t*/\n    const songBufferedProgressBarsPlaylist = document.querySelectorAll(\n      '.amplitude-buffered-progress[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n\t\t\tIterate over all of the song buffered progress bar and\n\t\t\tset them to 0 which is like re-setting them.\n\t\t*/\n    for (let i = 0; i < songBufferedProgressBarsPlaylist.length; i++) {\n      let song = songBufferedProgressBarsPlaylist[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (song == null) {\n        songBufferedProgressBarsPlaylist[i].value = parseFloat(\n          parseFloat(config.buffered) / 100\n        );\n      }\n    }\n  }\n\n  /**\n   * Sync the song song buffered progress elements.\n   */\n  function syncSong() {\n    /*\n\t\t\tGets all of the song buffered progress bars.\n\t\t*/\n    const songBufferedProgressBarsSongs = document.querySelectorAll(\n      '.amplitude-buffered-progress[data-amplitude-song-index=\"' +\n        config.active_index +\n        '\"]'\n    );\n\n    /*\n\t\t\tIterate over all of the song buffered progress bar and\n\t\t\tset them to 0 which is like re-setting them.\n\t\t*/\n    for (let i = 0; i < songBufferedProgressBarsSongs.length; i++) {\n      let playlist = songBufferedProgressBarsSongs[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n\n      if (playlist == null) {\n        songBufferedProgressBarsSongs[i].value = parseFloat(\n          parseFloat(config.buffered) / 100\n        );\n      }\n    }\n  }\n\n  /**\n   * Sync the song in playlist song buffered progress elements.\n   */\n  function syncSongInPlaylist() {\n    let activePlaylistIndex =\n      config.active_playlist != null && config.active_playlist != \"\"\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    /*\n\t\t\tGets all of the song buffered progress bars.\n\t\t*/\n    const songBufferedProgressBarsSongsInPlaylist = document.querySelectorAll(\n      '.amplitude-buffered-progress[data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"][data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n\t\t\tIterate over all of the song buffered progress bar and\n\t\t\tset them to 0 which is like re-setting them.\n\t\t*/\n    for (let i = 0; i < songBufferedProgressBarsSongsInPlaylist.length; i++) {\n      songBufferedProgressBarsSongsInPlaylist[i].value = parseFloat(\n        parseFloat(config.buffered) / 100\n      );\n    }\n  }\n\n  /**\n   * Sets all of the song buffered progress bars to 0\n   *\n   * @access public\n   */\n  function reset() {\n    /*\n\t\t\tGets all of the song buffered progress bars.\n\t\t*/\n    let songBufferedProgressBars = document.getElementsByClassName(\n      \"amplitude-buffered-progress\"\n    );\n\n    /*\n\t\t\tIterate over all of the song buffered progress bar and\n\t\t\tset them to 0 which is like re-setting them.\n\t\t*/\n    for (let i = 0; i < songBufferedProgressBars.length; i++) {\n      songBufferedProgressBars[i].value = 0;\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    sync: sync,\n    reset: reset\n  };\n})();\n\nexport default BufferedProgressElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/bufferedProgressElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * Imports the Callback Utility\n * @module utilities/callbacks\n */\nimport Callbacks from \"../utilities/callbacks.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Play Pause Elements\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * AmplitudeJS Ended Module. Handles the ended event on the audio.\n *\n * @module events/Ended\n */\nlet Ended = (function() {\n  /**\n   * When the song has ended, handles what to do next\n   *\n   * HANDLER FOR: ended\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      Sets the time out for song ended. This determines if\n      we should go to the next song or delay between songs.\n    */\n    setTimeout(function() {\n      /*\n        If we continue next, we should move to the next song in the playlist.\n      */\n      if (config.continue_next) {\n        /*\n\t\t\t\t\tIf the active playlist is not set, we set the\n\t\t\t\t\tnext song that's in the songs array.\n\t\t\t\t*/\n        if (config.active_playlist == \"\" || config.active_playlist == null) {\n          AudioNavigation.setNext(true);\n        } else {\n          AudioNavigation.setNextPlaylist(config.active_playlist, true);\n        }\n      } else {\n        if (!config.is_touch_moving) {\n          /*\n\t\t\t\t\t\tStops the active song.\n\t\t\t\t\t*/\n          AmplitudeCore.stop();\n\n          /*\n            Sync the play pause elements.\n          */\n          PlayPauseElements.sync();\n        }\n      }\n    }, config.delay);\n  }\n\n  /*\n    Returns the public facing methods.\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Ended;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/ended.js","/*\n\tImport the necessary classes and config to use\n\twith the events.\n*/\nimport config from \"../config.js\";\n\n/**\n * Imports all of the handler objects used by the events.\n */\nimport KeyDown from \"./keydown.js\";\nimport TimeUpdate from \"./timeUpdate.js\";\nimport Ended from \"./ended.js\";\nimport Progress from \"./progress.js\";\nimport Play from \"./play.js\";\nimport Pause from \"./pause.js\";\nimport PlayPause from \"./playPause.js\";\nimport Stop from \"./stop.js\";\nimport Mute from \"./mute.js\";\nimport VolumeUp from \"./volumeUp.js\";\nimport VolumeDown from \"./volumeDown.js\";\nimport SongSlider from \"./songSlider.js\";\nimport VolumeSlider from \"./volumeSlider.js\";\nimport Next from \"./next.js\";\nimport Prev from \"./prev.js\";\nimport Repeat from \"./repeat.js\";\nimport RepeatSong from \"./repeatSong.js\";\nimport PlaybackSpeed from \"./playbackSpeed.js\";\nimport Shuffle from \"./shuffle.js\";\nimport SkipTo from \"./skipTo.js\";\nimport WaveForm from \"../fx/waveform.js\";\n\n/**\n * Imports the utility classes used by the evnets.\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * AmplitudeJS Events Module. Handles all of the events we listen to in\n * AmplitudeJS.\n *\n * @module events/Events\n */\nvar Events = (function() {\n  /**\n   * Initializes the handlers for the events listened to by Amplitude\n   *\n   * @access public\n   */\n  function initialize() {\n    /*\n\t\t\tWrite out debug message\n\t\t*/\n    Debug.writeMessage(\"Beginning initialization of event handlers..\");\n\n    /*\n\t\t\tSets flag that the screen is moving and not a tap\n\t\t*/\n    document.addEventListener(\"touchmove\", function() {\n      config.is_touch_moving = true;\n    });\n\n    /*\n\t\t\tOn touch end if it was a touch move event, set moving to\n\t\t\tfalse\n\t\t*/\n    document.addEventListener(\"touchend\", function() {\n      if (config.is_touch_moving) {\n        config.is_touch_moving = false;\n      }\n    });\n\n    /*\n\t\t\tOn time update for the audio element, update visual displays that\n\t\t\trepresent the time on either a visualized element or time display.\n\t\t*/\n    bindTimeUpdate();\n\n    /*\n\t\t\tBinds key down event handlers for matching key codes to functions.\n\t\t*/\n    bindKeyDownEventHandlers();\n\n    /*\n\t\t\tWhen the audio element has ended playing, we handle the song\n\t\t\tending. In a single song or multiple modular song instance,\n\t\t\tthis just synchronizes the visuals for time and song time\n\t\t\tvisualization, but for a playlist it determines whether\n\t\t\tit should play the next song or not.\n\t\t*/\n    bindSongEnded();\n\n    /*\n\t\t\tBinds progress event so we can see how much of the song is loaded.\n\t\t*/\n    bindProgress();\n\n    /*\n\t\t\tBinds 'amplitude-play' event handlers\n\t\t*/\n    bindPlay();\n\n    /*\n\t\t\tBinds 'amplitude-pause' event handlers.\n\t\t*/\n    bindPause();\n\n    /*\n\t\t\tBinds 'amplitude-play-pause' event handlers.\n\t\t*/\n    bindPlayPause();\n\n    /*\n\t\t\tBinds 'amplitude-stop' event handlers.\n\t\t*/\n    bindStop();\n\n    /*\n\t\t\tBinds 'amplitude-mute' event handlers.\n\t\t*/\n    bindMute();\n\n    /*\n\t\t\tBinds 'amplitude-volume-up' event handlers\n\t\t*/\n    bindVolumeUp();\n\n    /*\n\t\t\tBinds 'amplitude-volume-down' event handlers\n\t\t*/\n    bindVolumeDown();\n\n    /*\n\t\t\tBinds 'amplitude-song-slider' event handlers\n\t\t*/\n    bindSongSlider();\n\n    /*\n\t\t\tBinds 'amplitude-volume-slider' event handlers.\n\t\t*/\n    bindVolumeSlider();\n\n    /*\n\t\t\tBinds 'amplitude-next' event handlers.\n\t\t*/\n    bindNext();\n\n    /*\n\t\t\tBinds 'amplitude-prev' event handlers.\n\t\t*/\n    bindPrev();\n\n    /*\n\t\t\tBinds 'amplitude-shuffle' event handlers.\n\t\t*/\n    bindShuffle();\n\n    /*\n\t\t\tBinds 'amplitude-repeat' event handlers.\n\t\t*/\n    bindRepeat();\n\n    /*\n\t\t\tBinds 'amplitude-repeat-song' event handlers.\n\t\t*/\n    bindRepeatSong();\n\n    /*\n\t\t\tBinds 'amplitude-playback-speed' event handlers.\n\t\t*/\n    bindPlaybackSpeed();\n\n    /*\n\t\t\tBinds 'amplitude-skip-to' event handlers.\n\t\t*/\n    bindSkipTo();\n\n    /*\n\t\t\tBinds `canplaythrough` event to build the waveform.\n\t\t*/\n    bindCanPlayThrough();\n  }\n\n  /**\n   * On time update for the audio element, update visual displays that\n   * represent the time on either a visualized element or time display.\n   *\n   * @access private\n   */\n  function bindTimeUpdate() {\n    /*\n\t\t\tBind for time update\n\t\t*/\n    config.audio.removeEventListener(\"timeupdate\", TimeUpdate.handle);\n    config.audio.addEventListener(\"timeupdate\", TimeUpdate.handle);\n\n    /*\n\t\t\tBind for duration change\n\t\t*/\n    config.audio.removeEventListener(\"durationchange\", TimeUpdate.handle);\n    config.audio.addEventListener(\"durationchange\", TimeUpdate.handle);\n  }\n\n  /**\n   * On keydown, we listen to what key got pressed so we can map the key to\n   * a function. This allows the user to map pause and play, next, etc. to key\n   * presses.\n   *\n   * @access private\n   */\n  function bindKeyDownEventHandlers() {\n    document.removeEventListener(\"keydown\", KeyDown.handle);\n    document.addEventListener(\"keydown\", KeyDown.handle);\n  }\n\n  /**\n   * When the audio element has ended playing, we handle the song\n   * ending. In a single song or multiple modular song instance,\n   * this just synchronizes the visuals for time and song time\n   * visualization, but for a playlist it determines whether\n   * it should play the next song or not.\n   *\n   * @access private\n   */\n  function bindSongEnded() {\n    config.audio.removeEventListener(\"ended\", Ended.handle);\n    config.audio.addEventListener(\"ended\", Ended.handle);\n  }\n\n  /**\n   * As the audio is loaded, the progress event gets fired. We bind into this\n   * to grab the buffered percentage of the song. We can then add more elements\n   * to show the buffered amount.\n   *\n   * @access private\n   */\n  function bindProgress() {\n    config.audio.removeEventListener(\"progress\", Progress.handle);\n    config.audio.addEventListener(\"progress\", Progress.handle);\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS play buttons\n   *\n   * @access private\n   */\n  function bindPlay() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-play\n\t\t*/\n    var play_classes = document.getElementsByClassName(\"amplitude-play\");\n\n    /*\n\t\t\tIterates over all of the play classes and binds the event interaction\n\t\t\tmethod to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < play_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        play_classes[i].removeEventListener(\"touchend\", Play.handle);\n        play_classes[i].addEventListener(\"touchend\", Play.handle);\n      } else {\n        play_classes[i].removeEventListener(\"click\", Play.handle);\n        play_classes[i].addEventListener(\"click\", Play.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS pause buttons.\n   *\n   * @access private\n   */\n  function bindPause() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-pause\n\t\t*/\n    var pause_classes = document.getElementsByClassName(\"amplitude-pause\");\n\n    /*\n\t\t\tIterates over all of the pause classes and binds the event interaction\n\t\t\tmethod to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < pause_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        pause_classes[i].removeEventListener(\"touchend\", Pause.handle);\n        pause_classes[i].addEventListener(\"touchend\", Pause.handle);\n      } else {\n        pause_classes[i].removeEventListener(\"click\", Pause.handle);\n        pause_classes[i].addEventListener(\"click\", Pause.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS play pause buttons\n   *\n   * @access private\n   */\n  function bindPlayPause() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-play-pause\n\t\t*/\n    var play_pause_classes = document.getElementsByClassName(\n      \"amplitude-play-pause\"\n    );\n\n    /*\n\t\t\tIterates over all of the play/pause classes and binds the event interaction\n\t\t\tmethod to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < play_pause_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        play_pause_classes[i].removeEventListener(\"touchend\", PlayPause.handle);\n        play_pause_classes[i].addEventListener(\"touchend\", PlayPause.handle);\n      } else {\n        play_pause_classes[i].removeEventListener(\"click\", PlayPause.handle);\n        play_pause_classes[i].addEventListener(\"click\", PlayPause.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS stop buttons\n   *\n   * @access private\n   */\n  function bindStop() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-stop\n\t\t*/\n    var stop_classes = document.getElementsByClassName(\"amplitude-stop\");\n\n    /*\n\t\t\tIterates over all of the stop classes and binds the event interaction\n\t\t\tmethod to the element.  If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < stop_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        stop_classes[i].removeEventListener(\"touchend\", Stop.handle);\n        stop_classes[i].addEventListener(\"touchend\", Stop.handle);\n      } else {\n        stop_classes[i].removeEventListener(\"click\", Stop.handle);\n        stop_classes[i].addEventListener(\"click\", Stop.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS mute buttons\n   *\n   * @access private\n   */\n  function bindMute() {\n    /*\n\t\t\tGets all of the elements with the class amplitue-mute\n\t\t*/\n    var mute_classes = document.getElementsByClassName(\"amplitude-mute\");\n\n    /*\n\t\t\tIterates over all of the mute classes and binds the event interaction\n\t\t\tmethod to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < mute_classes.length; i++) {\n      /*\n\t\t\t\tWARNING: If iOS, we don't do anything because iOS does not allow the\n\t\t\t\tvolume to be adjusted through anything except the buttons on the side of\n\t\t\t\tthe device.\n\t\t\t*/\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        /*\n\t\t\t\t\tChecks for an iOS device and displays an error message if debugging\n\t\t\t\t\tis turned on.\n\t\t\t\t*/\n        if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n          Debug.writeMessage(\n            \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n          );\n        } else {\n          mute_classes[i].removeEventListener(\"touchend\", Mute.handle);\n          mute_classes[i].addEventListener(\"touchend\", Mute.handle);\n        }\n      } else {\n        mute_classes[i].removeEventListener(\"click\", Mute.handle);\n        mute_classes[i].addEventListener(\"click\", Mute.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS Volume Up Buttons\n   *\n   * @access private\n   */\n  function bindVolumeUp() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-volume-up\n\t\t*/\n    var volume_up_classes = document.getElementsByClassName(\n      \"amplitude-volume-up\"\n    );\n\n    /*\n\t\t\tIterates over all of the volume up classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < volume_up_classes.length; i++) {\n      /*\n\t\t\t\tWARNING: If iOS, we don't do anything because iOS does not allow the\n\t\t\t\tvolume to be adjusted through anything except the buttons on the side of\n\t\t\t\tthe device.\n\t\t\t*/\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        /*\n\t\t\t\t\tChecks for an iOS device and displays an error message if debugging\n\t\t\t\t\tis turned on.\n\t\t\t\t*/\n        if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n          Debug.writeMessage(\n            \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n          );\n        } else {\n          volume_up_classes[i].removeEventListener(\"touchend\", VolumeUp.handle);\n          volume_up_classes[i].addEventListener(\"touchend\", VolumeUp.handle);\n        }\n      } else {\n        volume_up_classes[i].removeEventListener(\"click\", VolumeUp.handle);\n        volume_up_classes[i].addEventListener(\"click\", VolumeUp.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS Volume Down Buttons\n   *\n   * @access private\n   */\n  function bindVolumeDown() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-volume-down\n\t\t*/\n    var volume_down_classes = document.getElementsByClassName(\n      \"amplitude-volume-down\"\n    );\n\n    /*\n\t\t\tIterates over all of the volume down classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < volume_down_classes.length; i++) {\n      /*\n\t\t\t\tWARNING: If iOS, we don't do anything because iOS does not allow the\n\t\t\t\tvolume to be adjusted through anything except the buttons on the side of\n\t\t\t\tthe device.\n\t\t\t*/\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        /*\n\t\t\t\t\tChecks for an iOS device and displays an error message if debugging\n\t\t\t\t\tis turned on.\n\t\t\t\t*/\n        if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n          Debug.writeMessage(\n            \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n          );\n        } else {\n          volume_down_classes[i].removeEventListener(\n            \"touchend\",\n            VolumeDown.handle\n          );\n          volume_down_classes[i].addEventListener(\n            \"touchend\",\n            VolumeDown.handle\n          );\n        }\n      } else {\n        volume_down_classes[i].removeEventListener(\"click\", VolumeDown.handle);\n        volume_down_classes[i].addEventListener(\"click\", VolumeDown.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds change and input events for AmplitudeJS Song Slider Inputs\n   *\n   * @access private\n   */\n  function bindSongSlider() {\n    /*\n\t\t\tGets browser so if we need to apply overrides, like we usually\n\t\t\thave to do for anything cool in IE, we can do that.\n\t\t*/\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n\n    /*\n\t\t\tGets all of the elements with the class amplitude-song-slider\n\t\t*/\n    var song_sliders = document.getElementsByClassName(\"amplitude-song-slider\");\n\n    /*\n\t\t\tIterates over all of the song slider classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is IE we listen to the change event\n\t\t\twhere if it is anything else, it's the input method.\n\t\t*/\n    for (var i = 0; i < song_sliders.length; i++) {\n      if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n        song_sliders[i].removeEventListener(\"change\", SongSlider.handle);\n        song_sliders[i].addEventListener(\"change\", SongSlider.handle);\n      } else {\n        song_sliders[i].removeEventListener(\"input\", SongSlider.handle);\n        song_sliders[i].addEventListener(\"input\", SongSlider.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds change and input events fro AmplitudeJS Volume Slider inputs\n   *\n   * @access private\n   */\n  function bindVolumeSlider() {\n    /*\n\t\t\tGets browser so if we need to apply overrides, like we usually\n\t\t\thave to do for anything cool in IE, we can do that.\n\t\t*/\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n\n    /*\n\t\t\tGets all of the elements with the class amplitude-volume-slider\n        */\n    var volume_sliders = document.getElementsByClassName(\n      \"amplitude-volume-slider\"\n    );\n\n    /*\n\t\t\tIterates over all of the volume slider classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is IE we listen to the change event\n\t\t\twhere if it is anything else, it's the input method.\n\t\t*/\n    for (var i = 0; i < volume_sliders.length; i++) {\n      /*\n\t\t\t\tWARNING: If iOS, we don't do anything because iOS does not allow the\n\t\t\t\tvolume to be adjusted through anything except the buttons on the side of\n\t\t\t\tthe device.\n\t\t\t*/\n      if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n        Debug.writeMessage(\n          \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n        );\n      } else {\n        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n          volume_sliders[i].removeEventListener(\"change\", VolumeSlider.handle);\n          volume_sliders[i].addEventListener(\"change\", VolumeSlider.handle);\n        } else {\n          volume_sliders[i].removeEventListener(\"input\", VolumeSlider.handle);\n          volume_sliders[i].addEventListener(\"input\", VolumeSlider.handle);\n        }\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events fro AmplitudeJS Next buttons\n   *\n   * @access private\n   */\n  function bindNext() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-next\n        */\n    var next_classes = document.getElementsByClassName(\"amplitude-next\");\n\n    /*\n\t\t\tIterates over all of the next classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < next_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        next_classes[i].removeEventListener(\"touchend\", Next.handle);\n        next_classes[i].addEventListener(\"touchend\", Next.handle);\n      } else {\n        next_classes[i].removeEventListener(\"click\", Next.handle);\n        next_classes[i].addEventListener(\"click\", Next.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS prev buttons.\n   *\n   * @access private\n   */\n  function bindPrev() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-prev\n\t\t*/\n    var prev_classes = document.getElementsByClassName(\"amplitude-prev\");\n\n    /*\n\t\t\tIterates over all of the prev classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < prev_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        prev_classes[i].removeEventListener(\"touchend\", Prev.handle);\n        prev_classes[i].addEventListener(\"touchend\", Prev.handle);\n      } else {\n        prev_classes[i].removeEventListener(\"click\", Prev.handle);\n        prev_classes[i].addEventListener(\"click\", Prev.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS shuffle buttons.\n   *\n   * @access private\n   */\n  function bindShuffle() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-shuffle\n\t\t*/\n    var shuffle_classes = document.getElementsByClassName(\"amplitude-shuffle\");\n\n    /*\n\t\t\tIterates over all of the shuffle classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < shuffle_classes.length; i++) {\n      /*\n\t\t\t\tSince we are re-binding everything we remove any classes that signify\n\t\t\t\ta state of the shuffle control.\n\t\t\t*/\n      shuffle_classes[i].classList.remove(\"amplitude-shuffle-on\");\n      shuffle_classes[i].classList.add(\"amplitude-shuffle-off\");\n\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        shuffle_classes[i].removeEventListener(\"touchend\", Shuffle.handle);\n        shuffle_classes[i].addEventListener(\"touchend\", Shuffle.handle);\n      } else {\n        shuffle_classes[i].removeEventListener(\"click\", Shuffle.handle);\n        shuffle_classes[i].addEventListener(\"click\", Shuffle.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS repeat buttons.\n   *\n   * @access private\n   */\n  function bindRepeat() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-repeat\n\t\t*/\n    var repeat_classes = document.getElementsByClassName(\"amplitude-repeat\");\n\n    /*\n\t\t\tIterates over all of the repeat classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < repeat_classes.length; i++) {\n      /*\n\t\t\t\tSince we are re-binding everything we remove any classes that signify\n\t\t\t\ta state of the repeat control.\n\t\t\t*/\n      repeat_classes[i].classList.remove(\"amplitude-repeat-on\");\n      repeat_classes[i].classList.add(\"amplitude-repeat-off\");\n\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        repeat_classes[i].removeEventListener(\"touchend\", Repeat.handle);\n        repeat_classes[i].addEventListener(\"touchend\", Repeat.handle);\n      } else {\n        repeat_classes[i].removeEventListener(\"click\", Repeat.handle);\n        repeat_classes[i].addEventListener(\"click\", Repeat.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS repeat song buttons.\n   *\n   * @access private\n   */\n  function bindRepeatSong() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-repeat-song\n\t\t*/\n    var repeat_song_classes = document.getElementsByClassName(\n      \"amplitude-repeat-song\"\n    );\n\n    /*\n\t\t\tIterates over all of the repeat song classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < repeat_song_classes.length; i++) {\n      /*\n\t\t\t\tSince we are re-binding everything we remove any classes that signify\n\t\t\t\ta state of the repeat control.\n\t\t\t*/\n      repeat_song_classes[i].classList.remove(\"amplitude-repeat-on\");\n      repeat_song_classes[i].classList.add(\"amplitude-repeat-off\");\n\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        repeat_song_classes[i].removeEventListener(\n          \"touchend\",\n          RepeatSong.handle\n        );\n        repeat_song_classes[i].addEventListener(\"touchend\", RepeatSong.handle);\n      } else {\n        repeat_song_classes[i].removeEventListener(\"click\", RepeatSong.handle);\n        repeat_song_classes[i].addEventListener(\"click\", RepeatSong.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS playback speed buttons\n   *\n   * @access private\n   */\n  function bindPlaybackSpeed() {\n    /*\n\t\t\tGets all of the elements with the class amplitude-playback-speed\n\t\t*/\n    var playback_speed_classes = document.getElementsByClassName(\n      \"amplitude-playback-speed\"\n    );\n\n    /*\n\t\t\tIterates over all of the playback speed classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it is click.\n\t\t*/\n    for (var i = 0; i < playback_speed_classes.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        playback_speed_classes[i].removeEventListener(\n          \"touchend\",\n          PlaybackSpeed.handle\n        );\n        playback_speed_classes[i].addEventListener(\n          \"touchend\",\n          PlaybackSpeed.handle\n        );\n      } else {\n        playback_speed_classes[i].removeEventListener(\n          \"click\",\n          PlaybackSpeed.handle\n        );\n        playback_speed_classes[i].addEventListener(\n          \"click\",\n          PlaybackSpeed.handle\n        );\n      }\n    }\n  }\n\n  /**\n   * Binds click and touchend events for AmplitudeJS skip to buttons.\n   *\n   * @access private\n   */\n  function bindSkipTo() {\n    /*\n\t\t\tGets all of the skip to elements with the class 'amplitude-skip-to'\n\t\t*/\n    var skipToClasses = document.getElementsByClassName(\"amplitude-skip-to\");\n\n    /*\n\t\t\tIterates over all of the skip to classes and binds the event interaction\n\t\t\tmethods to the element. If the browser is mobile, then the event is touchend\n\t\t\totherwise it's a click.\n\t\t*/\n    for (var i = 0; i < skipToClasses.length; i++) {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        skipToClasses[i].removeEventListener(\"touchend\", SkipTo.handle);\n        skipToClasses[i].addEventListener(\"touchend\", SkipTo.handle);\n      } else {\n        skipToClasses[i].removeEventListener(\"click\", SkipTo.handle);\n        skipToClasses[i].addEventListener(\"click\", SkipTo.handle);\n      }\n    }\n  }\n\n  /**\n   * Binds can play through to a song.\n   *\n   * @access private\n   */\n  function bindCanPlayThrough() {\n    if( WaveForm.determineIfUsingWaveforms() ){\n      config.audio.removeEventListener(\"canplaythrough\", WaveForm.build);\n      config.audio.addEventListener(\"canplaythrough\", WaveForm.build);\n    }\n  }\n\n  /*\n\t\tReturns the public facing functions.\n\t*/\n  return {\n    initialize: initialize\n  };\n})();\n\nexport default Events;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/events.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the core of AmplitudeJS\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the Shuffle Utility\n * @module utilities/Shuffle\n */\nimport Shuffle from \"../utilities/shuffler.js\";\n\n/**\n * Imports the Repeater Utility\n * @module utilities/Repeater\n */\nimport Repeater from \"../utilities/repeater.js\";\n\n/**\n * Imports the Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * Imports the Repeat Elements Visual Handler\n * @module visual/RepeatElements\n */\nimport RepeatElements from \"../visual/repeatElements.js\";\n\n/**\n * Imports the Play Pause Elements Visual Handler\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * AmplitudeJS Key Down event handler\n *\n * @module events/KeyDown\n */\nlet KeyDown = (function() {\n  /**\n   * When the keydown event is fired, we determine which function should be run\n   * based on what was passed in.\n   *\n   * HANDLER FOR: keydown\n   *\n   * @access public\n   * @prop {object} event The event object being passed in.\n   */\n  function handle(event) {\n    runKeyEvent(event.which);\n  }\n\n  /**\n   * Runs an event on key down\n   *\n   * @access public\n   * @param {number} key \t- The key code the event is bound to.\n   */\n  function runKeyEvent(key) {\n    /*\n\t\t\tChecks to see if the user bound an event to the code pressed.\n\t\t*/\n    if (config.bindings[key] != undefined) {\n      /*\n\t\t\t\tDetermine which event should be run if bound.\n\t\t\t*/\n      switch (config.bindings[key]) {\n        /*\n\t\t\t\t\tFires a play pause event.\n\t\t\t\t*/\n        case \"play_pause\":\n          runPlayPauseKeyDownEvent();\n          break;\n\n        /*\n\t\t\t\t\tFires a next event.\n\t\t\t\t*/\n        case \"next\":\n          runNextKeyDownEvent();\n          break;\n\n        /*\n\t\t\t\t\tFires a previous event.\n\t\t\t\t*/\n        case \"prev\":\n          runPrevKeyDownEvent();\n          break;\n\n        /*\n\t\t\t\t\tFires a stop event.\n\t\t\t\t*/\n        case \"stop\":\n          runStopKeyDownEvent();\n          break;\n\n        /*\n\t\t\t\t\tFires a shuffle event.\n\t\t\t\t*/\n        case \"shuffle\":\n          runShuffleKeyDownEvent();\n          break;\n\n        /*\n\t\t\t\t\tFires a repeat event.\n\t\t\t\t*/\n        case \"repeat\":\n          runRepeatKeyDownEvent();\n          break;\n      }\n    }\n  }\n\n  /**\n   * Runs the play pause method for key down.\n   */\n  function runPlayPauseKeyDownEvent() {\n    /*\n      If the song is paused, we play the song. If the song is playing,\n      we pause the song.\n    */\n    if (config.audio.paused) {\n      Core.play();\n    } else {\n      Core.pause();\n    }\n\n    /*\n      Now we sync all the elements to match the state of the audio.\n      We don't need to do any checks on new songs or changed playlists\n      in the global since it's whatever song is playing.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Runs the next method for key down.\n   */\n  function runNextKeyDownEvent() {\n    /*\n      Check to see if the current state of the player\n      is in playlist mode or not playlist mode.\n    */\n    if (config.active_playlist == \"\" || config.active_playlist == null) {\n      AudioNavigation.setNext();\n    } else {\n      AudioNavigation.setNextPlaylist(config.active_playlist);\n    }\n  }\n\n  /**\n   * Runs the previous method for key down.\n   */\n  function runPrevKeyDownEvent() {\n    /*\n      Check to see if the current playlist has been set\n      or null and set the previous song.\n    */\n    if (config.active_playlist == \"\" || config.active_playlist == null) {\n      AudioNavigation.setPrevious();\n    } else {\n      AudioNavigation.setPreviousPlaylist(config.active_playlist);\n    }\n  }\n\n  /**\n   * Runs the stop method for key down.\n   */\n  function runStopKeyDownEvent() {\n    /*\n      Syncs all of the play pause elements to pause.\n    */\n    PlayPauseElements.syncToPause();\n\n    /*\n      Stops the active song.\n    */\n    Core.stop();\n  }\n\n  /**\n   * Runs the shuffle method for key down.\n   */\n  function runShuffleKeyDownEvent() {\n    /*\n      Check to see if the current playlist has been set\n      or null and set the previous song.\n    */\n    if (config.active_playlist == \"\" || config.active_playlist == null) {\n      Shuffle.toggleShuffle();\n    } else {\n      Shuffle.toggleShufflePlaylist(config.active_playlist);\n    }\n  }\n\n  /**\n   * Run the repeat method for key down.\n   */\n  function runRepeatKeyDownEvent() {\n    /*\n      Toggles the repeat\n    */\n    Repeater.setRepeat(!config.repeat);\n\n    /*\n      Visually sync repeat\n    */\n    RepeatElements.syncRepeat();\n  }\n\n  /**\n   * Returns the public methods for the handler.\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default KeyDown;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/keydown.js","/**\n * Imports the config to use the values\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Visual Mute Elements\n * @module visual/MuteElements\n */\nimport MuteElements from \"../visual/muteElements.js\";\n\n/**\n * Imports the AmplitudeJS Visual Volume Slider Elements\n * @module visual/VolumeSliderElements\n */\nimport VolumeSliderElements from \"../visual/volumeSliderElements.js\";\n\n/**\n * Handles all events for a mute event.\n * @module events/Mute\n */\nlet Mute = (function() {\n  /**\n   * Handles an event for a mute element\n   *\n   * HANDLER FOR:       class=\"amplitude-mute\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      We don't fire this if the user is touching the screen and it's moving.\n      This could lead to a mis-fire\n    */\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t\tIf the current volume in the config is 0, we set the volume to the\n\t\t\t\tpre_mute level.  This means that the audio is already muted and\n\t\t\t\tneeds to be restored to the pre_mute level.\n\n\t\t\t\tOtherwise, we set pre_mute volume to the current volume\n\t\t\t\tand set the config volume to 0, muting the audio.\n\t\t\t*/\n      if (config.volume == 0) {\n        Core.setVolume(config.pre_mute_volume);\n      } else {\n        config.pre_mute_volume = config.volume;\n        Core.setVolume(0);\n      }\n\n      /*\n        Sync Mute Elements.\n      */\n      MuteElements.setMuted(config.volume == 0 ? true : false);\n\n      /*\n\t\t\t\tSyncs the volume sliders so the visuals align up with the functionality.\n\t\t\t\tIf the volume is at 0, then the sliders should represent that so the user\n\t\t\t\thas the right starting point.\n\t\t\t*/\n      VolumeSliderElements.sync();\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Mute;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/mute.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the AmplitudeJS Core module.\n * @module core/core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the Play Pause Elements Module.\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Imports the Callbacks Module\n * @module utilities/Callbacks\n */\nimport Callbacks from \"../utilities/callbacks.js\";\n\n/**\n * Imports the Amplitude Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * AmplitudeJS Debug Module\n * @module utilities/Debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * AmplitudeJS Next Event Handler\n *\n * @module events/Next\n */\nlet Next = (function() {\n  /**\n   * Handles an event on the next button\n   *\n   * HANDLER FOR:       class=\"amplitude-next\"\n   *\n   * GLOBAL:            class=\"amplitude-next\"\n   * PLAYLIST:          class=\"amplitude-next\" amplitude-playlist=\"playlist_key\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      We don't fire this if the user is touching the screen and it's moving.\n      This could lead to a mis-fire\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Gets the playlist attribute from the element.\n      */\n      let playlist = this.getAttribute(\"data-amplitude-playlist\");\n\n      /*\n        If the playlist is null, we handle the global next.\n      */\n      if (playlist == null) {\n        handleGlobalNext();\n      }\n\n      /*\n        If the playlist is set, we handle the playlist next.\n      */\n      if (playlist != null) {\n        handlePlaylistNext(playlist);\n      }\n    }\n  }\n\n  /**\n   * Handles an event on a global enxt button.\n   *\n   * @access private\n   */\n  function handleGlobalNext() {\n    /*\n      Check to see if the current state of the player\n      is in playlist mode or not playlist mode. If we are in playlist mode,\n      we set next on the playlist.\n    */\n    if (config.active_playlist == \"\" || config.active_playlist == null) {\n      AudioNavigation.setNext();\n    } else {\n      AudioNavigation.setNextPlaylist(config.active_playlist);\n    }\n  }\n\n  /**\n   * Handles an event on a next playlist button.\n   *\n   * @access private\n   * @prop {string} playlist  - The playlist we are handling the next for.\n   */\n  function handlePlaylistNext(playlist) {\n    /*\n      Ensure the playlist is the same as the active playlist. To get to change\n      the scope to a new playlist, you need to play that playlist.\n    */\n    if (playlist == config.active_playlist) {\n      AudioNavigation.setNextPlaylist(playlist);\n    } else {\n      Debug.writeMessage(\n        \"You can not go to the next song on a playlist that is not being played!\"\n      );\n    }\n  }\n\n  /*\n    Returns the public facing methods.\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Next;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/next.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the ConfigState module.\n * @module utilities/ConfigState\n */\nimport ConfigState from \"../utilities/configState.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Play Pause Elements\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Handles all of the pause events\n * @module events/Pause\n */\nlet Pause = (function() {\n  /**\n   * Handles an event on a pause button\n   *\n   * HANDLER FOR:       class=\"amplitude-pause\"\n   *\n   * GLOBAL:            class=\"amplitude-pause\"\n   * PLAYLIST:          class=\"amplitude-pause\" amplitude-playlist=\"playlist_key\"\n   * SONG:              class=\"amplitude-pause\" amplitude-song-index=\"song_index\"\n   * SONG IN PLAYLIST:  class=\"amplitude-pause\" amplitude-playlist=\"playlist-key\" amplitude-song-index=\"playlist_index\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If the touch is moving, we do not want to accidentally touch the play\n      pause element and fire an event.\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Gets the attribute for song index so we can check if\n        there is a need to change the song.  In some scenarios\n        there might be multiple pause classes on the page. In that\n        case it is possible the user could click a different pause\n        class.\n      */\n      let songIndexAttribute = this.getAttribute(\"data-amplitude-song-index\");\n      let playlistAttribute = this.getAttribute(\"data-amplitude-playlist\");\n\n      /*\n        Handle a global pause button.\n      */\n      if (playlistAttribute == null && songIndexAttribute == null) {\n        handleGlobalPause();\n      }\n\n      /*\n        Handle a playlist pause button.\n      */\n      if (playlistAttribute != null && songIndexAttribute == null) {\n        handlePlaylistPause(playlistAttribute);\n      }\n\n      /*\n        Handle a song pause button.\n      */\n      if (playlistAttribute == null && songIndexAttribute != null) {\n        handleSongPause(songIndexAttribute);\n      }\n\n      /*\n        Handle a song in playlist pause button.\n      */\n      if (playlistAttribute != null && songIndexAttribute != null) {\n        handleSongInPlaylistPause(playlistAttribute, songIndexAttribute);\n      }\n\n      ConfigState.setPlayerState();\n    }\n  }\n\n  /**\n   * Handles global pause button which pauses whatever song is\n   * active.\n   *\n   * @access private\n   */\n  function handleGlobalPause() {\n    /*\n      Pauses the song.\n    */\n    Core.pause();\n\n    /*\n      Sync the play pause elements.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Handles the playlist pause.\n   *\n   * @access private\n   * @param {string} playlist The playlist the pause button belongs to.\n   */\n  function handlePlaylistPause(playlist) {\n    /*\n      Checks to see if the active playlist is the same\n    */\n    if (config.active_playlist == playlist) {\n      /*\n        Pauses the song.\n      */\n      Core.pause();\n\n      /*\n        Sync the play pause elements.\n      */\n      PlayPauseElements.sync();\n    }\n  }\n\n  /**\n   * Handles the song pause.\n   *\n   * @access private\n   * @param {integer} song The song the pause button belongs to.\n   */\n  function handleSongPause(song) {\n    /*\n      Checks to see if the active playlist is null and the song matches\n      the active index.\n    */\n    if (\n      (config.active_playlist == \"\" || config.active_playlist == null) &&\n      config.active_index == song\n    ) {\n      /*\n        Pauses the song.\n      */\n      Core.pause();\n\n      /*\n        Sync the play pause elements.\n      */\n      PlayPauseElements.sync();\n    }\n  }\n\n  /**\n   * Handles the song in playlist pause.\n   *\n   * @access private\n   * @param {string} playlist The playlist the pause button belongs to.\n   * @param {integer} song The song the pause button belongs to.\n   */\n  function handleSongInPlaylistPause(playlist, song) {\n    /*\n      Checks to see if the active song matches the song and the\n      active playlist matches the playlist. This means the pause button is\n      for the song in the playlist.\n    */\n    if (\n      config.active_playlist == playlist &&\n      config.playlists[playlist].active_index == song\n    ) {\n      /*\n        Pauses the song.\n      */\n      Core.pause();\n\n      /*\n        Sync the play pause elements.\n      */\n      PlayPauseElements.sync();\n    }\n  }\n\n  /*\n    Returns the public facing elements\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Pause;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/pause.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the config state utility.\n * @module utilities/ConfigState\n */\nimport ConfigState from \"../utilities/configState.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Checks Utility\n * @module utilities/Checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * Imports the AmplitudeJS Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * Imports the AmplitudeJS Play Pause Elements\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Handles all of the play events\n * @module events/Play\n */\nlet Play = (function() {\n  /**\n   * Handles an event on a play button in Amplitude.\n   *\n   * HANDLER FOR:       class=\"amplitude-play\"\n   *\n   * GLOBAL:            class=\"amplitude-play\"\n   * PLAYLIST:          class=\"amplitude-play\" amplitude-playlist=\"playlist_key\"\n   * SONG:              class=\"amplitude-play\" amplitude-song-index=\"song_index\"\n   * SONG IN PLAYLIST:  class=\"amplitude-play\" amplitude-playlist=\"playlist-key\" amplitude-song-index=\"playlist_index\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If the touch is moving, we do not want to accidentally touch the play\n      pause element and fire an event.\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Gets the attribute for song index so we can check if\n        there is a need to change the song.  In some scenarios\n        there might be multiple play classes on the page. In that\n        case it is possible the user could click a different play\n        class and change the song.\n      */\n      let songIndexAttribute = this.getAttribute(\"data-amplitude-song-index\");\n      let playlistAttribute = this.getAttribute(\"data-amplitude-playlist\");\n\n      /*\n        Handle a global play button.\n      */\n      if (playlistAttribute == null && songIndexAttribute == null) {\n        handleGlobalPlay();\n      }\n\n      /*\n        Handle a playlist play button.\n      */\n      if (playlistAttribute != null && songIndexAttribute == null) {\n        handlePlaylistPlay(playlistAttribute);\n      }\n\n      /*\n        Handle a song play button.\n      */\n      if (playlistAttribute == null && songIndexAttribute != null) {\n        handleSongPlay(songIndexAttribute);\n      }\n\n      /*\n        Handle a song in playlist play button.\n      */\n      if (playlistAttribute != null && songIndexAttribute != null) {\n        handleSongInPlaylistPlay(playlistAttribute, songIndexAttribute);\n      }\n\n      ConfigState.setPlayerState();\n    }\n  }\n\n  /**\n   * Handles global play button which plays whatever song is\n   * active.\n   *\n   * @access private\n   */\n  function handleGlobalPlay() {\n    /*\n      Plays the song\n    */\n    Core.play();\n\n    /*\n      Sync the play pause elements.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Handle the playlist play.\n   *\n   * @access private\n   * @param {string} playlist The playlist the play button belongs to.\n   */\n  function handlePlaylistPlay(playlist) {\n    /*\n      Checks if we have a new playlist.\n    */\n    if (Checks.newPlaylist(playlist)) {\n      /*\n        Sets the active playlist to what belongs to the playlist.\n      */\n      AudioNavigation.setActivePlaylist(playlist);\n\n      /*\n        Play first song in the playlist since we just\n        switched playlists, we start from the first song.\n\n        If the user has shuffle on for the playlist, then\n        we go from the first song in the shuffle playlist array.\n      */\n      if (config.playlists[playlist].shuffle) {\n        AudioNavigation.changeSongPlaylist(\n          playlist,\n          config.playlists[playlist].shuffle_list[0],\n          0\n        );\n      } else {\n        AudioNavigation.changeSongPlaylist(\n          playlist,\n          config.playlists[playlist].songs[0],\n          0\n        );\n      }\n    }\n\n    /*\n      Plays the song.\n    */\n    Core.play();\n\n    /*\n      Syncs the play pause elements since they are dependent upon this state\n      of the player.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Handles the song play button.\n   *\n   * @access private\n   * @param {integer} song The index of the song we are playing.\n   */\n  function handleSongPlay(song) {\n    /*\n      There can be multiple playlists on the page and there can be\n      multiple songs on the page AND there can be songs in multiple\n      playlists, so we have some checking to do.\n    */\n\n    /*\n      Check to see if the playlist has changed. Essentially, if we are moving\n      out of a playlist context.\n    */\n    if (Checks.newPlaylist(null)) {\n      /*\n        We've moved out of the playlist context, so we set the active playlist\n        to null\n      */\n      AudioNavigation.setActivePlaylist(null);\n\n      /*\n        We then change the song to the index selected.\n      */\n      AudioNavigation.changeSong(config.songs[song], song);\n    }\n\n    /*\n      Check to see if the song has changed. If it has,\n      set the active song. If it was in a playlist, the\n      song wouldn't change here, since we already set the\n      song when we checked for a playlist.\n    */\n    if (Checks.newSong(null, song)) {\n      /*\n        The song selected is different, so we change the\n        song.\n      */\n      AudioNavigation.changeSong(config.songs[song], song);\n    }\n\n    /*\n      Plays the song\n    */\n    Core.play();\n\n    /*\n      Syncs the play pause elements since they are dependent upon this state\n      of the player.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Handles the song in playlist play.\n   *\n   * @access private\n   * @param {string} playlist The playlist the play button belongs to.\n   * @param {integer} song The song the play button belongs to.\n   */\n  function handleSongInPlaylistPlay(playlist, song) {\n    /*\n\t\t\tThere can be multiple playlists on the page and there can be\n\t\t\tmultiple songs on the page AND there can be songs in multiple\n\t\t\tplaylists, so we have some checking to do.\n\t\t*/\n\n    /*\n\t\t\tCheck to see if the playlist has changed. Essentially, if we are moving\n      out of a playlist context.\n\t\t*/\n    if (Checks.newPlaylist(playlist)) {\n      /*\n        We've moved out of the playlist context, so we set the active playlist\n        to null\n      */\n      AudioNavigation.setActivePlaylist(playlist);\n\n      /*\n\t\t\t\tWe then change the song to the index selected.\n\t\t\t*/\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[song],\n        song\n      );\n    }\n\n    /*\n\t\t\tCheck to see if the song has changed. If it has,\n\t\t\tset the active song. If it was in a playlist, the\n\t\t\tsong wouldn't change here, since we already set the\n\t\t\tsong when we checked for a playlist.\n\t\t*/\n    if (Checks.newSong(playlist, song)) {\n      /*\n\t\t\t\tThe song selected is different, so we change the\n\t\t\t\tsong.\n\t\t\t*/\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[song],\n        song\n      );\n    }\n\n    /*\n      Plays the song\n    */\n    Core.play();\n\n    /*\n      Now we sync all the elements to match the state of the audio.\n      We don't need to do any checks on new songs or changed playlists\n      in the global since it's whatever song is playing.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /*\n    Returns the public facing elements\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Play;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/play.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Import the config state utility.\n * @module utilities/configState\n */\nimport ConfigState from \"../utilities/configState.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Checks Utility\n * @module utilities/Checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * Imports the AmplitudeJS Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * Imports the AmplitudeJS Play Pause Elements\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Handles all of the play pause events\n * @module events/PlayPause\n */\nlet PlayPause = (function() {\n  /**\n   * Handles an event on a play/pause button\n   *\n   * HANDLER FOR:       class=\"amplitude-play-pause\"\n   *\n   * GLOBAL:            class=\"amplitude-play-pause\"\n   * PLAYLIST:          class=\"amplitude-play-pause\" amplitude-playlist=\"playlist_key\"\n   * SONG:              class=\"amplitude-play-pause\" amplitude-song-index=\"song_index\"\n   * SONG IN PLAYLIST:  class=\"amplitude-play-pause\" amplitude-playlist=\"playlist-key\" amplitude-song-index=\"playlist_index\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If the touch is moving, we do not want to accidentally touch the play\n      pause element and fire an event.\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Get the playlist and song from the element. It's alright if these\n        are null.\n      */\n      let playlist = this.getAttribute(\"data-amplitude-playlist\");\n      let song = this.getAttribute(\"data-amplitude-song-index\");\n\n      /*\n        Handle a global play pause button\n      */\n      if (playlist == null && song == null) {\n        handleGlobalPlayPause();\n      }\n\n      /*\n        Handle a playlist play pause button\n      */\n      if (playlist != null && song == null) {\n        handlePlaylistPlayPause(playlist);\n      }\n\n      /*\n        Handle a song play pause button\n      */\n      if (playlist == null && song != null) {\n        handleSongPlayPause(song);\n      }\n\n      /*\n        Handle a song in playlist play pause button\n      */\n      if (playlist != null && song != null) {\n        handleSongInPlaylistPlayPause(playlist, song);\n      }\n\n      ConfigState.setPlayerState();\n    }\n  }\n\n  /**\n   * Sets the main play pause buttons to the current state of the song.\n   * @access private\n   */\n  function handleGlobalPlayPause() {\n    /*\n      If the song is paused, we play the song. If the song is playing,\n      we pause the song.\n    */\n    if (config.audio.paused) {\n      Core.play();\n    } else {\n      Core.pause();\n    }\n\n    /*\n      Now we sync all the elements to match the state of the audio.\n      We don't need to do any checks on new songs or changed playlists\n      in the global since it's whatever song is playing.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Sets the playlist main play pause buttons to the current state of the song.\n   * @access private\n   * @param {string} playlist The playlist the main play pause button controls\n   */\n  function handlePlaylistPlayPause(playlist) {\n    /*\n      The only thing that can change when you click a playlist\n      play pause is the playlist. Main play pauses have no change\n      in song, song play pauses can change playlist and song.\n    */\n    if (Checks.newPlaylist(playlist)) {\n      /*\n        If there's a new playlist, then we set the new playlist.\n      */\n      AudioNavigation.setActivePlaylist(playlist);\n\n      /*\n        Play first song in the playlist since we just\n        switched playlists, we start from the first song.\n\n        If the user has shuffle on for the playlist, then\n        we go from the first song in the shuffle playlist array.\n      */\n      if (config.playlists[playlist].shuffle) {\n        AudioNavigation.changeSongPlaylist(\n          playlist,\n          config.playlists[playlist].shuffle_list[0],\n          0\n        );\n      } else {\n        AudioNavigation.changeSongPlaylist(\n          playlist,\n          config.playlists[playlist].songs[0],\n          0\n        );\n      }\n    }\n\n    /*\n      If the song is paused, we play the song. If the song is playing,\n      we pause the song.\n    */\n    if (config.audio.paused) {\n      Core.play();\n    } else {\n      Core.pause();\n    }\n\n    /*\n      Now we sync all the elements to match the state of the audio.\n      We don't need to do any checks on new songs or changed playlists\n      in the global since it's whatever song is playing.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Sets the playlist main play pause buttons to the current state of the song.\n   * @access private\n   * @param {string} song The index of the song being played/paused\n   */\n  function handleSongPlayPause(song) {\n    /*\n\t\t\tThere can be multiple playlists on the page and there can be\n\t\t\tmultiple songs on the page AND there can be songs in multiple\n\t\t\tplaylists, so we have some checking to do.\n\t\t*/\n\n    /*\n\t\t\tCheck to see if the playlist has changed. Essentially, if we are moving\n      out of a playlist context.\n\t\t*/\n    if (Checks.newPlaylist(null)) {\n      /*\n        We've moved out of the playlist context, so we set the active playlist\n        to null\n      */\n      AudioNavigation.setActivePlaylist(null);\n\n      /*\n\t\t\t\tWe then change the song to the index selected.\n\t\t\t*/\n      AudioNavigation.changeSong(config.songs[song], song);\n    }\n\n    /*\n\t\t\tCheck to see if the song has changed. If it has,\n\t\t\tset the active song. If it was in a playlist, the\n\t\t\tsong wouldn't change here, since we already set the\n\t\t\tsong when we checked for a playlist.\n\t\t*/\n    if (Checks.newSong(null, song)) {\n      /*\n\t\t\t\tThe song selected is different, so we change the\n\t\t\t\tsong.\n\t\t\t*/\n      AudioNavigation.changeSong(config.songs[song], song);\n    }\n\n    /*\n      If the song is paused, we play the song. If the song is playing,\n      we pause the song.\n    */\n    if (config.audio.paused) {\n      Core.play();\n    } else {\n      Core.pause();\n    }\n\n    /*\n      Now we sync all the elements to match the state of the audio.\n      We don't need to do any checks on new songs or changed playlists\n      in the global since it's whatever song is playing.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Sets the song in playlist play pause buttons to the current\n   * state of the song.\n   * @access private\n   * @param {string} playlist The playlist the song is a part of\n   * @param {number} song The index of the song being played/paused\n   */\n  function handleSongInPlaylistPlayPause(playlist, song) {\n    /*\n\t\t\tThere can be multiple playlists on the page and there can be\n\t\t\tmultiple songs on the page AND there can be songs in multiple\n\t\t\tplaylists, so we have some checking to do.\n\t\t*/\n\n    /*\n\t\t\tCheck to see if the playlist has changed. Essentially, if we are moving\n      out of a playlist context.\n\t\t*/\n    if (Checks.newPlaylist(playlist)) {\n      /*\n        We've moved out of the playlist context, so we set the active playlist\n        to null\n      */\n      AudioNavigation.setActivePlaylist(playlist);\n\n      /*\n\t\t\t\tWe then change the song to the index selected.\n\t\t\t*/\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[song],\n        song\n      );\n    }\n\n    /*\n\t\t\tCheck to see if the song has changed. If it has,\n\t\t\tset the active song. If it was in a playlist, the\n\t\t\tsong wouldn't change here, since we already set the\n\t\t\tsong when we checked for a playlist.\n\t\t*/\n    if (Checks.newSong(playlist, song)) {\n      /*\n\t\t\t\tThe song selected is different, so we change the\n\t\t\t\tsong.\n\t\t\t*/\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[song],\n        song\n      );\n    }\n\n    /*\n      If the song is paused, we play the song. If the song is playing,\n      we pause the song.\n    */\n    if (config.audio.paused) {\n      Core.play();\n    } else {\n      Core.pause();\n    }\n\n    /*\n      Now we sync all the elements to match the state of the audio.\n      We don't need to do any checks on new songs or changed playlists\n      in the global since it's whatever song is playing.\n    */\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default PlayPause;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/playPause.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the Amplitude Core module\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the Playback Speed Visual Elements\n * @module visual/PlaybackSpeedElements\n */\nimport PlaybackSpeedElements from \"../visual/playbackSpeedElements.js\";\n\n/**\n * AmplitudeJS Playback Speed Event Handler\n *\n * @module events/PlaybackSpeed\n */\nlet PlaybackSpeed = (function() {\n  /**\n   * Handles an event on the playback speed button\n   *\n   * HANDLER FOR:       class=\"amplitude-playback-speed\"\n   *\n   * @access public\n   */\n  function handle() {\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t\tWe increment the speed by .5 everytime we click\n\t\t\t\tthe button to change the playback speed. Once we are\n\t\t\t\tactively playing back at 2, we start back at 1 which\n\t\t\t\tis normal speed.\n\t\t\t*/\n      switch (config.playback_speed) {\n        case 1:\n          Core.setPlaybackSpeed(1.5);\n          break;\n        case 1.5:\n          Core.setPlaybackSpeed(2);\n          break;\n        case 2:\n          Core.setPlaybackSpeed(1);\n          break;\n      }\n\n      /*\n\t\t\t\tVisually sync the playback speed.\n\t\t\t*/\n      PlaybackSpeedElements.sync();\n    }\n  }\n\n  /*\n    Returns public facing methods\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default PlaybackSpeed;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/playbackSpeed.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the Amplitude Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * AmplitudeJS Debug Module\n * @module utilities/Debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * AmplitudeJS Prev Event Handler\n *\n * @module events/Prev\n */\nlet Prev = (function() {\n  /**\n   * Handles an event on the previous button\n   *\n   * HANDLER FOR:       class=\"amplitude-prev\"\n   *\n   * GLOBAL:            class=\"amplitude-prev\"\n   * PLAYLIST:          class=\"amplitude-prev\" amplitude-playlist=\"playlist_key\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      We don't fire this if the user is touching the screen and it's moving.\n      This could lead to a mis-fire\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Gets the playlist attribute from the element.\n      */\n      let playlist = this.getAttribute(\"data-amplitude-playlist\");\n\n      /*\n        If the playlist is null, we handle the global prev.\n      */\n      if (playlist == null) {\n        handleGlobalPrev();\n      }\n\n      /*\n        If the playlist is set, we handle the playlist prev.\n      */\n      if (playlist != null) {\n        handlePlaylistPrev(playlist);\n      }\n    }\n  }\n\n  /**\n   * Handles an event on a global previous button.\n   *\n   * @access private\n   */\n  function handleGlobalPrev() {\n    /*\n      Check to see if the current state of the player\n      is in playlist mode or not playlist mode. If we are in playlist mode,\n      we set prev on the playlist.\n    */\n    if (config.active_playlist == \"\" || config.active_playlist == null) {\n      AudioNavigation.setPrevious();\n    } else {\n      AudioNavigation.setPreviousPlaylist(config.active_playlist);\n    }\n  }\n\n  /**\n   * Handles an event on a previous playlist button.\n   *\n   * @access private\n   * @prop {string} playlist  - The playlist we are handling the previous for.\n   */\n  function handlePlaylistPrev(playlist) {\n    /*\n      Ensure the playlist is the same as the active playlist. To get to change\n      the scope to a new playlist, you need to play that playlist.\n    */\n    if (playlist == config.active_playlist) {\n      AudioNavigation.setPreviousPlaylist(config.active_playlist);\n    } else {\n      Debug.writeMessage(\n        \"You can not go to the previous song on a playlist that is not being played!\"\n      );\n    }\n  }\n\n  /*\n    Returns the public facing methods.\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Prev;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/prev.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the BufferedProgressElements visual handler\n * @module visual/bufferedProgressElements.js\n */\nimport BufferedProgressElements from \"../visual/bufferedProgressElements.js\";\n\n/**\n * AmplitudeJS Event Handler for progress\n *\n * @module events/Progress\n */\nlet Progress = (function() {\n  /**\n   * As the song is buffered, we can display the buffered percentage in\n   * a progress bar.\n   *\n   * HANDLER FOR: progress\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      Help from: http://jsbin.com/badimipi/1/edit?html,js,output\n    */\n    if (config.audio.buffered.length - 1 >= 0) {\n      let bufferedEnd = config.audio.buffered.end(\n        config.audio.buffered.length - 1\n      );\n      let duration = config.audio.duration;\n\n      /*\n        Set the computed song buffered value to the config.\n      */\n      config.buffered = (bufferedEnd / duration) * 100;\n    }\n\n    /*\n      Sync the buffered progress bars.\n    */\n    BufferedProgressElements.sync();\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Progress;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/progress.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the repeater utility module.\n * @module utilities/Repeater\n */\nimport Repeater from \"../utilities/repeater.js\";\n\n/**\n * Imports the visual repeat elements module\n * @module visual/RepeatElements\n */\nimport RepeatElements from \"../visual/repeatElements.js\";\n\n/**\n * AmplitudeJS Repeat Event Handler\n *\n * @module events/Repeat\n */\nlet Repeat = (function() {\n  /**\n   * Handles an event on the repeat button\n   *\n   * HANDLER FOR:       class=\"amplitude-repeat\"\n   *\n   * GLOBAL:            class=\"amplitude-repeat\"\n   * PLAYLIST:          class=\"amplitude-repeat\" amplitude-playlist=\"playlist_key\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      We don't fire this if the user is touching the screen and it's moving.\n      This could lead to a mis-fire\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Gets the playlist attribute from the element.\n      */\n      let playlist = this.getAttribute(\"data-amplitude-playlist\");\n\n      /*\n        If the playlist is null, we handle the global repeat.\n      */\n      if (playlist == null) {\n        handleGlobalRepeat();\n      }\n\n      /*\n        If the playlist is set, we handle the playlist repeat.\n      */\n      if (playlist != null) {\n        handlePlaylistRepeat(playlist);\n      }\n    }\n  }\n\n  /**\n   * Handles an event on a global repeat button.\n   *\n   * @access private\n   */\n  function handleGlobalRepeat() {\n    /*\n      Sets repeat to the opposite of what it was set to\n    */\n    Repeater.setRepeat(!config.repeat);\n\n    /*\n      Visually sync repeat\n    */\n    RepeatElements.syncRepeat();\n  }\n\n  /**\n   * Handles an event on a playlist repeat button.\n   *\n   * @access private\n   * @prop {string} playlist - The playlist we are handling the repeat store.\n   */\n  function handlePlaylistRepeat(playlist) {\n    /*\n      Sets repeat to the opposite of what it was set to for the playlist.\n    */\n    Repeater.setRepeatPlaylist(!config.playlists[playlist].repeat, playlist);\n\n    /*\n      Visually sync playlist repeat\n    */\n    RepeatElements.syncRepeatPlaylist(playlist);\n  }\n\n  /*\n    Returns the public facing methods.\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Repeat;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/repeat.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the repeat utility\n * @module utilities/Repeater\n */\nimport Repeater from \"../utilities/repeater.js\";\n\n/**\n * Imports the AmplitudeJS Repeat Element\n * @module visual/RepeatElements\n */\nimport RepeatElements from \"../visual/repeatElements.js\";\n\n/**\n * Handles an event on the Amplitude Repeat Song.\n *\n * @module events/RepeatSong\n */\nlet RepeatSong = (function() {\n  /**\n   * Handles an event on the repeat song button\n   *\n   * HANDLER FOR: 'amplitude-repeat-song'\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If the touch is moving, we do not want to accidentally touch the play\n      pause element and fire an event.\n    */\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t\tSets repeat song to the opposite of what it was set to\n\t\t\t*/\n      Repeater.setRepeatSong(!config.repeat_song);\n\n      /*\n\t\t\t\tVisually sync repeat song\n\t\t\t*/\n      RepeatElements.syncRepeatSong();\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default RepeatSong;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/repeatSong.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the shuffler utility\n * @module utilities/Shuffler\n */\nimport Shuffler from \"../utilities/shuffler.js\";\n\n/**\n * Imports the visual shuffle elements\n * @module visual/ShuffleElements\n */\nimport ShuffleElements from \"../visual/shuffleElements.js\";\n\n/**\n * Handles all of the shuffle events\n * @module events/Shuffle\n */\nlet Shuffle = (function() {\n  /**\n   * Handles an event on the shuffle button\n   *\n   * HANDLER FOR:       class=\"amplitude-shuffle\"\n   *\n   * GLOBAL:            class=\"amplitude-shuffle\"\n   * PLAYLIST:          class=\"amplitude-shuffle\" amplitude-playlist=\"playlist_key\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If the touch is moving, we do not want to accidentally touch the play\n      pause element and fire an event.\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Get the playlist attribute\n      */\n      let playlist = this.getAttribute(\"data-amplitude-playlist\");\n\n      /*\n\t\t\t\tCheck to see if the shuffle button belongs to a playlist\n\t\t\t*/\n      if (playlist == null) {\n        handleGlobalShuffle();\n      } else {\n        handlePlaylistShuffle(playlist);\n      }\n    }\n  }\n\n  /**\n   * Handles the event on the global shuffle button.\n   */\n  function handleGlobalShuffle() {\n    /*\n      Either shuffles or removes shuffle on the global state.\n    */\n    Shuffler.toggleShuffle();\n\n    /*\n      Visualize the shuffle state change.\n    */\n    ShuffleElements.syncMain(config.shuffle_on);\n  }\n\n  /**\n   * Handles the event on the playlist shuffle button.\n   *\n   * @param {string} playlist - The playlist string the shuffle button belongs to.\n   */\n  function handlePlaylistShuffle(playlist) {\n    /*\n      Either shuffles or removes shuffle on the playlist state.\n    */\n    Shuffler.toggleShufflePlaylist(playlist);\n\n    /*\n      Visually sync the playlist shuffle statuses.\n    */\n    ShuffleElements.syncPlaylist(playlist);\n  }\n\n  /**\n   * Returns public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Shuffle;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/shuffle.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports AmplitudeJS Debug Utility\n * @module utilities/debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * Imports the AmplitudeJS Audio Navigation Utility\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"../utilities/audioNavigation.js\";\n\n/**\n * Imports the AmplitudeJS Checks Utility\n * @module utilities/Checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS play pause elements.\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Handles the skip to event.\n *\n * @module events/SkipTo\n */\nlet SkipTo = (function() {\n  /**\n   * Handles an event on a skip to button.\n   *\n   * HANDLER FOR:       class=\"amplitude-skip-to\"\n   *\n   * GLOBAL:            class=\"amplitude-skip-to\" amplitude-song-index=\"song_index\" amplitude-location=\"seconds\"\n   * PLAYLIST:          class=\"amplitude-skip-to\" amplitude-playlist=\"playlist_key\" amplitude-song-index=\"song_index\" amplitude-location=\"seconds\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If the touch is moving, we do not want to accidentally touch the play\n      pause element and fire an event.\n    */\n    if (!config.is_touch_moving) {\n      /*\n        Extracts the needed attributes from the element.\n      */\n      let playlist = this.getAttribute(\"data-amplitude-playlist\");\n      let songIndex = this.getAttribute(\"data-amplitude-song-index\");\n      let location = this.getAttribute(\"data-amplitude-location\");\n\n      /*\n        If the location is null, write a message. We can't skip to a location\n        that is null\n      */\n      if (location == null) {\n        Debug.writeMessage(\n          \"You must add an 'data-amplitude-location' attribute in seconds to your 'amplitude-skip-to' element.\"\n        );\n      }\n\n      /*\n        If the song index is null, write a debug message. We can't skip to a location\n        of a null song.\n      */\n      if (songIndex == null) {\n        Debug.writeMessage(\n          \"You must add an 'data-amplitude-song-index' attribute to your 'amplitude-skip-to' element.\"\n        );\n      }\n\n      /*\n        If the location and song index are set, continue.\n      */\n      if (location != null && songIndex != null) {\n        /*\n  \t\t\t\tDetermines if the skip to button is in the scope of a playlist.\n  \t\t\t*/\n        if (playlist == null) {\n          handleSkipToSong(parseInt(songIndex), parseInt(location));\n        } else {\n          handleSkipToPlaylist(\n            playlist,\n            parseInt(songIndex),\n            parseInt(location)\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles the skipping to a specific song\n   *\n   * @access private\n   * @param {string} songIndex  - The index of the song being skipped to\n   * @param {number} location   - The seconds location of the song in the playlist.\n   */\n  function handleSkipToSong(songIndex, location) {\n    /*\n      Changes the song to where it's being skipped and then\n      play the song.\n    */\n    AudioNavigation.changeSong(config.songs[songIndex], songIndex);\n    Core.play();\n\n    /*\n      Syncs all of the play pause buttons now that we've skipped.\n    */\n    PlayPauseElements.syncGlobal();\n    PlayPauseElements.syncSong();\n\n    /*\n      Skip to the location in the song.\n    */\n    Core.skipToLocation(location);\n  }\n\n  /**\n   * Handles the skipping to a song that's in a playlist.\n   *\n   * @access private\n   * @param {string} playlist   - The playlist being skipped to\n   * @param {string} songIndex  - The index of the song in the playlist\n   * @param {number} location   - The seconds location of the song in the playlist.\n   */\n  function handleSkipToPlaylist(playlist, songIndex, location) {\n    /*\n      Checks if we are skipping to a new playlist\n    */\n    if (Checks.newPlaylist(playlist)) {\n      AudioNavigation.setActivePlaylist(playlist);\n    }\n\n    /*\n      Changes the song to where it's being skipped and then\n      play the song.\n    */\n    AudioNavigation.changeSongPlaylist(\n      playlist,\n      config.playlists[playlist].songs[songIndex],\n      songIndex\n    );\n    Core.play();\n\n    /*\n      Sync all of the play pause elements.\n    */\n    PlayPauseElements.syncGlobal();\n    PlayPauseElements.syncPlaylist();\n    PlayPauseElements.syncSong();\n\n    /*\n      Skip to the location in the song.\n    */\n    Core.skipToLocation(location);\n  }\n\n  /**\n   * Return public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default SkipTo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/skipTo.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the time utility\n * @module utilities/Time\n */\nimport Time from \"../utilities/time.js\";\n\n/**\n * Imports the song slider elements.\n * @module visual/SongSliderElements\n */\nimport SongSliderElements from \"../visual/songSliderElements.js\";\n\n/**\n * Handles the song slider to event.\n *\n * @module events/SongSlider\n */\nlet SongSlider = (function() {\n  /**\n   * Handles a song slider element.\n   *\n   * HANDLER FOR:       class=\"amplitude-song-slider\"\n   *\n   * GLOBAL:            class=\"amplitude-song-slider\"\n   * PLAYLIST:          class=\"amplitude-song-slider\" amplitude-playlist=\"playlist_key\"\n   * SONG:              class=\"amplitude-song-slider\" amplitude-song-index=\"song_index\"\n   * SONG IN PLAYLIST:  class=\"amplitude-song-slider\" amplitude-playlist=\"playlist_key\" amplitude-song-index=\"song_index\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n\t\t\tGets the percentage of the song we will be setting the location for.\n\t\t*/\n    let locationPercentage = this.value;\n\n    /*\n      Computes the time in seconds for the current song.\n    */\n    let computedTime = config.audio.duration * (locationPercentage / 100);\n\n    /*\n      Gets the attributes for playlist and index for the element.\n    */\n    let playlist = this.getAttribute(\"data-amplitude-playlist\");\n    let song = this.getAttribute(\"data-amplitude-song-index\");\n\n    /*\n      If no playlist or song is defined, then it's a global song slider.\n    */\n    if (playlist == null && song == null) {\n      handleGlobalSongSlider(computedTime, locationPercentage);\n    }\n\n    /*\n      If a playlist but no song is defined, then it's playlist slider.\n    */\n    if (playlist != null && song == null) {\n      handlePlaylistSongSlider(computedTime, locationPercentage, playlist);\n    }\n\n    /*\n      If no playlist but a song is defined, then it's a song slider.\n    */\n    if (playlist == null && song != null) {\n      handleSongSongSlider(computedTime, locationPercentage, song);\n    }\n\n    /*\n      If playlist and song are defined then it's a song in a playlist\n      slider.\n    */\n    if (playlist != null && song != null) {\n      handleSongInPlaylistSongSlider(\n        computedTime,\n        locationPercentage,\n        playlist,\n        song\n      );\n    }\n  }\n\n  /**\n   * Handles a change on a global audio slider\n   *\n   * @access private\n   * @param {integer} computedTime  - The time we will set the audio to.\n   * @param {float}   locationPercentage - The percent through the song.\n   */\n  function handleGlobalSongSlider(computedTime, locationPercentage) {\n    /*\n\t\t\tIf the active song is not live, set the current time and adjust the slider.\n\t\t*/\n    if (!config.active_metadata.live) {\n      Time.setCurrentTime(computedTime);\n\n      /*\n        Sync song slider elements.\n      */\n      SongSliderElements.sync(\n        locationPercentage,\n        config.active_playlist,\n        config.active_index\n      );\n    }\n  }\n\n  /**\n   * Handles a change on a playlist audio slider\n   *\n   * @access private\n   * @param {integer} computedTime  - The time we will set the audio to.\n   * @param {float}   locationPercentage - The percent through the song.\n   * @param {string}  playlist = The playlist the song slider belongs to.\n   */\n  function handlePlaylistSongSlider(\n    computedTime,\n    locationPercentage,\n    playlist\n  ) {\n    /*\n\t\t\tWe don't want to song slide a playlist that's not the\n\t\t\tactive placylist.\n\t\t*/\n    if (config.active_playlist == playlist) {\n      /*\n  \t\t\tIf the active song is not live, set the current time\n  \t\t*/\n      if (!config.active_metadata.live) {\n        Time.setCurrentTime(computedTime);\n\n        /*\n          Sync song slider elements.\n        */\n        SongSliderElements.sync(\n          locationPercentage,\n          playlist,\n          config.active_index\n        );\n      }\n    }\n  }\n\n  /**\n   * Handles a change on a song audio slider\n   *\n   * @access private\n   * @param {integer} computedTime  - The time we will set the audio to.\n   * @param {float}   locationPercentage - The percent through the song.\n   * @param {integer} songIndex = The song being navigated.\n   */\n  function handleSongSongSlider(computedTime, locationPercentage, songIndex) {\n    /*\n      We only want to move the slider if the active song is the\n      same as the song being selected.\n    */\n    if (config.active_index == songIndex && config.active_playlist == null) {\n      /*\n    \t\tIf the active song is not live, set the current time\n    \t*/\n      if (!config.active_metadata.live) {\n        Time.setCurrentTime(computedTime);\n\n        /*\n          Sync song slider elements.\n        */\n        SongSliderElements.sync(\n          locationPercentage,\n          config.active_playlist,\n          songIndex\n        );\n      }\n    }\n  }\n\n  /**\n   * Handles a change on a song audio slider\n   *\n   * @access private\n   * @param {integer} computedTime  - The time we will set the audio to.\n   * @param {float}   locationPercentage - The percent through the song.\n   * @param {integer} playlist = The playlist the song belongs to.\n   * @param {integer} songIndex = The song being navigated.\n   */\n  function handleSongInPlaylistSongSlider(\n    computedTime,\n    locationPercentage,\n    playlist,\n    songIndex\n  ) {\n    /*\n      We only want to move the slider if the active song is the\n      same as the song being selected and the active playlist is the same\n      as the playlist selected.\n    */\n    if (\n      config.playlists[playlist].active_index == songIndex &&\n      config.active_playlist == playlist\n    ) {\n      /*\n    \t\tIf the active song is not live, set the current time\n    \t*/\n      if (!config.active_metadata.live) {\n        Time.setCurrentTime(computedTime);\n\n        /*\n          Sync song slider elements.\n        */\n        SongSliderElements.sync(locationPercentage, playlist, songIndex);\n      }\n    }\n  }\n\n  /*\n    Return public facing methods\n  */\n  return {\n    handle: handle\n  };\n})();\n\nexport default SongSlider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/songSlider.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the config state module.\n * @module utilities/configState\n */\nimport ConfigState from \"../utilities/configState.js\";\n\n/**\n * Imports the AmplitudeJS Play Pause Elements\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"../visual/playPauseElements.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/Core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Handles all of the stop events\n * @module events/Stop\n */\nlet Stop = (function() {\n  /**\n   * Handles an event on a stop element.\n   *\n   * HANDLER FOR:       class=\"amplitude-stop\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      If touch is not moving, we run. We don't want to accidentally press\n      stop if touch is moving.\n    */\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t\tSets all of the play/pause buttons to pause\n\t\t\t*/\n      PlayPauseElements.syncToPause();\n\n      /*\n\t\t\t\tStops the active song.\n\t\t\t*/\n      Core.stop();\n\n      /*\n        Set the state of the player.\n      */\n      ConfigState.setPlayerState();\n    }\n  }\n\n  /**\n   * Returns public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default Stop;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/stop.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the Buffered Progress Elements visual class\n * @module visual/bufferedProgressElements\n */\nimport BufferedProgressElements from \"../visual/bufferedProgressElements.js\";\n\n/**\n * Imports the Time Elements visual class.\n * @module visual/timeElements\n */\nimport TimeElements from \"../visual/timeElements.js\";\n\n/**\n * Imports the Song Slider Elements visual class.\n * @module visual/songSliderElements\n */\nimport SongSliderElements from \"../visual/songSliderElements.js\";\n\n/**\n * Imports the Song Played Progress Elements visual class.\n * @module visual/songPlayedProgressElements\n */\nimport SongPlayedProgressElements from \"../visual/songPlayedProgressElements.js\";\n\n/**\n * Imports the Time utility class\n * @module utilities/Time\n */\nimport Time from \"../utilities/time.js\";\n\n/**\n * Imports the Callback utility class\n * @module utilities/Callbacks\n */\nimport Callbacks from \"../utilities/callbacks.js\";\n\n/**\n * AmplitudeJS Event Handler for Time Update\n *\n * @module events/TimeUpdate\n */\nlet TimeUpdate = (function() {\n  /**\n   * When the time updates on the active song, we sync the current time displays\n   *\n   * HANDLER FOR: timeupdate\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      Computes the buffered time.\n    */\n    computeBufferedTime();\n\n    /*\n      Sync the buffered progress elements.\n    */\n    BufferedProgressElements.sync();\n\n    /*\n      Updates the current time information.\n    */\n    updateTimeInformation();\n\n    /*\n      Run time callbacks\n    */\n    runTimeCallbacks();\n  }\n\n  /**\n   * Computes the buffered time\n   */\n  function computeBufferedTime() {\n    /*\n      Help from: http://jsbin.com/badimipi/1/edit?html,js,output\n    */\n    if (config.audio.buffered.length - 1 >= 0) {\n      let bufferedEnd = config.audio.buffered.end(\n        config.audio.buffered.length - 1\n      );\n      let duration = config.audio.duration;\n\n      config.buffered = (bufferedEnd / duration) * 100;\n    }\n  }\n\n  /**\n   * Updates the current time information.\n   * @access private\n   */\n  function updateTimeInformation() {\n    /*\n      If the current song is not live, then\n      we can update the time information. Otherwise the\n      current time updates wouldn't mean much since the time\n      is infinite.\n    */\n    if (!config.active_metadata.live) {\n      /*\n        Compute the current time\n      */\n      let currentTime = Time.computeCurrentTimes();\n\n      /*\n        Compute the song completion percentage\n      */\n      let songCompletionPercentage = Time.computeSongCompletionPercentage();\n\n      /*\n        Computes the song duration\n      */\n      let songDuration = Time.computeSongDuration();\n\n      /*\n        Sync the current time elements with the current\n        location of the song and the song duration elements with\n        the duration of the song.\n      */\n      TimeElements.syncCurrentTimes(currentTime);\n\n      /*\n        Sync the song slider elements.\n      */\n      SongSliderElements.sync(\n        songCompletionPercentage,\n        config.active_playlist,\n        config.active_index\n      );\n\n      /*\n        Sync the song played progress elements.\n      */\n      SongPlayedProgressElements.sync(songCompletionPercentage);\n\n      /*\n        Sync the duration time elements.\n      */\n      TimeElements.syncDurationTimes(currentTime, songDuration);\n    }\n  }\n\n  /**\n   * Runs a callback at a certain time in the song.\n   */\n  function runTimeCallbacks() {\n    /*\n      Gets the current seconds into the song.\n    */\n    let currentSeconds = Math.floor(config.audio.currentTime);\n\n    /*\n      Checks to see if there is a callback at the certain seconds into the song.\n    */\n    if (\n      config.active_metadata.time_callbacks != undefined &&\n      config.active_metadata.time_callbacks[currentSeconds] != undefined\n    ) {\n      /*\n        Checks to see if the callback has been run. Since the time updates more than\n        one second, we don't want the callback to run X times.\n      */\n      if (!config.active_metadata.time_callbacks[currentSeconds].run) {\n        config.active_metadata.time_callbacks[currentSeconds].run = true;\n        config.active_metadata.time_callbacks[currentSeconds]();\n      }\n    } else {\n      /*\n        Iterate over all of the callbacks for a song. If the song has one, we flag\n        the run as false. This occurs because we have passed the active second for\n        the callback, so we flag it as not run. It will either run again if the user\n        seeks back or not run in the future.\n      */\n      for (var seconds in config.active_metadata.time_callbacks) {\n        if (config.active_metadata.time_callbacks.hasOwnProperty(seconds)) {\n          config.active_metadata.time_callbacks[seconds].run = false;\n        }\n      }\n    }\n  }\n  /**\n   * Returns public functions\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default TimeUpdate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/timeUpdate.js","/**\n * Imports the config to use the values\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Visual Mute Elements\n * @module visual/MuteElements\n */\nimport MuteElements from \"../visual/muteElements.js\";\n\n/**\n * Imports the AmplitudeJS Visual Volume Slider Elements\n * @module visual/VolumeSliderElements\n */\nimport VolumeSliderElements from \"../visual/volumeSliderElements.js\";\n\n/**\n * Handles all events for a volume down event.\n * @module events/VolumeDown\n */\nlet VolumeDown = (function() {\n  /**\n   * Handles a click on a volume down element.\n   *\n   * HANDLER FOR:       class=\"amplitude-volume-down\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      We don't fire this if the user is touching the screen and it's moving.\n      This could lead to a mis-fire\n    */\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t\tThe volume range is from 0 to 1 for an audio element. We make this\n\t\t\t\ta base of 100 for ease of working with.\n\n\t\t\t\tIf the new value is less than 100, we use the new calculated\n\t\t\t\tvalue which gets converted to the proper unit for the audio element.\n\n\t\t\t\tIf the new value is greater than 100, we set the volume to 1 which\n\t\t\t\tis the max for the audio element.\n\t\t\t*/\n      let volume = null;\n\n      if (config.volume - config.volume_increment > 0) {\n        volume = config.volume - config.volume_increment;\n      } else {\n        volume = 0;\n      }\n\n      /*\n\t\t\t\tCalls the core function to set the volume to the computed value\n\t\t\t\tbased on the user's intent.\n\t\t\t*/\n      Core.setVolume(volume);\n\n      /*\n        Sync Mute Elements.\n      */\n      MuteElements.setMuted(config.volume == 0 ? true : false);\n\n      /*\n        Sync Volume Slider Elements\n      */\n      VolumeSliderElements.sync();\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default VolumeDown;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/volumeDown.js","/**\n * Imports the config to use the values\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Visual Mute Elements\n * @module visual/MuteElements\n */\nimport MuteElements from \"../visual/muteElements.js\";\n\n/**\n * Imports the AmplitudeJS Visual Volume Slider Elements\n * @module visual/VolumeSliderElements\n */\nimport VolumeSliderElements from \"../visual/volumeSliderElements.js\";\n\n/**\n * Handles all events for a volume up event.\n * @module events/VolumeSlider\n */\nlet VolumeSlider = (function() {\n  /**\n   * Handles a change on the volume slider\n   *\n   * HANDLER FOR:       class=\"amplitude-volume-slider\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n\t\t\tCalls the core function to set the volume to the computed value\n\t\t\tbased on the user's intent.\n\t\t*/\n    Core.setVolume(this.value);\n\n    /*\n      Sync Mute Elements.\n    */\n    MuteElements.setMuted(config.volume == 0 ? true : false);\n\n    /*\n\t\t\tSync the volume slider locations\n\t\t*/\n    VolumeSliderElements.sync();\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default VolumeSlider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/volumeSlider.js","/**\n * Imports the config to use the values\n */\nimport config from \"../config.js\";\n\n/**\n * Imports the AmplitudeJS Core Methods\n * @module core/core\n */\nimport Core from \"../core/core.js\";\n\n/**\n * Imports the AmplitudeJS Visual Mute Elements\n * @module visual/MuteElements\n */\nimport MuteElements from \"../visual/muteElements.js\";\n\n/**\n * Imports the AmplitudeJS Visual Volume Slider Elements\n * @module visual/VolumeSliderElements\n */\nimport VolumeSliderElements from \"../visual/volumeSliderElements.js\";\n\n/**\n * Handles all events for a volume up event.\n * @module events/VolumeUp\n */\nlet VolumeUp = (function() {\n  /**\n   * Handles a click on a volume up element.\n   *\n   * HANDLER FOR:       class=\"amplitude-volume-up\"\n   *\n   * @access public\n   */\n  function handle() {\n    /*\n      We don't fire this if the user is touching the screen and it's moving.\n      This could lead to a mis-fire\n    */\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t\tThe volume range is from 0 to 1 for an audio element. We make this\n\t\t\t\ta base of 100 for ease of working with.\n\n\t\t\t\tIf the new value is less than 100, we use the new calculated\n\t\t\t\tvalue which gets converted to the proper unit for the audio element.\n\n\t\t\t\tIf the new value is greater than 100, we set the volume to 1 which\n\t\t\t\tis the max for the audio element.\n\t\t\t*/\n      let volume = null;\n\n      if (config.volume + config.volume_increment <= 100) {\n        volume = config.volume + config.volume_increment;\n      } else {\n        volume = 100;\n      }\n\n      /*\n\t\t\t\tCalls the core function to set the volume to the computed value\n\t\t\t\tbased on the user's intent.\n\t\t\t*/\n      Core.setVolume(volume);\n\n      /*\n        Sync Mute Elements.\n      */\n      MuteElements.setMuted(config.volume == 0 ? true : false);\n\n      /*\n        Sync Volume Slider Elements\n      */\n      VolumeSliderElements.sync();\n    }\n  }\n\n  /**\n   * Returns the public facing methods\n   */\n  return {\n    handle: handle\n  };\n})();\n\nexport default VolumeUp;\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/volumeUp.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS FX Module. Helps with configuring and setting up visualizations\n * and any other features of the Web Audio API that Amplitude takes advantage\n * of.\n *\n * @module fx/FX\n */\nlet Fx = (function() {\n  /**\n   * Configures the Web Audio API to work with AmplitudeJS\n   */\n  function configureWebAudioAPI() {\n    /*\n\t\t\tGets the context for the browser. If this is null, the Web Audio\n\t\t\tAPI is unavailable.\n\t\t*/\n    let browserContext =\n      window.AudioContext ||\n      window.webkitAudioContext ||\n      window.mozAudioContext ||\n      window.oAudioContext ||\n      window.msAudioContext;\n\n    /*\n\t\t\tIf we have a context, the Web Audio API is available and we can continue,\n\t\t\totherwise, we alert the user if they have debug turned on.\n\t\t*/\n    if (browserContext) {\n      /*\n\t\t\t\tWeb Audio API is available, set the context in our config.\n\t\t\t*/\n      config.context = new browserContext();\n      \n      /*\n\t\t\t\tCreate an analyzer that we will use in the context.\n\t\t\t*/\n      config.analyser = config.context.createAnalyser();\n\n      /*\n\t\t\t\tSet cross origin to anonymous so we have a better chance of being able\n\t\t\t\tto use the power of the Web Audio API.\n\t\t\t*/\n      config.audio.crossOrigin = \"anonymous\";\n      \n      /*\n\t\t\t\tBind the source to the Javascript Audio Element.\n\t\t\t*/\n      config.source = config.context.createMediaElementSource(config.audio);\n\n      /*\n\t\t\t\tConnect the analyser to the source\n\t\t\t*/\n      config.source.connect(config.analyser);\n\n      /*\n\t\t\t\tConnect the context destination to the analyser.\n\t\t\t*/\n      config.analyser.connect(config.context.destination);\n    } else {\n      AmplitudeHelpers.writeDebugMessage(\n        \"Web Audio API is unavailable! We will set any of your visualizations with your back up definition!\"\n      );\n    }\n  }\n\n  /**\n   * Determines if the web audio API is available or not.\n   */\n  function webAudioAPIAvailable() {\n    /*\n\t\t\tGets the context for the browser. If this is null, the Web Audio\n\t\t\tAPI is unavailable.\n\t\t*/\n    let browserContext =\n      window.AudioContext ||\n      window.webkitAudioContext ||\n      window.mozAudioContext ||\n      window.oAudioContext ||\n      window.msAudioContext;\n    config.web_audio_api_available = false;\n\n    /*\n\t\t\tDetermines if the Web Audio API is available or not.\n\t\t*/\n    if (browserContext) {\n      /*\n\t\t\t\tSet the flag in the config that the Web Audio API is available\n\t\t\t*/\n      config.web_audio_api_available = true;\n      return true;\n    } else {\n      /*\n\t\t\t\tSet the flag in the config that the Web Audio API is not available\n\t\t\t*/\n      config.web_audio_api_available = false;\n      return false;\n    }\n  }\n\n  /**\n   * Determines if the user is using any of the web audio API features.\n   */\n  function determineUsingAnyFX(){\n    let waveforms = document.querySelectorAll(\".amplitude-wave-form\");\n    let visualizationElements = document.querySelectorAll(\n      \".amplitude-visualization\"\n    );\n\n    if( waveforms.length > 0 || visualizationElements.length > 0 ){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  /*\n\t\tReturns the publicly accessible methods\n\t*/\n  return {\n    configureWebAudioAPI: configureWebAudioAPI,\n    webAudioAPIAvailable: webAudioAPIAvailable,\n    determineUsingAnyFX: determineUsingAnyFX\n  };\n})();\n\nexport default Fx;\n\n\n\n// WEBPACK FOOTER //\n// ./src/fx/fx.js","/**\n * @name \t\tAmplitude.js\n * @author \tDan Pastori (521 Dimensions) <opensource@521dimensions.com>\n */\n/**\n * AmplitudeJS Initializer Module\n *\n * @module init/AmplitudeInitializer\n */\nimport Initializer from \"./init/init.js\";\n\n/****************************************************\n * Config\n ****************************************************/\n/**\n * Imports the config module\n * @module config\n */\nimport config from \"./config.js\";\n\n/****************************************************\n * Core\n ****************************************************/\n/**\n * AmplitudeJS Core Module\n *\n * @module core/Core\n */\nimport Core from \"./core/core.js\";\n\n/****************************************************\n * Utilities\n ****************************************************/\n/**\n * Shuffler Module\n * @module utilities/Shuffler\n */\nimport Shuffler from \"./utilities/shuffler.js\";\n\n/**\n * Imports the config state module.\n * @module ConfigState\n */\nimport ConfigState from \"./utilities/configState.js\";\n\n/**\n * Imports the audio navigation\n * @module utilities/AudioNavigation\n */\nimport AudioNavigation from \"./utilities/audioNavigation.js\";\n\n/**\n * Repeater Module\n *\n * @module utilities/Repeater\n */\nimport Repeater from \"./utilities/repeater.js\";\n\n/**\n * Imports the checks\n * @module utilities/Checks\n */\nimport Checks from \"./utilities/checks.js\";\n\n/****************************************************\n * FX Modules\n ****************************************************/\n/**\n * Imports the visualizations module\n * @module fx/Visualizations\n */\nimport Visualizations from \"./fx/visualizations.js\";\n\n/****************************************************\n * Elements\n ****************************************************/\n/**\n * Visual Shuffle Elements\n * @module visual/ShuffleElements\n */\nimport ShuffleElements from \"./visual/shuffleElements.js\";\n\n/**\n * Visual Repeat Elements\n * @module visual/RepeatElements\n */\nimport RepeatElements from \"./visual/repeatElements.js\";\n\n/**\n * Song Slider Elements\n * @module visual/SongSliderElements\n */\nimport SongSliderElements from \"./visual/songSliderElements.js\";\n\n/**\n * Song Played Progress Elements\n * @module visual/SongPlayedProgressElements\n */\nimport SongPlayedProgressElements from \"./visual/songPlayedProgressElements.js\";\n\n/**\n * Time Elements\n * @module visual/TimeElements\n */\nimport TimeElements from \"./visual/timeElements.js\";\n\n/**\n * Play Pause Elements\n * @module visual/PlayPauseElements\n */\nimport PlayPauseElements from \"./visual/playPauseElements.js\";\n\n/**\n * Meta Data Elements\n * @module visual/MetaDataElements\n */\nimport MetaDataElements from \"./visual/metaDataElements.js\";\n\n/** \n * Playback Speed Elements\n * @module visual/PlaybackSpeedElements\n */\nimport PlaybackSpeedElements from \"./visual/playbackSpeedElements.js\";\n\nimport Debug from \"./utilities/debug.js\";\n\nimport SoundCloud from \"./soundcloud/soundcloud.js\";\n\n/**\n * Amplitude should just be an interface to the public functions.\n * Everything else should be handled by other objects\n *\n * @module Amplitude\n */\nlet Amplitude = (function() {\n  /**\n   * The main init function.  The user will call this through\n   * Amplitude.init({}) and pass in their settings.\n   *\n   * Public Accessor: Amplitude.init( user_config_json );\n   *\n   * @access public\n   * @param {object} userConfig \t- A JSON object of user defined values that helps configure and initialize AmplitudeJS.\n   */\n  function init(userConfig) {\n    Initializer.initialize(userConfig);\n  }\n\n  /**\n   * Returns the current config for AmplitudeJS\n   */\n  function getConfig() {\n    return config;\n  }\n\n  /**\n   * Binds new elements that were added to the page.\n   *\n   * Public Accessor: Amplitude.bindNewElements()\n   *\n   * @access public\n   */\n  function bindNewElements() {\n    Initializer.rebindDisplay();\n  }\n\n  /**\n   * Returns the active playlist.\n   *\n   * Public Accessor: Amplitude.getActivePlaylist()\n   *\n   * @access public\n   */\n  function getActivePlaylist() {\n    return config.active_playlist;\n  }\n\n  /**\n   * Returns the current playback speed.\n   *\n   * Public Accessor: Amplitude.getPlaybackSpeed()\n   *\n   * @access public\n   */\n  function getPlaybackSpeed() {\n    return config.playback_speed;\n  }\n\n  /**\n   * Sets the playback speed\n   * \n   * Public Accessor: Amplitude.setPlaybackSpeed( speed )\n   * \n   * @access public\n   */\n  function setPlaybackSpeed( speed ) {\n    /*\n      Increments are set in .5 We only accept values\n      1, 1.5, 2\n\n      1 -> Regular Speed\n      1.5 -> 50% faster\n      2 -> Twice as fast\n    */\n    Core.setPlaybackSpeed( speed );\n\n    /*\n      Visually sync the playback speed.\n    */\n    PlaybackSpeedElements.sync();\n  }\n\n  /**\n   * Gets the repeat state of the player.\n   *\n   * Public Accessor: Amplitude.getRepeat()\n   *\n   * @access public\n   */\n  function getRepeat() {\n    return config.repeat;\n  }\n\n  /**\n   * Gets the repeat state for a playlist\n   *\n   * Public Accessor: Amplitude.getRepeatPlaylist()\n   *\n   * @access public\n   */\n  function getRepeatPlaylist(playlistKey) {\n    return config.playlists[playlistKey].repeat;\n  }\n\n  /**\n   * Returns the shuffle state of the player.\n   *\n   * Public Accessor: Amplitude.getShuffle()\n   *\n   * @access public\n   */\n  function getShuffle() {\n    return config.shuffle_on;\n  }\n\n  /**\n   * Returns the shuffle state of the playlist.\n   *\n   * Public Accessor: Amplitude.getShufflePlaylist( playlist )\n   *\n   * @access public\n   * @param {string} playlist \t- The key representing the playlist ID to see if it's shuffled or not.\n   */\n  function getShufflePlaylist(playlist) {\n    return config.playlists[playlist].shuffle;\n  }\n\n  /**\n   * Sets the shuffle state for the player.\n   *\n   * Public Accessor: Amplitude.setShuffle()\n   *\n   * @param {boolean} shuffle  \t- True when we are shuffling the songs, false when we turn off shuffle.\n   *\n   * @access public\n   */\n  function setShuffle(shuffle) {\n    Shuffler.setShuffle(shuffle);\n\n    ShuffleElements.syncMain();\n  }\n\n  /**\n   * Sets the shuffle state for the playlist\n   *\n   * Public Accessor: Amplitude.setShufflePlaylist( playlist )\n   *\n   * @access public\n   * @param {string} playlist \t- The key representing the playlist ID to to shuffle the playlist.\n   * @param {boolean} shuffle \t- True when we are shuffling the playlist, false when we turn off shuffle.\n   */\n  function setShufflePlaylist(playlist, shuffle) {\n    Shuffler.setShufflePlaylist(playlist, shuffle);\n\n    ShuffleElements.syncMain();\n    ShuffleElements.syncPlaylist(playlist);\n  }\n\n  /**\n   * Sets the repeat state for the player.\n   *\n   * Public Accessor: Amplitude.setRepeat()\n   *\n   * @access public\n   * @param {boolean} repeatState \t- The state you want the repeat song to be in.\n   */\n  function setRepeat(repeatState) {\n    Repeater.setRepeat(repeatState);\n    RepeatElements.syncRepeat();\n  }\n\n  /**\n   * Sets the repeat state for a playlist.\n   *\n   * Public Accessor: Amplitude.setRepeatPlaylist( playlistKey )\n   *\n   * @access public\n   * @param {string} playlist \t- The key representing the playlist ID to to shuffle the playlist.\n   * @param {boolean} repeatState - The state you want the repeat playlist to be in.\n   */\n  function setRepeatPlaylist(playlist, repeatState) {\n    Repeater.setRepeatPlaylist(repeatState, playlist);\n    RepeatElements.syncRepeatPlaylist(playlist);\n  }\n\n  /**\n   * Sets the repeat state for the song.\n   *\n   * Public Accessor: Amplitude.setRepeatSong()\n   *\n   * @access public\n   * @param {boolean} repeatState \t- The state you want the repeat song status to be in.\n   */\n  function setRepeatSong(repeatState) {\n    if (!config.is_touch_moving) {\n      /*\n\t\t\t Sets repeat to the opposite of what it was set to\n\t\t\t*/\n      Repeater.setRepeatSong(!config.repeat_song);\n\n      /*\n\t\t\t\tVisually sync repeat song\n\t\t\t*/\n      RepeatElements.syncRepeatSong();\n    }\n  }\n\n  /**\n   * Gets the default album art for the player\n   *\n   * Public Accessor: Amplitude.getDefaultAlbumArt()\n   *\n   * @access public\n   */\n  function getDefaultAlbumArt() {\n    return config.default_album_art;\n  }\n\n  /**\n   * Gets the default playlist art for the playlists\n   *\n   * Public Accessor: Amplitude.getDefaultPlaylistArt()\n   *\n   * @access public\n   */\n  function getDefaultPlaylistArt(){\n    return config.default_playlist_art;\n  }\n\n  /**\n   * Sets the default album art for the player\n   *\n   * Public Accessor: Amplitude.setDefaultAlbumArt( url )\n   *\n   * @access public\n   * @param {string} url \t- A string representing the URL of the new default album art.\n   */\n  function setDefaultAlbumArt(url) {\n    config.default_album_art = url;\n  }\n\n  /**\n   * Sets the default playlist art for the player\n   *\n   * Public Accessor: Amplitude.setDefaultPlaylistArt( url )\n   *\n   * @access public\n   * @param {string} url - A string representing the URL of the new default playlist art.\n   */\n   function setDefaultPlaylistArt(url){\n     config.default_plalist_art = url;\n   }\n\n  /**\n   * Allows the user to get the percentage of the song played.\n   *\n   * Public Accessor: Amplitude.getSongPlayedPercentage();\n   *\n   * @access public\n   */\n  function getSongPlayedPercentage() {\n    /*\n\t\t\tReturns the percentage of the song played.\n\t\t*/\n    return (config.audio.currentTime / config.audio.duration) * 100;\n  }\n\n  /**\n   * Allows the user to get the amount of seconds the song has played.\n   *\n   * Public Accessor: Amplitude.getSongPlayed();\n   *\n   * @access public\n   */\n  function getSongPlayedSeconds() {\n    /*\n\t\t\tReturns the amount of seconds the song has played.\n\t\t*/\n    return config.audio.currentTime;\n  }\n\n  /**\n   * Allows the user to get the duration of the current song\n   *\n   * Public Accessor: Amplitude.getSongPlayed();\n   *\n   * @access public\n   */\n  function getSongDuration() {\n    /*\n\t\t\tReturns the duration of the current song\n\t\t*/\n    return config.audio.duration;\n  }\n\n  /**\n   * Allows the user to set how far into the song they want to be. This is\n   * helpful for implementing custom range sliders. Only works on the current song.\n   *\n   * Public Accessor: Amplitude.setSongPlayedPercentage( float );\n   *\n   * @access public\n   * @param {number} percentage \t- The percentage of the song played\n   */\n  function setSongPlayedPercentage(percentage) {\n    /*\n\t\t\tEnsures the percentage is a number and is between 0 and 100.\n\t\t*/\n    if (typeof percentage == \"number\" && (percentage > 0 && percentage < 100)) {\n      /*\n\t\t\t\t\tSets the current time of the song to the percentage.\n\t\t\t\t*/\n      config.audio.currentTime = config.audio.duration * (percentage / 100);\n    }\n  }\n\n  /**\n   * Allows the user to turn on debugging.\n   *\n   * Public Accessor: Amplitude.setDebug( bool );\n   *\n   * @access public\n   * @param {boolean} state \t\t- Turns debugging on and off.\n   */\n  function setDebug(state) {\n    /*\n\t\t\tSets the global config debug on or off.\n\t\t*/\n    config.debug = state;\n  }\n\n  /**\n   * Returns the active song meta data for the user to do what is\n   * needed.\n   *\n   * Public Accessor: Amplitude.getActiveSongMetadata();\n   *\n   * @access public\n   * @returns {object} JSON Object with the active song information\n   */\n  function getActiveSongMetadata() {\n    return config.active_metadata;\n  }\n\n  /**\n   * Returns the active playlist meta data for the for the user to use.\n   *\n   * Public Accessor: Amplitude.getActivePlaylistMetadata();\n   *\n   * @access public\n   * @returns {object} JSON representation for the active playlist\n   */\n  function getActivePlaylistMetadata() {\n    return config.playlists[config.active_playlist];\n  }\n\n  /**\n   * Returns a song in the songs array at that index\n   *\n   * Public Accessor: Amplitude.getSongAtIndex( song_index )\n   *\n   * @access public\n   * @param {number} index \t- The integer for the index of the song in the songs array.\n   * @returns {object} JSON representation for the song at a specific index.\n   */\n  function getSongAtIndex(index) {\n    return config.songs[index];\n  }\n\n  /**\n   * Returns a song at a playlist index\n   *\n   * Public Accessor: Amplitude.getSongAtPlaylistIndex( playlist, index\n   *\n   * @access public\n   * @param {number} index \t\t\t- The integer for the index of the song in the playlist.\n   * @param {string} playlist\t\t- The key of the playlist we are getting the song at the index for\n   * @returns {object} JSON representation for the song at a specific index.\n   */\n  function getSongAtPlaylistIndex(playlist, index) {\n    let song = config.playlists[playlist].songs[index];\n\n    return song;\n  }\n\n  /**\n   * Adds a song to the end of the config array.  This will allow Amplitude\n   * to play the song in a playlist type setting.\n   *\n   * Public Accessor: Amplitude.addSong( song_json )\n   *\n   * @access public\n   * @param {object} song \t- JSON representation of a song.\n   * @returns {number} New index of the song.\n   */\n  function addSong(song) {\n    /*\n\t\t\tEnsures we have a songs array to push to.\n\t\t*/\n    if (config.songs == undefined) {\n      config.songs = [];\n    }\n\n    config.songs.push(song);\n\n    if (config.shuffle_on) {\n      config.shuffle_list.push(song);\n    }\n\n    if (SoundCloud.isSoundCloudURL(song.url)) {\n      SoundCloud.resolveIndividualStreamableURL(\n        song.url,\n        null,\n        config.songs.length - 1,\n        config.shuffle_on\n      );\n    }\n\n    return config.songs.length - 1;\n  }\n\n  /**\n   * Adds a song to a playlist. This will allow Amplitude to play the song in the\n   * playlist\n   *\n   * Public Accessor: Amplitude.addSongToPlaylist( song_json, playlist_key )\n   *\n   * @access public\n   * @param {object} song \t\t\t- JSON representation of a song.\n   * @param {string} playlist\t\t- Playlist we are adding the song to.\n   * @returns {mixed} New index of song in playlist or null if no playlist exists\n   */\n  function addSongToPlaylist(song, playlist) {\n    if (config.playlists[playlist] != undefined) {\n      config.playlists[playlist].songs.push(song);\n\n      if (config.playlists[playlist].shuffle) {\n        config.playlists[playlist].shuffle_list.push(song);\n      }\n\n      if (SoundCloud.isSoundCloudURL(song.url)) {\n        SoundCloud.resolveIndividualStreamableURL(\n          song.url,\n          playlist,\n          config.playlists[playlist].songs.length - 1,\n          config.playlists[playlist].shuffle\n        );\n      }\n\n      return config.playlists[playlist].songs.length - 1;\n    } else {\n      Debug.writeMessage(\"Playlist doesn't exist!\");\n      return null;\n    }\n  }\n\n  /**\n   * Adds a playlist to Amplitude.\n   *\n   * @param {string} key  - The key of the playlist we are adding.\n   * @param {object} data - The data relating to the playlist\n   * @param {array} songs - The songs to add to the playlist\n   */\n  function addPlaylist(key, data, songs) {\n    /*\n      Ensures the playlist is not already defined.\n    */\n    if (config.playlists[key] == undefined) {\n      /*\n        Initialize the new playlist object.\n      */\n      config.playlists[key] = {};\n\n      /*\n        Define the ignored keys that we don't want to copy over.\n      */\n      let ignoredKeys = [\"repeat\", \"shuffle\", \"shuffle_list\", \"songs\", \"src\"];\n\n      /*\n        Iterate over all of the keys defined by the user and\n        set them on the playlist.\n      */\n      for (let dataKey in data) {\n        if (ignoredKeys.indexOf(dataKey) < 0) {\n          config.playlists[key][dataKey] = data[dataKey];\n        }\n      }\n\n      /*\n        Initialize the default parameters for the playlist and set the songs.\n      */\n      config.playlists[key].songs = songs;\n      config.playlists[key].active_index = null;\n      config.playlists[key].repeat = false;\n      config.playlists[key].shuffle = false;\n      config.playlists[key].shuffle_list = [];\n\n      return config.playlists[key];\n    } else {\n      Debug.writeMessage(\"A playlist already exists with that key!\");\n      return null;\n    }\n  }\n\n  /**\n   * Removes a song from the song array\n   *\n   * Public Accessor: Amplitude.removeSong( index )\n   *\n   * @access public\n   * @param {integer} index - Index of the song being removed\n   * @returns {boolean} True if removed false if not.\n   */\n  function removeSong(index) {\n    config.songs.splice(index, 1);\n  }\n\n  /**\n   * Removes a song from the playlist\n   *\n   * Public Accessor: Amplitude.removeSongFromPlaylist( index, playlist )\n   *\n   * @access public\n   * @param {integer} index \t\t\t- Index of the song being removed from the playlist.\n   * @param {string} playlist\t\t\t- Playlist we are removing the song from.\n   * @returns {boolean} True if removed false if not.\n   */\n  function removeSongFromPlaylist(index, playlist) {\n    if (config.playlists[playlist] != undefined) {\n      config.playlists[playlist].songs.splice(index, 1);\n    }\n  }\n\n  /**\n   * When you pass a song object it plays that song right awawy.  It sets\n   * the active song in the config to the song you pass in and synchronizes\n   * the visuals.\n   *\n   * Public Accessor: Amplitude.playNow( song )\n   *\n   * @access public\n   * @param {object} song \t- JSON representation of a song.\n   */\n  function playNow(song) {\n    /*\n\t\t\tMakes sure the song object has a URL associated with it\n\t\t\tor there will be nothing to play.\n\t\t*/\n    if (song.url) {\n      config.audio.src = song.url;\n      config.active_metadata = song;\n      config.active_album = song.album;\n    } else {\n      /*\n\t\t\t\tWrite error message since the song passed in doesn't\n\t\t\t\thave a URL.\n\t\t\t*/\n      Debug.writeMessage(\"The song needs to have a URL!\");\n    }\n\n    /*\n\t\t\tPlays the song.\n\t\t*/\n    Core.play();\n\n    /*\n\t\t\tSets the main song control status visual\n\t\t*/\n    PlayPauseElements.sync();\n\n    /*\n\t\t\tUpdate the song meta data\n\t\t*/\n    MetaDataElements.displayMetaData();\n\n    /*\n\t\t\tReset the song sliders, song progress bar info, and\n\t\t\treset times. This ensures everything stays in sync.\n\t\t*/\n    SongSliderElements.resetElements();\n\n    /*\n\t\t\tReset the song played progress elements.\n\t\t*/\n    SongPlayedProgressElements.resetElements();\n\n    /*\n\t\t\tReset all of the current time elements.\n\t\t*/\n    TimeElements.resetCurrentTimes();\n\n    /*\n\t\t\tReset all of the duration time elements.\n\t\t*/\n    TimeElements.resetDurationTimes();\n\n    /*\n      Sets the state of the player.\n    */\n    ConfigState.setPlayerState();\n  }\n\n  /**\n   * Plays a song at the index passed in from the songs array.\n   *\n   * Public Accessor: Amplitude.playSongAtIndex( index )\n   *\n   * @access public\n   * @param {number} index \t- The number representing the song in the songs array.\n   */\n  function playSongAtIndex(index) {\n    /*\n\t\t\t Stop the current song.\n\t\t*/\n    Core.stop();\n\n    /*\n\t\t\t Determine if there is a new playlist, if so set the active playlist and change the song.\n\t\t*/\n    if (Checks.newPlaylist(null)) {\n      AudioNavigation.setActivePlaylist(null);\n\n      AudioNavigation.changeSong(config.songs[index], index);\n    }\n\n    /*\n\t\t\t Check if the song is new. If so, change the song.\n\t\t*/\n    if (Checks.newSong(null, index)) {\n      AudioNavigation.changeSong(config.songs[index], index);\n    }\n\n    /*\n\t\t\tPlay the song\n\t\t*/\n    Core.play();\n\n    /*\n      Sets the state of the player.\n    */\n    ConfigState.setPlayerState();\n\n    /*\n\t\t\tSync all of the play pause buttons.\n\t\t*/\n    PlayPauseElements.sync();\n  }\n\n  /**\n   * Plays a song at the index passed in for the playlist provided. The index passed\n   * in should be the index of the song in the playlist and not the songs array.\n   *\n   * @access public\n   * @param {number} index \t\t- The number representing the song in the playlist array.\n   * @param {string} playlist - The key string representing the playlist we are playing the song from.\n   *\n   */\n  function playPlaylistSongAtIndex(index, playlist) {\n    Core.stop();\n\n    /*\n\t\t\tDetermine if there is a new playlist, if so set the active playlist and change the song.\n\t\t*/\n    if (Checks.newPlaylist(playlist)) {\n      AudioNavigation.setActivePlaylist(playlist);\n\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[index],\n        index\n      );\n    }\n\n    /*\n\t\t\tCheck if the song is new. If so, change the song.\n\t\t*/\n    if (Checks.newSong(playlist, index)) {\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[index],\n        index\n      );\n    }\n\n    /*\n\t\t\tSync all of the play pause buttons.\n\t\t*/\n    PlayPauseElements.sync();\n\n    /*\n\t\t\tPlay the song\n\t\t*/\n    Core.play();\n\n    /*\n\t\t\tSet the state of the player\n\t\t*/\n    ConfigState.setPlayerState();\n  }\n\n  /**\n   * Allows the user to play whatever the active song is directly\n   * through Javascript. Normally ALL of Amplitude functions that access\n   * the core features are called through event handlers.\n   *\n   * Public Accessor: Amplitude.play();\n   *\n   * @access public\n   */\n  function play() {\n    Core.play();\n\n    ConfigState.setPlayerState();\n  }\n\n  /**\n   * Allows the user to pause whatever the active song is directly\n   * through Javascript. Normally ALL of Amplitude functions that access\n   * the core features are called through event handlers.\n   *\n   * Public Accessor: Amplitude.pause();\n   *\n   * @access public\n   */\n  function pause() {\n    Core.pause();\n\n    ConfigState.setPlayerState();\n  }\n\n  /**\n   * Returns the audio object used to play the audio\n   *\n   * Public Accessor: Amplitude.getAudio();\n   *\n   * @access public\n   */\n  function getAudio() {\n    return config.audio;\n  }\n\n  /**\n   * Returns the Web Audio API ANalyser used for visualizations.\n   *\n   * Public Accessor: Amplitude.getAnalyser()\n   *\n   * @access public\n   */\n  function getAnalyser() {\n    return config.analyser;\n  }\n\n  /**\n   * Plays the next song either in the playlist or globally.\n   *\n   * Public Accessor: Amplitude.next( playlist );\n   *\n   * @access public\n   * @param {string} [playlist = null \t- The playlist key\n   */\n  function next(playlist = null) {\n    let nextData = {};\n    /*\n\t\t\tIf the playlist is empty or null, then we check the active\n\t\t\tplaylist\n\t\t*/\n    if (playlist == \"\" || playlist == null) {\n      /*\n\t\t\t\tIf the active playlist is null, then we set the next global\n\t\t\t\tsong or we set the next in the playlist.\n\t\t\t*/\n      if (config.active_playlist == null || config.active_playlist == \"\") {\n        AudioNavigation.setNext();\n      } else {\n        AudioNavigation.setNextPlaylist(config.active_playlist);\n      }\n    } else {\n      AudioNavigation.setNextPlaylist(playlist);\n    }\n  }\n\n  /**\n   * Plays the prev song either in the playlist or globally.\n   *\n   * Public Accessor: Amplitude.prev( playlist );\n   *\n   * @access public\n   * @param {string} [playlist = null] \t- The playlist key\n   */\n  function prev(playlist = null) {\n    let prevData = {};\n\n    /*\n\t\t\tIf the playlist is empty or null, then we check the active\n\t\t\tplaylist\n\t\t*/\n    if (playlist == \"\" || playlist == null) {\n      /*\n\t\t\t\tIf the active playlist is null, then we set the prev global\n\t\t\t\tsong or we set the prev in the playlist.\n\t\t\t*/\n      if (config.active_playlist == null || config.active_playlist == \"\") {\n        AudioNavigation.setPrevious();\n      } else {\n        AudioNavigation.setPreviousPlaylist(config.active_playlist);\n      }\n    } else {\n      AudioNavigation.setPreviousPlaylist(playlist);\n    }\n  }\n\n  /**\n   * Gets all of the songs in the songs array\n   *\n   * Public Accessor: Amplitude.getSongs( );\n   *\n   * @access public\n   */\n  function getSongs() {\n    return config.songs;\n  }\n\n  /**\n   * Gets all of the songs in a playlist\n   *\n   * Public Accessor: Amplitude.getSongsInPlaylist( playlist );\n   *\n   * @access public\n   * @param {string} playlist \t- The playlist key\n   */\n  function getSongsInPlaylist(playlist) {\n    return config.playlists[playlist].songs;\n  }\n\n  /**\n   * Get current state of songs. If shuffled, this will return the shuffled\n   * songs.\n   *\n   * Public Accessor: Amplitude.getSongsState();\n   *\n   * @access public\n   */\n  function getSongsState() {\n    if (config.shuffle_on) {\n      return config.shuffle_list;\n    } else {\n      return config.songs;\n    }\n  }\n\n  /**\n   * Get current state of songs in playlist. If shuffled, this will return the\n   * shuffled songs.\n   *\n   * Public Accessor: Amplitude.getSongsStatePlaylist( playlist );\n   *\n   * @access public\n   * @param {string} playlist \t- The playlist key\n   */\n  function getSongsStatePlaylist(playlist) {\n    if (config.playlists[playlist].shuffle) {\n      return config.playlists[playlist].shuffle_list;\n    } else {\n      return config.playlists[playlist].songs;\n    }\n  }\n\n  /**\n   * Gets the active index of the player\n   *\n   * Public Accessor: Amplitude.getActiveIndex()\n   *\n   * @access public\n   */\n  function getActiveIndex() {\n    return parseInt(config.active_index);\n  }\n\n  /**\n   * Get the version of AmplitudeJS\n   *\n   * Public Accessor: Amplitude.getVersion()\n   *\n   * @access public\n   */\n  function getVersion() {\n    return config.version;\n  }\n\n  /**\n   * Get the buffered amount for the current song\n   *\n   * Public Accessor: Amplitude.getBuffered()\n   *\n   * @access public\n   */\n  function getBuffered() {\n    return config.buffered;\n  }\n\n  /**\n   * Skip to a certain location in a selected song.\n   *\n   * Public Accessor: Amplitude.getBuffered()\n   *\n   * @access public\n   * @param {number} seconds \t\t\t\t\t\t- The amount of seconds we should skip to in the song.\n   * @param {number} songIndex \t\t\t\t\t- The index of the song in the songs array.\n   * @param {string} [playlist = null]\t- The playlist the song we are skipping to belogns to.\n   */\n  function skipTo(seconds, songIndex, playlist = null) {\n    seconds = parseInt(seconds);\n\n    if (playlist != null) {\n      /*\n        Checks if we are skipping to a new playlist\n      */\n      if (Checks.newPlaylist(playlist)) {\n        AudioNavigation.setActivePlaylist(playlist);\n      }\n\n      /*\n        Changes the song to where it's being skipped and then\n        play the song.\n      */\n      AudioNavigation.changeSongPlaylist(\n        playlist,\n        config.playlists[playlist].songs[songIndex],\n        songIndex\n      );\n      Core.play();\n\n      /*\n        Sync all of the play pause elements.\n      */\n      PlayPauseElements.syncGlobal();\n      PlayPauseElements.syncPlaylist();\n      PlayPauseElements.syncSong();\n\n      /*\n        Skip to the location in the song.\n      */\n      Core.skipToLocation(seconds);\n    } else {\n      /*\n        Changes the song to where it's being skipped and then\n        play the song.\n      */\n      AudioNavigation.changeSong(config.songs[songIndex], songIndex);\n      Core.play();\n\n      /*\n        Syncs all of the play pause buttons now that we've skipped.\n      */\n      PlayPauseElements.syncGlobal();\n      PlayPauseElements.syncSong();\n\n      /*\n        Skip to the location in the song.\n      */\n      Core.skipToLocation(seconds);\n    }\n  }\n\n  /**\n   * Sets the meta data for a song in the songs array. This will set any\n   * meta data for a song besides the URL. The URL could cause issues if the\n   * song was playing.\n   *\n   * Public Accessor: Amplitude.setSongMetaData()\n   *\n   * @access public\n   * @param {number} index\t\t\t\t\t- The index of the song in the songs array.\n   * @param {object} metaData \t\t\t- The object containing the meta data we are updating.\n   * @param {string} playlist       - The playlist we are updating the song meta data for.\n   */\n  function setSongMetaData(index, metaData, playlist = null) {\n    /*\n      Update the meta data for a song in a playlist.\n    */\n    if (\n      playlist != \"\" &&\n      playlist != null &&\n      config.playlists[playlist] != undefined\n    ) {\n      /*\n        Set all of the defined meta data properties\n      */\n      for (var key in metaData) {\n        if (metaData.hasOwnProperty(key)) {\n          if (key != \"url\" && key != \"URL\" && key != \"live\" && key != \"LIVE\") {\n            config.playlists[playlist].songs[index][key] = metaData[key];\n          }\n        }\n      }\n    } else {\n      /*\n        Update the meta data for a song.\n      */\n      for (var key in metaData) {\n        if (metaData.hasOwnProperty(key)) {\n          if (key != \"url\" && key != \"URL\" && key != \"live\" && key != \"LIVE\") {\n            config.songs[index][key] = metaData[key];\n          }\n        }\n      }\n    }\n\n    /*\n      Display the updates on the screen.\n    */\n    MetaDataElements.displayMetaData();\n    MetaDataElements.syncMetaData();\n  }\n\n  function setPlaylistMetaData(playlist, metaData) {\n    if (config.playlists[playlist] != undefined) {\n      /*\n  \t\t\tThese are the ignored keys that we won't be worrying about displaying.\n  \t\t\tEvery other key in the playlist object can be displayed.\n  \t\t*/\n      let ignoredKeys = [\"repeat\", \"shuffle\", \"shuffle_list\", \"songs\", \"src\"];\n\n      for (var key in metaData) {\n        if (metaData.hasOwnProperty(key)) {\n          if (ignoredKeys.indexOf(key) < 0) {\n            config.playlists[playlist][key] = metaData[key];\n          }\n        }\n      }\n\n      MetaDataElements.displayPlaylistMetaData();\n    } else {\n      Debug.writeMessage(\"You must provide a valid playlist key!\");\n    }\n  }\n\n  /**\n   * Sets the delay between the songs when they are finished.\n   *\n   * Public Accessor: Amplitude.setDelay()\n   *\n   * @access public\n   * @param {number} delay \t- The millisecond delay time between songs\n   */\n  function setDelay(time) {\n    config.delay = time;\n  }\n\n  /**\n   * Returns the current delay between songs.\n   *\n   * Public Accessor: Amplitude.getDelay()\n   *\n   * @access public\n   */\n  function getDelay() {\n    return config.delay;\n  }\n\n  /**\n   * Returns the state of the player.\n   *\n   * Public Accessor: Amplitude.getPlayerState();\n   */\n  function getPlayerState() {\n    return config.player_state;\n  }\n\n  /**\n   * Registers a visualization and sets that visualization's\n   * preferences. When creating a visualization, you can set certain\n   * preferences that the user can overwrite similar to Amplitude.\n   * Public Accessor: Amplitude.registerVisualization( visualization, preferences )\n   *\n   * @param {object} visualzation A visualization object that gets registered\n   * with Amplitude\n   *\n   * @param {object} preferences A JSON object of preferences relating to the\n   * visualization\n   */\n  function registerVisualization(visualization, preferences) {\n    Visualizations.register(visualization, preferences);\n  }\n\n  /**\n   * Set the visualization for the playlist\n   *\n   * @param {string} playlist - The playlist we are setting the visualization for.\n   * @param {string} visualizationKey - The key of the visualization we are adding to the playlist.\n   */\n  function setPlaylistVisualization(playlist, visualizationKey) {\n    if (config.playlists[playlist] != undefined) {\n      if (config.visualizations.available[visualizationKey] != undefined) {\n        config.playlists[playlist].visualization = visualizationKey;\n      } else {\n        Debug.writeMessage(\n          \"A visualization does not exist for the key provided.\"\n        );\n      }\n    } else {\n      Debug.writeMessage(\"The playlist for the key provided does not exist\");\n    }\n  }\n\n  /**\n   * Set a visualization for the song.\n   *\n   * @param {number} songIndex - The index of the song in the songs array we are setting the visualization for.\n   * @param {string} visualizationKey - The key of the visualization we are adding to the playlist.\n   */\n  function setSongVisualization(songIndex, visualizationKey) {\n    if (config.songs[songIndex]) {\n      if (config.visualizations.available[visualizationKey] != undefined) {\n        config.songs[songIndex].visualization = visualizationKey;\n      } else {\n        Debug.writeMessage(\n          \"A visualization does not exist for the key provided.\"\n        );\n      }\n    } else {\n      Debug.writeMessage(\"A song at that index is undefined\");\n    }\n  }\n\n  /**\n   * Set song in playlist visualization.\n   *\n   * @param {string} playlist - The playlist we are setting the song visualization for.\n   * @param {number} songIndex - The index we are setting the visualization for.\n   * @param {strong} visualizationKey - The key of the visualization we are adding to the song in the playlist.\n   */\n  function setSongInPlaylistVisualization(\n    playlist,\n    songIndex,\n    visualizationKey\n  ) {\n    if (config.playlists[playlist].songs[songIndex] != undefined) {\n      if (config.visualizations.available[visualizationKey] != undefined) {\n        config.playlists[playlist].songs[\n          songIndex\n        ].visualization = visualizationKey;\n      } else {\n        Debug.writeMessage(\n          \"A visualization does not exist for the key provided.\"\n        );\n      }\n    } else {\n      Debug.writeMessage(\"The song in the playlist at that key is not defined\");\n    }\n  }\n\n  /**\n   * Sets the global visualization default.\n   */\n  function setGlobalVisualization(visualizationKey) {\n    if (config.visualizations.available[visualizationKey] != undefined) {\n      config.visualization = visualizationKey;\n    } else {\n      Debug.writeMessage(\n        \"A visualization does not exist for the key provided.\"\n      );\n    }\n  }\n\n  /**\n   * Sets the active volume.\n   * @param {number} volumeLevel - A number between 1 and 100 as a percentage of\n   * min to max for a volume level.\n   */\n  function setVolume( volumeLevel ){\n    Core.setVolume( volumeLevel );\n  }\n\n  /**\n   * Gets the active volume.\n   */\n  function getVolume(){\n    return config.volume;\n  }\n\n  /*\n\t\tReturns all of the publically accesible methods.\n\t*/\n  return {\n    init: init,\n    getConfig: getConfig,\n    bindNewElements: bindNewElements,\n    getActivePlaylist: getActivePlaylist,\n    getPlaybackSpeed: getPlaybackSpeed,\n    setPlaybackSpeed: setPlaybackSpeed,\n    getRepeat: getRepeat,\n    getRepeatPlaylist: getRepeatPlaylist,\n    getShuffle: getShuffle,\n    getShufflePlaylist: getShufflePlaylist,\n    setShuffle: setShuffle,\n    setShufflePlaylist: setShufflePlaylist,\n    setRepeat: setRepeat,\n    setRepeatSong: setRepeatSong,\n    setRepeatPlaylist: setRepeatPlaylist,\n    getDefaultAlbumArt: getDefaultAlbumArt,\n    setDefaultAlbumArt: setDefaultAlbumArt,\n    getDefaultPlaylistArt: getDefaultPlaylistArt,\n    setDefaultPlaylistArt: setDefaultPlaylistArt,\n    getSongPlayedPercentage: getSongPlayedPercentage,\n    setSongPlayedPercentage: setSongPlayedPercentage,\n    getSongPlayedSeconds: getSongPlayedSeconds,\n    getSongDuration: getSongDuration,\n    setDebug: setDebug,\n    getActiveSongMetadata: getActiveSongMetadata,\n    getActivePlaylistMetadata: getActivePlaylistMetadata,\n    getSongAtIndex: getSongAtIndex,\n    getSongAtPlaylistIndex: getSongAtPlaylistIndex,\n    addSong: addSong,\n    addSongToPlaylist: addSongToPlaylist,\n    removeSong: removeSong,\n    removeSongFromPlaylist: removeSongFromPlaylist,\n    playNow: playNow,\n    playSongAtIndex: playSongAtIndex,\n    playPlaylistSongAtIndex: playPlaylistSongAtIndex,\n    play: play,\n    pause: pause,\n    getAudio: getAudio,\n    getAnalyser: getAnalyser,\n    next: next,\n    prev: prev,\n    getSongs: getSongs,\n    getSongsInPlaylist: getSongsInPlaylist,\n    getSongsState: getSongsState,\n    getSongsStatePlaylist: getSongsStatePlaylist,\n    getActiveIndex: getActiveIndex,\n    getVersion: getVersion,\n    getBuffered: getBuffered,\n    skipTo: skipTo,\n    setSongMetaData: setSongMetaData,\n    setPlaylistMetaData: setPlaylistMetaData,\n    setDelay: setDelay,\n    getDelay: getDelay,\n    getPlayerState: getPlayerState,\n    addPlaylist: addPlaylist,\n    registerVisualization: registerVisualization,\n    setPlaylistVisualization: setPlaylistVisualization,\n    setSongVisualization: setSongVisualization,\n    setSongInPlaylistVisualization: setSongInPlaylistVisualization,\n    setGlobalVisualization: setGlobalVisualization,\n    getVolume: getVolume,\n    setVolume: setVolume\n  };\n})();\n\nexport default Amplitude;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * AmplitudeJS Debug Module\n * @module utilities/Debug\n */\nimport Debug from \"../utilities/debug.js\";\n\n/**\n * AmplitudeJS Checks Utility.\n * @module utilities/Checks\n */\nimport Checks from \"../utilities/checks.js\";\n\n/**\n * AmplitudeJS Visual Meta Data Elements Module\n * @module visual/MetaDataElements\n */\nimport MetaDataElements from \"../visual/metaDataElements.js\";\n\n/**\n * AmplitudeJS SoundCloud Meta module\n * @module soundcloud/Soundcloud\n */\nimport SoundCloud from \"../soundcloud/soundcloud.js\";\n\n/**\n * Handles the initialization of the playlists.\n *\n * @module init/PlaylistsInitializer\n */\nlet PlaylistsInitializer = (function() {\n  /**\n   * Initializes the playlists for AmplitudeJS\n   *\n   * @param {Object} playlists - The playlists defined by the user.\n   */\n  function initialize(playlists) {\n    /*\n      Copy the playlists over to Amplitude\n    */\n    config.playlists = playlists;\n\n    /*\n      Copy songs over from songs array.\n    */\n    copySongsToPlaylists();\n\n    /*\n      Grab any SoundCloud Data for the playlist songs if needed.\n    */\n    grabSoundCloudData();\n\n    /*\n      Initialize a scoped active index for each playlist.\n    */\n    initializePlaylistActiveIndexes();\n\n    /*\n      Initialize the shuffle status of the playlists.\n    */\n    initializePlaylistShuffleStatuses();\n\n    /*\n      Initialize the repeat status for the playlits.\n    */\n    initializePlaylistsRepeatStatuses();\n\n    /*\n      Initialize temporary place holders for shuffle lists.\n    */\n    initializePlaylistShuffleLists();\n\n    /*\n      Initializes the first song in the playlist\n    */\n    initializeFirstSongInPlaylistMetaData();\n  }\n\n  /**\n   * Initializes a scoped active index for each playlist.\n   *\n   * @access private\n   */\n  function initializePlaylistActiveIndexes() {\n    /*\n  \t\tIterate over all of the playlists defined by the user\n      and add an active index.\n\t\t*/\n    for (let key in config.playlists) {\n      config.playlists[key].active_index = null;\n    }\n  }\n\n  /**\n   * Ensures the indexes in the playlists are valid indexes. The song has\n   * to exist in the Amplitude config to be played correctly. If the index\n   * is an integer, we ensure it exists and coy it to the array.\n   *\n   * @access private\n   */\n  function copySongsToPlaylists() {\n    /*\n      Iterate over all of the config's playlists\n    */\n    for (let key in config.playlists) {\n      /*\n        Checks if the playlist key is accurate.\n      */\n      if (config.playlists.hasOwnProperty(key)) {\n        /*\n          Checks if the playlist has songs.\n        */\n        if (config.playlists[key].songs) {\n          /*\n            Iterate over all of the songs in the playlist\n          */\n          for (let i = 0; i < config.playlists[key].songs.length; i++) {\n            if (Checks.isInt(config.playlists[key].songs[i])) {\n              config.playlists[key].songs[i] =\n                config.songs[config.playlists[key].songs[i]];\n\n              config.playlists[key].songs[i].index = i;\n            }\n            /*\n              Check to see if the index for the song in the playlist\n              exists in the songs config.\n            */\n            if (\n              Checks.isInt(config.playlists[key].songs[i]) &&\n              !config.songs[config.playlists[key].songs[i]]\n            ) {\n              Debug.writeMessage(\n                \"The song index: \" +\n                  config.playlists[key].songs[i] +\n                  \" in playlist with key: \" +\n                  key +\n                  \" is not defined in your songs array!\"\n              );\n            }\n\n            /*\n              If not an int, then is a dedicated song, just set the index.\n            */\n            if (!Checks.isInt(config.playlists[key].songs[i]) ){\n              config.playlists[key].songs[i].index = i;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Grabs the SoundCloud data for any song in the playlist that\n   * the user needs to grab data for.\n   *\n   * @access private\n   */\n  function grabSoundCloudData() {\n    /*\n      Iterate over all of the config's playlists\n    */\n    for (let key in config.playlists) {\n      /*\n        Checks if the playlist key is accurate.\n      */\n      if (config.playlists.hasOwnProperty(key)) {\n        /*\n          Iterate over all of the songs in the playlist and see if\n          they need to grab the SoundCloud data for the song.\n        */\n        for (let i = 0; i < config.playlists[key].songs.length; i++) {\n          /*\n            Only Grab the data if the URL is a SoundCloud URL.\n          */\n          if (SoundCloud.isSoundCloudURL(config.playlists[key].songs[i].url)) {\n            /*\n              Only grab the data if the SoundCloud data has not already been\n              grabbed for the audio. This could happen if the user defined the\n              song in the songs array and was grabbed before.\n            */\n            if (config.playlists[key].songs[i].soundcloud_data == undefined) {\n              SoundCloud.resolveIndividualStreamableURL(\n                config.playlists[key].songs[i].url,\n                key,\n                i\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes the shuffle statuses for each of the playlists. These will\n   * be referenced when we shuffle individual playlists.\n   *\n   * @access private\n   */\n  function initializePlaylistShuffleStatuses() {\n    /*\n\t\t\tIterate over all of the playlists the user defined adding\n\t\t\tthe playlist key to the shuffled playlist array and creating\n\t\t\tand empty object to house the statuses.\n\t\t*/\n    for (let key in config.playlists) {\n      config.playlists[key].shuffle = false;\n    }\n  }\n\n  /**\n   * Initializes the repeat statuses for each of the playlists.  These will\n   * be referenced when we repeat individual playlits.\n   *\n   * @access private\n   */\n  function initializePlaylistsRepeatStatuses() {\n    /*\n      Iterate over all of the playlists the user defined adding\n      the playlist key to the repeated playlist array and creating\n      and empty object to house the statuses.\n    */\n    for (let key in config.playlists) {\n      config.playlists[key].repeat = false;\n    }\n  }\n\n  /**\n   * Initializes the shuffled playlist placeholders. These will be set for\n   * playlists that are shuffled and contain the shuffled songs.\n   *\n   * @access private\n   */\n  function initializePlaylistShuffleLists() {\n    /*\n \t\t\tIterate over all of the playlists the user defined adding\n \t\t\tthe playlist key to the shuffled playlists array and creating\n \t\t\tand empty object to house the shuffled playlists\n \t\t*/\n    for (let key in config.playlists) {\n      config.playlists[key].shuffle_list = [];\n    }\n  }\n\n  /**\n   * Intializes the display for the first song in the playlist meta data.\n   *\n   * @access private\n   */\n  function initializeFirstSongInPlaylistMetaData() {\n    /*\n\t\t\tIterates over all of the playlists setting the meta data for the\n\t\t\tfirst song.\n\t\t*/\n    for (let key in config.playlists) {\n      MetaDataElements.setFirstSongInPlaylist(\n        config.playlists[key].songs[0],\n        key\n      );\n    }\n  }\n\n  /*\n    Returns the public facing methods\n  */\n  return {\n    initialize: initialize\n  };\n})();\n\nexport default PlaylistsInitializer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/init/playlists.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../config.js\";\n\n/**\n * Handles all of the container elements.\n *\n * @param visual/ContainerElements\n */\nlet ContainerElements = (function() {\n  /**\n   * Applies the class 'amplitude-active-song-container' to the element\n   * containing visual information regarding the active song.\n   *\n   * @access public\n   */\n  function setActive() {\n    /*\n      Gets all of the song container elements.\n    */\n    let songContainers = document.getElementsByClassName(\n      \"amplitude-song-container\"\n    );\n\n    /*\n\t\t\tRemoves all of the active song containrs.\n\t\t*/\n    for (let i = 0; i < songContainers.length; i++) {\n      songContainers[i].classList.remove(\"amplitude-active-song-container\");\n    }\n\n    /*\n\t\t\tFinds the active index and adds the active song container to the element\n\t\t\tthat represents the song at the index.\n\t\t*/\n    if (config.active_playlist == \"\" || config.active_playlist == null) {\n      let activeIndex = '';\n\n      if( config.shuffle_on ){\n        activeIndex = config.shuffle_list[ config.active_index ].index;\n      }else{\n        activeIndex = config.active_index;\n      }\n\n      if (\n        document.querySelectorAll(\n          '.amplitude-song-container[data-amplitude-song-index=\"' +\n            activeIndex +\n            '\"]'\n        )\n      ) {\n        let songContainers = document.querySelectorAll(\n          '.amplitude-song-container[data-amplitude-song-index=\"' +\n            activeIndex +\n            '\"]'\n        );\n\n        for (let i = 0; i < songContainers.length; i++) {\n          if (!songContainers[i].hasAttribute(\"data-amplitude-playlist\")) {\n            songContainers[i].classList.add(\"amplitude-active-song-container\");\n          }\n        }\n      }\n    } else {\n      if( config.active_playlist != null && config.active_playlist != '' ){\n        var activePlaylistIndex = config.playlists[ config.active_playlist ].active_index;\n      }else{\n        var activePlaylistIndex = '';\n\n        if( config.playlists[ config.active_playlist ].shuffle ){\n          activePlaylistIndex = config.playlists[ config.active_playlist ].shuffle_list[ config.playlists[config.active_playlist].active_index ].index;\n        }else{\n          activePlaylistIndex = config.playlists[ config.active_playlist ].active_index;\n        }\n      }\n\n      if (\n        document.querySelectorAll(\n          '.amplitude-song-container[data-amplitude-song-index=\"' +\n            activePlaylistIndex +\n            '\"][data-amplitude-playlist=\"' +\n            config.active_playlist +\n            '\"]'\n        )\n      ) {\n        let songContainers = document.querySelectorAll(\n          '.amplitude-song-container[data-amplitude-song-index=\"' +\n            activePlaylistIndex +\n            '\"][data-amplitude-playlist=\"' +\n            config.active_playlist +\n            '\"]'\n        );\n\n        for (let i = 0; i < songContainers.length; i++) {\n          songContainers[i].classList.add(\"amplitude-active-song-container\");\n        }\n      }\n    }\n  }\n\n  return {\n    setActive: setActive\n  };\n})();\n\nexport default ContainerElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/containerElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the current time hour elements.\n *\n * @module visual/time/CurrentHourElements\n */\nlet CurrentHourElements = (function() {\n  function sync(hours) {\n    syncGlobal(hours);\n    syncPlaylist(hours);\n    syncSong(hours);\n    syncSongInPlaylist(hours);\n  }\n\n  /**\n   * Updates any elements that display the current hour for the song.\n   *\n   * @access public\n   * @param {number} hours \t- An integer conaining how many hours into the song.\n   */\n  function syncGlobal(hours) {\n    /*\n\t\t\tGet all of the hour selectors\n\t\t*/\n    const currentHourSelectors = document.querySelectorAll(\n      \".amplitude-current-hours\"\n    );\n\n    /*\n\t\t\tSet the current hour selector's inner html to hours passed in.\n\t\t*/\n    for (let i = 0; i < currentHourSelectors.length; i++) {\n      let playlist = currentHourSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = currentHourSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        Updates the current hour selector for a global display.\n      */\n      if (playlist == null && songIndex == null) {\n        currentHourSelectors[i].innerHTML = hours;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist current hour elements.\n   *\n   * @param {Integer} hour - The current audio hour.\n   */\n  function syncPlaylist(hours) {\n    /*\n\t\t\tGet all of the hour selectors\n\t\t*/\n    const currentHourPlaylistSelectors = document.querySelectorAll(\n      '.amplitude-current-hours[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the current hour selector's inner html to hours passed in.\n\t\t*/\n    for (let i = 0; i < currentHourPlaylistSelectors.length; i++) {\n      let songIndex = currentHourPlaylistSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        Updates the current hour selector for a global display.\n      */\n      if (songIndex == null) {\n        currentHourPlaylistSelectors[i].innerHTML = hours;\n      }\n    }\n  }\n\n  /**\n   * Syncs the song hour elements.\n   *\n   * @param {Integer} hour - The current audio hour.\n   */\n  function syncSong(hours) {\n    if (config.active_playlist == null) {\n      /*\n  \t\t\tGet all of the hour selectors\n  \t\t*/\n      const currentHourSongSelectors = document.querySelectorAll(\n        '.amplitude-current-hours[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      /*\n  \t\t\tSet the current hour selector's inner html to hours passed in.\n  \t\t*/\n      for (let i = 0; i < currentHourSongSelectors.length; i++) {\n        let playlist = currentHourSongSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        /*\n          Updates the current hour selector for a global display.\n        */\n        if (playlist == null) {\n          currentHourSongSelectors[i].innerHTML = hours;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song in playlist song hour elements.\n   *\n   * @param {Integer} hour - The current audio hour.\n   */\n  function syncSongInPlaylist(hours) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n    /*\n\t\t\tGet all of the hour selectors\n\t\t*/\n    const currentHourPlaylistSongSelectors = document.querySelectorAll(\n      '.amplitude-current-hours[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the current hour selector's inner html to hours passed in.\n\t\t*/\n    for (let i = 0; i < currentHourPlaylistSongSelectors.length; i++) {\n      currentHourPlaylistSongSelectors[i].innerHTML = hours;\n    }\n  }\n\n  /**\n   * Reset the current hour elements.\n   */\n  function resetTimes() {\n    /*\n      Gets the hour display elements\n    */\n    let hourSelectors = document.querySelectorAll(\".amplitude-current-hours\");\n\n    /*\n      Iterates over all of the hour selectors and sets the inner HTML\n      to 00.\n    */\n    for (var i = 0; i < hourSelectors.length; i++) {\n      hourSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default CurrentHourElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/currentHourElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the current time minutes elements.\n *\n * @module visual/time/CurrentMinuteElements\n */\nlet CurrentMinuteElements = (function() {\n  /**\n   * Syncs the current minutes elements.\n   *\n   * @param {Integer} minutes - The current audio minutes.\n   */\n  function sync(minutes) {\n    syncGlobal(minutes);\n    syncPlaylist(minutes);\n    syncSong(minutes);\n    syncSongInPlaylist(minutes);\n  }\n\n  /**\n   * Syncs the global current minutes elements.\n   *\n   * @param {Integer} minutes - The current audio minutes.\n   */\n  function syncGlobal(minutes) {\n    /*\n\t\t\tGet all of the minute selectors\n\t\t*/\n    const currentMinuteSelectors = document.querySelectorAll(\n      \".amplitude-current-minutes\"\n    );\n\n    /*\n\t\t\tSet the current minute selector's inner html to minutes passed in.\n\t\t*/\n    for (let i = 0; i < currentMinuteSelectors.length; i++) {\n      let playlist = currentMinuteSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = currentMinuteSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        Updates the current minute selector for a global display.\n      */\n      if (playlist == null && songIndex == null) {\n        currentMinuteSelectors[i].innerHTML = minutes;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist minutes elements.\n   *\n   * @param {Integer} minutes - The current audio minutes.\n   */\n  function syncPlaylist(minutes) {\n    /*\n\t\t\tGet all of the minute selectors\n\t\t*/\n    const currentMinutePlaylistSelectors = document.querySelectorAll(\n      '.amplitude-current-minutes[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the current minute selector's inner html to minutes passed in.\n\t\t*/\n    for (let i = 0; i < currentMinutePlaylistSelectors.length; i++) {\n      let songIndex = currentMinutePlaylistSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        Updates the current minute selector for a global display.\n      */\n      if (songIndex == null) {\n        currentMinutePlaylistSelectors[i].innerHTML = minutes;\n      }\n    }\n  }\n\n  /**\n   * Syncs the current song minutes elements.\n   *\n   * @param {Integer} minutes - The current audio minutes.\n   */\n  function syncSong(minutes) {\n    if (config.active_playlist == null) {\n      /*\n  \t\t\tGet all of the minute selectors\n  \t\t*/\n      const currentMinuteSongSelectors = document.querySelectorAll(\n        '.amplitude-current-minutes[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      /*\n  \t\t\tSet the current minute selector's inner html to minutes passed in.\n  \t\t*/\n      for (let i = 0; i < currentMinuteSongSelectors.length; i++) {\n        let playlist = currentMinuteSongSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        /*\n          Updates the current minute selector for a global display.\n        */\n        if (playlist == null) {\n          currentMinuteSongSelectors[i].innerHTML = minutes;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the current song in playlist minutes elements.\n   *\n   * @param {Integer} minutes - The current audio minutes.\n   */\n  function syncSongInPlaylist(minutes) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    /*\n\t\t\tGet all of the minute selectors\n\t\t*/\n    const currentMinutePlaylistSongSelectors = document.querySelectorAll(\n      '.amplitude-current-minutes[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the current minute selector's inner html to minutes passed in.\n\t\t*/\n    for (let i = 0; i < currentMinutePlaylistSongSelectors.length; i++) {\n      currentMinutePlaylistSongSelectors[i].innerHTML = minutes;\n    }\n  }\n\n  /**\n   * Reset the current times.\n   */\n  function resetTimes() {\n    /*\n      Gets the minute display elements\n    */\n    let minuteSelectors = document.querySelectorAll(\n      \".amplitude-current-minutes\"\n    );\n\n    /*\n      Iterates over all of the minute selectors and sets the inner HTML\n      to 00.\n    */\n    for (var i = 0; i < minuteSelectors.length; i++) {\n      minuteSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default CurrentMinuteElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/currentMinuteElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the current time seconds elements.\n *\n * @module visual/time/CurrentSecondElements\n */\nlet CurrentSecondElements = (function() {\n  /**\n   * Syncs the current seconds elements.\n   *\n   * @param {Integer} seconds - The current audio seconds.\n   */\n  function sync(seconds) {\n    syncGlobal(seconds);\n    syncPlaylist(seconds);\n    syncSong(seconds);\n    syncSongInPlaylist(seconds);\n  }\n\n  /**\n   * Syncs the global current seconds elements.\n   *\n   * @param {Integer} seconds - The current audio seconds.\n   */\n  function syncGlobal(seconds) {\n    /*\n\t\t\tGet all of the second selectors\n\t\t*/\n    const currentSecondSelectors = document.querySelectorAll(\n      \".amplitude-current-seconds\"\n    );\n\n    /*\n\t\t\tSet the current second selector's inner html to seconds passed in.\n\t\t*/\n    for (let i = 0; i < currentSecondSelectors.length; i++) {\n      let playlist = currentSecondSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = currentSecondSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        Updates the current second selector for a global display.\n      */\n      if (playlist == null && songIndex == null) {\n        currentSecondSelectors[i].innerHTML = seconds;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist seconds elements.\n   *\n   * @param {Integer} seconds - The current audio seconds.\n   */\n  function syncPlaylist(seconds) {\n    /*\n\t\t\tGet all of the second selectors\n\t\t*/\n    const currentSecondPlaylistSelectors = document.querySelectorAll(\n      '.amplitude-current-seconds[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the current second selector's inner html to seconds passed in.\n\t\t*/\n    for (let i = 0; i < currentSecondPlaylistSelectors.length; i++) {\n      let songIndex = currentSecondPlaylistSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      /*\n        Updates the current second selector for a global display.\n      */\n      if (songIndex == null) {\n        currentSecondPlaylistSelectors[i].innerHTML = seconds;\n      }\n    }\n  }\n\n  /**\n   * Syncs the current song seconds elements.\n   *\n   * @param {Integer} seconds - The current audio seconds.\n   */\n  function syncSong(seconds) {\n    if (config.active_playlist == null) {\n      /*\n  \t\t\tGet all of the second selectors\n  \t\t*/\n      const currentSecondSongSelectors = document.querySelectorAll(\n        '.amplitude-current-seconds[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      /*\n  \t\t\tSet the current second selector's inner html to seconds passed in.\n  \t\t*/\n      for (let i = 0; i < currentSecondSongSelectors.length; i++) {\n        let playlist = currentSecondSongSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        /*\n          Updates the current second selector for a global display.\n        */\n        if (playlist == null) {\n          currentSecondSongSelectors[i].innerHTML = seconds;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the current song in playlist seconds elements.\n   *\n   * @param {Integer} seconds - The current audio seconds.\n   */\n  function syncSongInPlaylist(seconds) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n    /*\n\t\t\tGet all of the second selectors\n\t\t*/\n    const currentSecondPlaylistSongSelectors = document.querySelectorAll(\n      '.amplitude-current-seconds[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the current second selector's inner html to seconds passed in.\n\t\t*/\n    for (let i = 0; i < currentSecondPlaylistSongSelectors.length; i++) {\n      currentSecondPlaylistSongSelectors[i].innerHTML = seconds;\n    }\n  }\n\n  /**\n   * Reset the current seconds elements.\n   */\n  function resetTimes() {\n    /*\n      Gets the second display elements\n    */\n    let secondSelectors = document.querySelectorAll(\n      \".amplitude-current-seconds\"\n    );\n\n    /*\n      Iterates over all of the second selectors and sets the inner HTML\n      to 00.\n    */\n    for (var i = 0; i < secondSelectors.length; i++) {\n      secondSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default CurrentSecondElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/currentSecondElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * These methods help sync visual time elements.\n *\n * @module visual/CurrentTimeElements\n */\nlet CurrentTimeElements = (function() {\n  /**\n   * Visually displays the current time on the screen. This is called on\n   * time update for the current song.\n   *\n   * @access public\n   * @param {object} currentTime \t\t\t\t\t- An object containing the current time for the song in seconds, minutes, and hours.\n   */\n  function sync(currentTime) {\n    /*\n\t\t\tSet current time display.\n\t\t*/\n    syncGlobal(currentTime);\n    syncPlaylist(currentTime);\n    syncSong(currentTime);\n    syncSongInPlaylist(currentTime);\n  }\n\n  /**\n   * Updates any elements that display the current time for the song. This\n   * is a computed field that will be commonly used.\n   *\n   * @access public\n   * @param {object} time \t- A json object conaining the parts for the current time for the song.\n   */\n  function syncGlobal(time) {\n    /*\n\t\t\tGet all of the time selectors.\n\t\t*/\n    let currentTimeSelectors = document.querySelectorAll(\n      \".amplitude-current-time\"\n    );\n\n    /*\n\t\t\tSet the time selector's inner html to the current time for the song. The current\n\t\t\ttime is computed by joining minutes and seconds.\n\t\t*/\n    var timeText = time.minutes + \":\" + time.seconds;\n\n    if (time.hours > 0) {\n      timeText = time.hours + \":\" + timeText;\n    }\n\n    for (let i = 0; i < currentTimeSelectors.length; i++) {\n      let playlist = currentTimeSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = currentTimeSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && songIndex == null) {\n        currentTimeSelectors[i].innerHTML = timeText;\n      }\n    }\n  }\n\n  /**\n   * Updates any elements that display the current time for the song. This\n   * is a computed field that will be commonly used.\n   *\n   * @access public\n   * @param {object} time \t- A json object conaining the parts for the current time for the song.\n   */\n  function syncPlaylist(time) {\n    /*\n\t\t\tGet all of the time selectors.\n\t\t*/\n    let currentTimeSelectors = document.querySelectorAll(\n      '.amplitude-current-time[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the time selector's inner html to the current time for the song. The current\n\t\t\ttime is computed by joining minutes and seconds.\n\t\t*/\n    var timeText = time.minutes + \":\" + time.seconds;\n\n    if (time.hours > 0) {\n      timeText = time.hours + \":\" + timeText;\n    }\n\n    for (let i = 0; i < currentTimeSelectors.length; i++) {\n      let songIndex = currentTimeSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (songIndex == null) {\n        currentTimeSelectors[i].innerHTML = timeText;\n      }\n    }\n  }\n\n  /**\n   * Updates any elements that display the current time for the song. This\n   * is a computed field that will be commonly used.\n   *\n   * @access public\n   * @param {object} time \t- A json object conaining the parts for the current time for the song.\n   */\n  function syncSong(time) {\n    if (config.active_playlist == null) {\n      /*\n  \t\t\tGet all of the time selectors.\n  \t\t*/\n      let currentTimeSelectors = document.querySelectorAll(\n        '.amplitude-current-time[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      /*\n  \t\t\tSet the time selector's inner html to the current time for the song. The current\n  \t\t\ttime is computed by joining minutes and seconds.\n  \t\t*/\n      var timeText = time.minutes + \":\" + time.seconds;\n\n      if (time.hours > 0) {\n        timeText = time.hours + \":\" + timeText;\n      }\n\n      for (let i = 0; i < currentTimeSelectors.length; i++) {\n        let playlist = currentTimeSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        if (playlist == null) {\n          currentTimeSelectors[i].innerHTML = timeText;\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates any elements that display the current time for the song. This\n   * is a computed field that will be commonly used.\n   *\n   * @access public\n   * @param {object} time \t- A json object conaining the parts for the current time for the song.\n   */\n  function syncSongInPlaylist(time) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n    /*\n\t\t\tGet all of the time selectors.\n\t\t*/\n    let currentTimeSelectors = document.querySelectorAll(\n      '.amplitude-current-time[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    /*\n\t\t\tSet the time selector's inner html to the current time for the song. The current\n\t\t\ttime is computed by joining minutes and seconds.\n\t\t*/\n    var timeText = time.minutes + \":\" + time.seconds;\n\n    if (time.hours > 0) {\n      timeText = time.hours + \":\" + timeText;\n    }\n\n    for (let i = 0; i < currentTimeSelectors.length; i++) {\n      currentTimeSelectors[i].innerHTML = timeText;\n    }\n  }\n\n  /**\n   * Resets the current time displays to 00:00\n   *\n   * @access public\n   */\n  function resetTimes() {\n    /*\n\t\t\tGets the time selector display elements\n\t\t*/\n    let timeSelectors = document.querySelectorAll(\".amplitude-current-time\");\n\n    /*\n\t\t\tIterates over all of the time selectors and sets the inner HTML\n\t\t\tto 00.\n\t\t*/\n    for (let i = 0; i < timeSelectors.length; i++) {\n      timeSelectors[i].innerHTML = \"00:00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default CurrentTimeElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/currentTimeElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the duration countdown elements.\n *\n * @module visual/time/DurationCountDownTimeElements.\n */\nlet DurationCountDownTimeElements = (function() {\n  /**\n   * Syncs all of the countdown time elements.\n   *\n   * @param {object} countDownTime - The current time of the audio.\n   * @param {object} songDuration - The song duration of the audio.\n   */\n  function sync(countDownTime, songDuration) {\n    let timeRemaining = computeTimeRemaining(countDownTime, songDuration);\n\n    syncGlobal(timeRemaining);\n    syncPlaylist(timeRemaining);\n    syncSong(timeRemaining);\n    syncSongInPlaylist(timeRemaining);\n  }\n\n  /**\n   * Syncs the global count down time elements.\n   *\n   * @param {string} timeRemaining - The time remaining for the audio.\n   */\n  function syncGlobal(timeRemaining) {\n    let durationTimeRemainingSelectors = document.querySelectorAll(\n      \".amplitude-time-remaining\"\n    );\n\n    for (let i = 0; i < durationTimeRemainingSelectors.length; i++) {\n      let playlist = durationTimeRemainingSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = durationTimeRemainingSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && songIndex == null) {\n        durationTimeRemainingSelectors[i].innerHTML = timeRemaining;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist count down time elements.\n   *\n   * @param {string} timeRemaining - The time remaining for the audio.\n   */\n  function syncPlaylist(timeRemaining) {\n    let durationTimeRemainingSelectors = document.querySelectorAll(\n      '.amplitude-time-remaining[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationTimeRemainingSelectors.length; i++) {\n      let songIndex = durationTimeRemainingSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (songIndex == null) {\n        durationTimeRemainingSelectors[i].innerHTML = timeRemaining;\n      }\n    }\n  }\n\n  /**\n   * Syncs the song count down time elements.\n   *\n   * @param {string} timeRemaining - The time remaining for the audio.\n   */\n  function syncSong(timeRemaining) {\n    if (config.active_playlist == null) {\n      let durationTimeRemainingSelectors = document.querySelectorAll(\n        '.amplitude-time-remaining[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      for (let i = 0; i < durationTimeRemainingSelectors.length; i++) {\n        let playlist = durationTimeRemainingSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        if (playlist == null) {\n          durationTimeRemainingSelectors[i].innerHTML = timeRemaining;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song in playlist count down time elements.\n   *\n   * @param {string} timeRemaining - The time remaining for the audio.\n   */\n  function syncSongInPlaylist(timeRemaining) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    let durationTimeRemainingSelectors = document.querySelectorAll(\n      '.amplitude-time-remaining[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationTimeRemainingSelectors.length; i++) {\n      durationTimeRemainingSelectors[i].innerHTML = timeRemaining;\n    }\n  }\n\n  /**\n   * Resets the count down times.\n   */\n  function resetTimes() {\n    let durationTimeRemainingSelectors = document.querySelectorAll(\n      \".amplitude-time-remaining\"\n    );\n\n    for (let i = 0; i < durationTimeRemainingSelectors.length; i++) {\n      durationTimeRemainingSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Computes the time remaining for the audio.\n   *\n   * @param {object} currentTime - The current time of the audio.\n   * @param {object} songDuration - The duration of the audio.\n   */\n  function computeTimeRemaining(currentTime, songDuration) {\n    let timeRemaining = \"00:00\";\n\n    /*\n      Initialize the total current seconds and total duration seconds\n    */\n    let totalCurrentSeconds =\n      parseInt(currentTime.seconds) +\n      parseInt(currentTime.minutes) * 60 +\n      parseInt(currentTime.hours) * 60 * 60;\n    let totalDurationSeconds =\n      parseInt(songDuration.seconds) +\n      parseInt(songDuration.minutes) * 60 +\n      parseInt(songDuration.hours) * 60 * 60;\n\n    /*\n      If the two variables are numbers we continue the computing.\n    */\n    if (!isNaN(totalCurrentSeconds) && !isNaN(totalDurationSeconds)) {\n      /*\n        Find the total remaining seconds.\n      */\n      let timeRemainingTotalSeconds =\n        totalDurationSeconds - totalCurrentSeconds;\n\n      var remainingHours = Math.floor(timeRemainingTotalSeconds / 3600);\n      var remainingMinutes = Math.floor(\n        (timeRemainingTotalSeconds - remainingHours * 3600) / 60\n      );\n      var remainingSeconds =\n        timeRemainingTotalSeconds -\n        remainingHours * 3600 -\n        remainingMinutes * 60;\n\n      timeRemaining =\n        (remainingMinutes < 10 ? \"0\" + remainingMinutes : remainingMinutes) +\n        \":\" +\n        (remainingSeconds < 10 ? \"0\" + remainingSeconds : remainingSeconds);\n\n      if (remainingHours > 0) {\n        timeRemaining = remainingHours + \":\" + timeRemaining;\n      }\n    }\n\n    return timeRemaining;\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default DurationCountDownTimeElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/durationCountDownTimeElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the duration hours elements.\n *\n * @module visual/time/DurationHourElements.\n */\nlet DurationHourElements = (function() {\n  /**\n   * Sync the duration hours elements.\n   *\n   * @param {Integer} hours - The duration hours for the audio.\n   */\n  function sync(hours) {\n    syncGlobal(hours);\n    syncPlaylist(hours);\n    syncSong(hours);\n    syncSongInPlaylist(hours);\n  }\n\n  /**\n   * Syncs the global duration hours elements.\n   *\n   * @param {Integer} hours - the duration hours for the audio.\n   */\n  function syncGlobal(hours) {\n    let durationHourSelectors = document.querySelectorAll(\n      \".amplitude-duration-hours\"\n    );\n\n    for (let i = 0; i < durationHourSelectors.length; i++) {\n      let playlist = durationHourSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = durationHourSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && songIndex == null) {\n        durationHourSelectors[i].innerHTML = hours;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist duration hours for the audio.\n   *\n   * @param {Integer} hours - The duration hours for the audio.\n   */\n  function syncPlaylist(hours) {\n    let durationHourSelectors = document.querySelectorAll(\n      '.amplitude-duration-hours[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationHourSelectors.length; i++) {\n      let songIndex = durationHourSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (songIndex == null) {\n        durationHourSelectors[i].innerHTML = hours;\n      }\n    }\n  }\n\n  /**\n   * Syncs the song duration hours.\n   *\n   * @param {Integer} hours - The duration hours for the audio.\n   */\n  function syncSong(hours) {\n    if (config.active_playlist == null) {\n      let durationHourSelectors = document.querySelectorAll(\n        '.amplitude-duration-hours[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      for (let i = 0; i < durationHourSelectors.length; i++) {\n        let playlist = durationHourSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        if (playlist == null) {\n          durationHourSelectors[i].innerHTML = hours;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song in playlist duration hours.\n   *\n   * @param {Integer} hours - The duration hours of the audio.\n   */\n  function syncSongInPlaylist(hours) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    let durationHourSelectors = document.querySelectorAll(\n      '.amplitude-duration-hours[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationHourSelectors.length; i++) {\n      durationHourSelectors[i].innerHTML = hours;\n    }\n  }\n\n  /**\n   * Resets the duration shours elements to '00'\n   */\n  function resetTimes() {\n    let durationHourSelectors = document.querySelectorAll(\n      \".amplitude-duration-hours\"\n    );\n\n    for (let i = 0; i < durationHourSelectors.length; i++) {\n      durationHourSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default DurationHourElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/durationHourElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the duration minutes elements.\n *\n * @module visual/time/DurationMinuteElements.\n */\nlet DurationMinuteElements = (function() {\n  /**\n   * Sync the duration minutes elements.\n   *\n   * @param {Integer} minutes - The duration minutes for the audio.\n   */\n  function sync(minutes) {\n    syncGlobal(minutes);\n    syncPlaylist(minutes);\n    syncSong(minutes);\n    syncSongInPlaylist(minutes);\n  }\n\n  /**\n   * Syncs the global duration minutes elements.\n   *\n   * @param {Integer} minutes - the duration minutes for the audio.\n   */\n  function syncGlobal(minutes) {\n    let durationMinuteSelectors = document.querySelectorAll(\n      \".amplitude-duration-minutes\"\n    );\n\n    for (let i = 0; i < durationMinuteSelectors.length; i++) {\n      let playlist = durationMinuteSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = durationMinuteSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && songIndex == null) {\n        durationMinuteSelectors[i].innerHTML = minutes;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist duration minutes for the audio.\n   *\n   * @param {Integer} minutes - The duration minutes for the audio.\n   */\n  function syncPlaylist(minutes) {\n    let durationMinuteSelectors = document.querySelectorAll(\n      '.amplitude-duration-minutes[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationMinuteSelectors.length; i++) {\n      let songIndex = durationMinuteSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (songIndex == null) {\n        durationMinuteSelectors[i].innerHTML = minutes;\n      }\n    }\n  }\n\n  /**\n   * Syncs the song duration minutes.\n   *\n   * @param {Integer} minutes - The duration minutes for the audio.\n   */\n  function syncSong(minutes) {\n    if (config.active_playlist == null) {\n      let durationMinuteSelectors = document.querySelectorAll(\n        '.amplitude-duration-minutes[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      for (let i = 0; i < durationMinuteSelectors.length; i++) {\n        let playlist = durationMinuteSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        if (playlist == null) {\n          durationMinuteSelectors[i].innerHTML = minutes;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song in playlist duration minutes.\n   *\n   * @param {Integer} minutes - The duration minutes of the audio.\n   */\n  function syncSongInPlaylist(minutes) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    let durationMinuteSelectors = document.querySelectorAll(\n      '.amplitude-duration-minutes[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationMinuteSelectors.length; i++) {\n      durationMinuteSelectors[i].innerHTML = minutes;\n    }\n  }\n\n  /**\n   * Resets the duration minutes elements to '00'\n   */\n  function resetTimes() {\n    let durationMinuteSelectors = document.querySelectorAll(\n      \".amplitude-duration-minutes\"\n    );\n\n    for (let i = 0; i < durationMinuteSelectors.length; i++) {\n      durationMinuteSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default DurationMinuteElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/durationMinuteElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the duration seconds elements.\n *\n * @module visual/time/DurationSecondElements.\n */\nlet DurationSecondElements = (function() {\n  /**\n   * Sync the duration seconds elements.\n   *\n   * @param {Integer} seconds - The duration seconds for the audio.\n   */\n  function sync(seconds) {\n    syncGlobal(seconds);\n    syncPlaylist(seconds);\n    syncSong(seconds);\n    syncSongInPlaylist(seconds);\n  }\n\n  /**\n   * Syncs the global duration seconds elements.\n   *\n   * @param {Integer} seconds - the duration seconds for the audio.\n   */\n  function syncGlobal(seconds) {\n    let durationSecondSelectors = document.querySelectorAll(\n      \".amplitude-duration-seconds\"\n    );\n\n    for (let i = 0; i < durationSecondSelectors.length; i++) {\n      let playlist = durationSecondSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = durationSecondSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && songIndex == null) {\n        durationSecondSelectors[i].innerHTML = seconds;\n      }\n    }\n  }\n\n  /**\n   * Syncs the playlist duration seconds for the audio.\n   *\n   * @param {Integer} seconds - The duration seconds for the audio.\n   */\n  function syncPlaylist(seconds) {\n    let durationSecondSelectors = document.querySelectorAll(\n      '.amplitude-duration-seconds[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationSecondSelectors.length; i++) {\n      let songIndex = durationSecondSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (songIndex == null) {\n        durationSecondSelectors[i].innerHTML = seconds;\n      }\n    }\n  }\n\n  /**\n   * Syncs the song duration seconds.\n   *\n   * @param {Integer} seconds - The duration seconds for the audio.\n   */\n  function syncSong(seconds) {\n    if (config.active_playlist == null) {\n      let durationSecondSelectors = document.querySelectorAll(\n        '.amplitude-duration-seconds[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      for (let i = 0; i < durationSecondSelectors.length; i++) {\n        let playlist = durationSecondSelectors[i].getAttribute(\n          \"data--amplitude-playlist\"\n        );\n\n        if (playlist == null) {\n          durationSecondSelectors[i].innerHTML = seconds;\n        }\n      }\n    }\n  }\n\n  /**\n   * Syncs the song in playlist duration seconds.\n   *\n   * @param {Integer} seconds - The duration seconds of the audio.\n   */\n  function syncSongInPlaylist(seconds) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    let durationSecondSelectors = document.querySelectorAll(\n      '.amplitude-duration-seconds[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationSecondSelectors.length; i++) {\n      durationSecondSelectors[i].innerHTML = seconds;\n    }\n  }\n\n  /**\n   * Resets the duration seconds elements to '00'\n   */\n  function resetTimes() {\n    let durationSecondSelectors = document.querySelectorAll(\n      \".amplitude-duration-seconds\"\n    );\n\n    for (let i = 0; i < durationSecondSelectors.length; i++) {\n      durationSecondSelectors[i].innerHTML = \"00\";\n    }\n  }\n\n  /**\n   * Returns the publically facing methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default DurationSecondElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/durationSecondElements.js","/**\n * Imports the config module\n * @module config\n */\nimport config from \"../../config.js\";\n\n/**\n * Handles all of the duration time elements.\n *\n * @module visual/time/DurationTimeElements.\n */\nlet DurationTimeElements = (function() {\n  /**\n   * Syncs the duration time for all elements.\n   *\n   * @param {Object} durationTime - The object containing all of the song duration times.\n   */\n  function sync(durationTime) {\n    let durationText = computeDurationText(durationTime);\n\n    syncGlobal(durationText);\n    syncPlaylist(durationText);\n    syncSong(durationText);\n    syncSongInPlaylist(durationText);\n  }\n\n  /**\n   * Sync the global song duration elements.\n   *\n   * @param {Object} durationText - The text for the song duration.\n   */\n  function syncGlobal(durationText) {\n    let durationTimeSelectors = document.querySelectorAll(\n      \".amplitude-duration-time\"\n    );\n\n    for (let i = 0; i < durationTimeSelectors.length; i++) {\n      let playlist = durationTimeSelectors[i].getAttribute(\n        \"data-amplitude-playlist\"\n      );\n      let songIndex = durationTimeSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (playlist == null && songIndex == null) {\n        durationTimeSelectors[i].innerHTML = durationText;\n      }\n    }\n  }\n\n  /**\n   * Sync the playlist duration times.\n   *\n   * @param {Object} durationText - The text for the song duration.\n   */\n  function syncPlaylist(durationText) {\n    let durationTimeSelectors = document.querySelectorAll(\n      '.amplitude-duration-time[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationTimeSelectors.length; i++) {\n      let songIndex = durationTimeSelectors[i].getAttribute(\n        \"data-amplitude-song-index\"\n      );\n\n      if (songIndex == null) {\n        durationTimeSelectors[i].innerHTML = durationText;\n      }\n    }\n  }\n\n  /**\n   * Sync the song duration times.\n   *\n   * @param {Object} durationText - The text for the song duration.\n   */\n  function syncSong(durationText) {\n    if (config.active_playlist == null) {\n      let durationTimeSelectors = document.querySelectorAll(\n        '.amplitude-duration-time[data-amplitude-song-index=\"' +\n          config.active_index +\n          '\"]'\n      );\n\n      for (let i = 0; i < durationTimeSelectors.length; i++) {\n        let playlist = durationTimeSelectors[i].getAttribute(\n          \"data-amplitude-playlist\"\n        );\n\n        if (playlist == null) {\n          durationTimeSelectors[i].innerHTML = durationText;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sync the song in playlist duration times.\n   *\n   * @param {Object} durationText - An object containing the duration text.\n   */\n  function syncSongInPlaylist(durationText) {\n    let activePlaylistIndex =\n      config.active_playlist != \"\" && config.active_playlist != null\n        ? config.playlists[config.active_playlist].active_index\n        : null;\n\n    let durationTimeSelectors = document.querySelectorAll(\n      '.amplitude-duration-time[data-amplitude-playlist=\"' +\n        config.active_playlist +\n        '\"][data-amplitude-song-index=\"' +\n        activePlaylistIndex +\n        '\"]'\n    );\n\n    for (let i = 0; i < durationTimeSelectors.length; i++) {\n      durationTimeSelectors[i].innerHTML = durationText;\n    }\n  }\n\n  /**\n   * Resets all of the duration times to empty.\n   */\n  function resetTimes() {\n    let durationTimeSelectors = document.querySelectorAll(\n      \".amplitude-duration-time\"\n    );\n\n    for (let i = 0; i < durationTimeSelectors.length; i++) {\n      durationTimeSelectors[i].innerHTML = \"00:00\";\n    }\n  }\n\n  /**\n   * Computes the duration text\n   *\n   * @param {Object} durationTime - An object containint the duration times.\n   */\n  function computeDurationText(durationTime) {\n    var durationText = \"00:00\";\n\n    if (!isNaN(durationTime.minutes) && !isNaN(durationTime.seconds)) {\n      durationText = durationTime.minutes + \":\" + durationTime.seconds;\n      if (!isNaN(durationTime.hours) && durationTime.hours > 0) {\n        durationText = durationTime.hours + \":\" + durationText;\n      }\n    }\n\n    return durationText;\n  }\n\n  /**\n   * Return publically accessible methods.\n   */\n  return {\n    sync: sync,\n    resetTimes: resetTimes\n  };\n})();\n\nexport default DurationTimeElements;\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/time/durationTimeElements.js","module.exports = {\"name\":\"amplitudejs\",\"version\":\"5.0.3\",\"description\":\"A JavaScript library that allows you to control the design of your media controls in your webpage -- not the browser. No dependencies (jQuery not required) https://521dimensions.com/open-source/amplitudejs\",\"main\":\"dist/amplitude.js\",\"devDependencies\":{\"babel-core\":\"^6.26.3\",\"babel-loader\":\"^7.1.5\",\"babel-plugin-add-module-exports\":\"0.2.1\",\"babel-polyfill\":\"^6.26.0\",\"babel-preset-es2015\":\"^6.18.0\",\"husky\":\"^1.3.1\",\"jest\":\"^23.6.0\",\"prettier\":\"1.15.1\",\"pretty-quick\":\"^1.11.1\",\"watch\":\"^1.0.2\",\"webpack\":\"^2.7.0\"},\"directories\":{\"doc\":\"docs\"},\"files\":[\"dist\"],\"funding\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/amplitudejs\"},\"scripts\":{\"build\":\"node_modules/.bin/webpack\",\"watch\":\"watch 'node_modules/.bin/webpack' dist\",\"prettier\":\"npx pretty-quick\",\"test\":\"jest\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/521dimensions/amplitudejs.git\"},\"keywords\":[\"webaudio\",\"html5\",\"javascript\",\"audio-player\"],\"author\":\"521 Dimensions (https://521dimensions.com)\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/521dimensions/amplitudejs/issues\"},\"homepage\":\"https://github.com/521dimensions/amplitudejs#readme\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 59\n// module chunks = 0 1","if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","import raf from 'raf';\nimport _lerp from 'lerp';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar Curve =\n/*#__PURE__*/\nfunction () {\n  function Curve(opt) {\n    _classCallCheck(this, Curve);\n\n    this.ctrl = opt.ctrl;\n    this.definition = opt.definition;\n    this.ATT_FACTOR = 4;\n    this.GRAPH_X = 2;\n    this.AMPLITUDE_FACTOR = 0.6;\n  }\n\n  _createClass(Curve, [{\n    key: \"globalAttFn\",\n    value: function globalAttFn(x) {\n      return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, this.ATT_FACTOR)), this.ATT_FACTOR);\n    }\n  }, {\n    key: \"_xpos\",\n    value: function _xpos(i) {\n      return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n    }\n  }, {\n    key: \"_ypos\",\n    value: function _ypos(i) {\n      return this.AMPLITUDE_FACTOR * (this.globalAttFn(i) * (this.ctrl.heightMax * this.ctrl.amplitude) * (1 / this.definition.attenuation) * Math.sin(this.ctrl.opt.frequency * i - this.ctrl.phase));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctrl.ctx;\n      ctx.moveTo(0, 0);\n      ctx.beginPath();\n      var color = this.ctrl.color.replace(/rgb\\(/g, '').replace(/\\)/g, '');\n      ctx.strokeStyle = \"rgba(\".concat(color, \",\").concat(this.definition.opacity, \")\");\n      ctx.lineWidth = this.definition.lineWidth; // Cycle the graph from -X to +X every PX_DEPTH and draw the line\n\n      for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n        ctx.lineTo(this._xpos(i), this.ctrl.heightMax + this._ypos(i));\n      }\n\n      ctx.stroke();\n    }\n  }], [{\n    key: \"getDefinition\",\n    value: function getDefinition() {\n      return [{\n        attenuation: -2,\n        lineWidth: 1,\n        opacity: 0.1\n      }, {\n        attenuation: -6,\n        lineWidth: 1,\n        opacity: 0.2\n      }, {\n        attenuation: 4,\n        lineWidth: 1,\n        opacity: 0.4\n      }, {\n        attenuation: 2,\n        lineWidth: 1,\n        opacity: 0.6\n      }, {\n        attenuation: 1,\n        lineWidth: 1.5,\n        opacity: 1\n      }];\n    }\n  }]);\n\n  return Curve;\n}();\n\nvar iOS9Curve =\n/*#__PURE__*/\nfunction () {\n  function iOS9Curve() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, iOS9Curve);\n\n    this.ctrl = opt.ctrl;\n    this.definition = opt.definition;\n    this.GRAPH_X = 25;\n    this.AMPLITUDE_FACTOR = 0.8;\n    this.SPEED_FACTOR = 1;\n    this.DEAD_PX = 2;\n    this.ATT_FACTOR = 4;\n    this.DESPAWN_FACTOR = 0.02;\n    this.NOOFCURVES_RANGES = [2, 5];\n    this.AMPLITUDE_RANGES = [0.3, 1];\n    this.OFFSET_RANGES = [-3, 3];\n    this.WIDTH_RANGES = [1, 3];\n    this.SPEED_RANGES = [0.5, 1];\n    this.DESPAWN_TIMEOUT_RANGES = [500, 2000];\n    this.respawn();\n  }\n\n  _createClass(iOS9Curve, [{\n    key: \"getRandomRange\",\n    value: function getRandomRange(e) {\n      return e[0] + Math.random() * (e[1] - e[0]);\n    }\n  }, {\n    key: \"respawnSingle\",\n    value: function respawnSingle(ci) {\n      this.phases[ci] = 0;\n      this.amplitudes[ci] = 0;\n      this.despawnTimeouts[ci] = this.getRandomRange(this.DESPAWN_TIMEOUT_RANGES);\n      this.offsets[ci] = this.getRandomRange(this.OFFSET_RANGES);\n      this.speeds[ci] = this.getRandomRange(this.SPEED_RANGES);\n      this.finalAmplitudes[ci] = this.getRandomRange(this.AMPLITUDE_RANGES);\n      this.widths[ci] = this.getRandomRange(this.WIDTH_RANGES);\n      this.verses[ci] = this.getRandomRange([-1, 1]);\n    }\n  }, {\n    key: \"respawn\",\n    value: function respawn() {\n      this.spawnAt = Date.now();\n      this.noOfCurves = Math.floor(this.getRandomRange(this.NOOFCURVES_RANGES));\n      this.phases = new Array(this.noOfCurves);\n      this.offsets = new Array(this.noOfCurves);\n      this.speeds = new Array(this.noOfCurves);\n      this.finalAmplitudes = new Array(this.noOfCurves);\n      this.widths = new Array(this.noOfCurves);\n      this.amplitudes = new Array(this.noOfCurves);\n      this.despawnTimeouts = new Array(this.noOfCurves);\n      this.verses = new Array(this.noOfCurves);\n\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        this.respawnSingle(ci);\n      }\n    }\n  }, {\n    key: \"globalAttFn\",\n    value: function globalAttFn(x) {\n      return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, 2)), this.ATT_FACTOR);\n    }\n  }, {\n    key: \"sin\",\n    value: function sin(x, phase) {\n      return Math.sin(x - phase);\n    }\n  }, {\n    key: \"_grad\",\n    value: function _grad(x, a, b) {\n      if (x > a && x < b) return 1;\n      return 1;\n    }\n  }, {\n    key: \"yRelativePos\",\n    value: function yRelativePos(i) {\n      var y = 0;\n\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        // Generate a static T so that each curve is distant from each oterh\n        var t = 4 * (-1 + ci / (this.noOfCurves - 1) * 2); // but add a dynamic offset\n\n        t += this.offsets[ci];\n        var k = 1 / this.widths[ci];\n        var x = i * k - t;\n        y += Math.abs(this.amplitudes[ci] * this.sin(this.verses[ci] * x, this.phases[ci]) * this.globalAttFn(x));\n      } // Divide for NoOfCurves so that y <= 1\n\n\n      return y / this.noOfCurves;\n    }\n  }, {\n    key: \"_ypos\",\n    value: function _ypos(i) {\n      return this.AMPLITUDE_FACTOR * this.ctrl.heightMax * this.ctrl.amplitude * this.yRelativePos(i) * this.globalAttFn(i / this.GRAPH_X * 2);\n    }\n  }, {\n    key: \"_xpos\",\n    value: function _xpos(i) {\n      return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n    }\n  }, {\n    key: \"drawSupportLine\",\n    value: function drawSupportLine(ctx) {\n      var coo = [0, this.ctrl.heightMax, this.ctrl.width, 1];\n      var gradient = ctx.createLinearGradient.apply(ctx, coo);\n      gradient.addColorStop(0, 'transparent');\n      gradient.addColorStop(0.1, 'rgba(255,255,255,.5)');\n      gradient.addColorStop(1 - 0.1 - 0.1, 'rgba(255,255,255,.5)');\n      gradient.addColorStop(1, 'transparent');\n      ctx.fillStyle = gradient;\n      ctx.fillRect.apply(ctx, coo);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctrl.ctx;\n      ctx.globalAlpha = 0.7;\n      ctx.globalCompositeOperation = 'lighter';\n\n      if (this.definition.supportLine) {\n        // Draw the support line\n        return this.drawSupportLine(ctx);\n      }\n\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        if (this.spawnAt + this.despawnTimeouts[ci] <= Date.now()) {\n          this.amplitudes[ci] -= this.DESPAWN_FACTOR;\n        } else {\n          this.amplitudes[ci] += this.DESPAWN_FACTOR;\n        }\n\n        this.amplitudes[ci] = Math.min(Math.max(this.amplitudes[ci], 0), this.finalAmplitudes[ci]);\n        this.phases[ci] = (this.phases[ci] + this.ctrl.speed * this.speeds[ci] * this.SPEED_FACTOR) % (2 * Math.PI);\n      }\n\n      var maxY = -Infinity;\n\n      var _arr = [1, -1];\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var sign = _arr[_i];\n        ctx.beginPath();\n\n        for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n          var x = this._xpos(i);\n\n          var y = this._ypos(i);\n\n          ctx.lineTo(x, this.ctrl.heightMax - sign * y);\n          maxY = Math.max(maxY, y);\n        }\n\n        ctx.closePath();\n        ctx.fillStyle = \"rgba(\".concat(this.definition.color, \", 1)\");\n        ctx.strokeStyle = \"rgba(\".concat(this.definition.color, \", 1)\");\n        ctx.fill();\n      }\n\n      if (maxY < this.DEAD_PX && this.prevMaxY > maxY) {\n        this.respawn();\n      }\n\n      this.prevMaxY = maxY;\n      return null;\n    }\n  }], [{\n    key: \"getDefinition\",\n    value: function getDefinition(waveColors) {\n      return Object.assign([{\n        color: '255,255,255',\n        supportLine: true\n      }, {\n        // blue\n        color: '15, 82, 169'\n      }, {\n        // red\n        color: '173, 57, 76'\n      }, {\n        // green\n        color: '48, 220, 155'\n      }], waveColors);\n    }\n  }]);\n\n  return iOS9Curve;\n}();\n\nvar SiriWave =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Build the SiriWave\n   * @param {Object} opt\n   * @param {DOMElement} [opt.container=document.body] The DOM container where the DOM canvas element will be added\n   * @param {String} [opt.style='ios'] The style of the wave: `ios` or `ios9`\n   * @param {Number} [opt.ratio=null] Ratio of the display to use. Calculated by default.\n   * @param {Number} [opt.speed=0.2] The speed of the animation.\n   * @param {Number} [opt.amplitude=1] The amplitude of the complete wave.\n   * @param {Number} [opt.frequency=6] The frequency for the complete wave (how many waves). - Not available in iOS9 Style\n   * @param {String} [opt.color='#fff'] The color of the wave, in hexadecimal form (`#336699`, `#FF0`). - Not available in iOS9 Style\n   * @param {Boolean} [opt.cover=false] The `canvas` covers the entire width or height of the container.\n   * @param {Number} [opt.width=null] Width of the canvas. Calculated by default.\n   * @param {Number} [opt.height=null] Height of the canvas. Calculated by default.\n   * @param {Boolean} [opt.autostart=false] Decide wether start the animation on boot.\n   * @param {Number} [opt.pixelDepth=0.02] Number of step (in pixels) used when drawed on canvas.\n   * @param {Number} [opt.lerpSpeed=0.1] Lerp speed to interpolate properties.\n   */\n  function SiriWave() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SiriWave);\n\n    this.container = opt.container || document.body; // In this.opt you could find definitive opt with defaults values\n\n    this.opt = Object.assign({\n      style: 'ios',\n      ratio: window.devicePixelRatio || 1,\n      speed: 0.2,\n      amplitude: 1,\n      frequency: 6,\n      color: '#fff',\n      cover: false,\n      width: window.getComputedStyle(this.container).width.replace('px', ''),\n      height: window.getComputedStyle(this.container).height.replace('px', ''),\n      autostart: false,\n      pixelDepth: 0.02,\n      lerpSpeed: 0.1\n    }, opt);\n    /**\n     * Phase of the wave (passed to Math.sin function)\n     */\n\n    this.phase = 0;\n    /**\n     * Boolean value indicating the the animation is running\n     */\n\n    this.run = false;\n    /**\n     * Actual speed of the animation. Is not safe to change this value directly, use `setSpeed` instead.\n     */\n\n    this.speed = Number(this.opt.speed);\n    /**\n     * Actual amplitude of the animation. Is not safe to change this value directly, use `setAmplitude` instead.\n     */\n\n    this.amplitude = Number(this.opt.amplitude);\n    /**\n     * Width of the canvas multiplied by pixel ratio\n     */\n\n    this.width = Number(this.opt.ratio * this.opt.width);\n    /**\n     * Height of the canvas multiplied by pixel ratio\n     */\n\n    this.height = Number(this.opt.ratio * this.opt.height);\n    /**\n     * Maximum height for a single wave\n     */\n\n    this.heightMax = Number(this.height / 2) - 6;\n    /**\n     * Color of the wave (used in Classic iOS)\n     */\n\n    this.color = \"rgb(\".concat(this.hex2rgb(this.opt.color), \")\");\n    /**\n     * An object containing controller variables that need to be interpolated\n     * to an another value before to be actually changed\n     */\n\n    this.interpolation = {\n      speed: this.speed,\n      amplitude: this.amplitude\n    };\n    /**\n     * Canvas DOM Element where curves will be drawn\n     */\n\n    this.canvas = document.createElement('canvas');\n    /**\n     * 2D Context from Canvas\n     */\n\n    this.ctx = this.canvas.getContext('2d'); // Set dimensions\n\n    this.canvas.width = this.width;\n    this.canvas.height = this.height; // By covering, we ensure the canvas is in the same size of the parent\n\n    if (this.opt.cover === true) {\n      this.canvas.style.width = this.canvas.style.height = '100%';\n    } else {\n      this.canvas.style.width = \"\".concat(this.width / this.opt.ratio, \"px\");\n      this.canvas.style.height = \"\".concat(this.height / this.opt.ratio, \"px\");\n    }\n    /**\n     * Curves objects to animate\n     */\n\n\n    this.curves = []; // Instantiate all curves based on the style\n\n    if (this.opt.style === 'ios9') {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = iOS9Curve.getDefinition(this.opt.waveColors || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var def = _step.value;\n          this.curves.push(new iOS9Curve({\n            ctrl: this,\n            definition: def\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Curve.getDefinition()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _def = _step2.value;\n          this.curves.push(new Curve({\n            ctrl: this,\n            definition: _def\n          }));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    } // Attach to the container\n\n\n    this.container.appendChild(this.canvas); // Start the animation\n\n    if (opt.autostart) {\n      this.start();\n    }\n  }\n  /**\n   * Convert an HEX color to RGB\n   * @param {String} hex\n   * @returns RGB value that could be used\n   * @memberof SiriWave\n   */\n\n\n  _createClass(SiriWave, [{\n    key: \"hex2rgb\",\n    value: function hex2rgb(hex) {\n      var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n      hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n        return r + r + g + g + b + b;\n      });\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \"\".concat(parseInt(result[1], 16).toString(), \",\").concat(parseInt(result[2], 16).toString(), \",\").concat(parseInt(result[3], 16).toString()) : null;\n    }\n    /**\n     * Interpolate a property to the value found in $.interpolation\n     * @param {String} propertyStr\n     * @returns\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"lerp\",\n    value: function lerp(propertyStr) {\n      this[propertyStr] = _lerp(this[propertyStr], this.interpolation[propertyStr], this.opt.lerpSpeed);\n\n      if (this[propertyStr] - this.interpolation[propertyStr] === 0) {\n        this.interpolation[propertyStr] = null;\n      }\n\n      return this[propertyStr];\n    }\n    /**\n     * Clear the canvas\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      this.ctx.globalCompositeOperation = 'destination-out';\n      this.ctx.fillRect(0, 0, this.width, this.height);\n      this.ctx.globalCompositeOperation = 'source-over';\n    }\n    /**\n     * Draw all curves\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.curves[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var curve = _step3.value;\n          curve.draw();\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Clear the space, interpolate values, calculate new steps and draws\n     * @returns\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"startDrawCycle\",\n    value: function startDrawCycle() {\n      if (this.run === false) return;\n\n      this._clear(); // Interpolate values\n\n\n      if (this.interpolation.amplitude !== null) this.lerp('amplitude');\n      if (this.interpolation.speed !== null) this.lerp('speed');\n\n      this._draw();\n\n      this.phase = (this.phase + Math.PI / 2 * this.speed) % (2 * Math.PI);\n      raf(this.startDrawCycle.bind(this), 20);\n    }\n    /* API */\n\n    /**\n     * Start the animation\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.phase = 0;\n      this.run = true;\n      this.startDrawCycle();\n    }\n    /**\n     * Stop the animation\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.phase = 0;\n      this.run = false;\n    }\n    /**\n     * Set a new value for a property (interpolated)\n     * @param {String} propertyStr\n     * @param {Number} v\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(propertyStr, v) {\n      this.interpolation[propertyStr] = Number(v);\n    }\n    /**\n     * Set a new value for the speed property (interpolated)\n     * @param {Number} v\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"setSpeed\",\n    value: function setSpeed(v) {\n      this.set('speed', v);\n    }\n    /**\n     * Set a new value for the amplitude property (interpolated)\n     * @param {Number} v\n     * @memberof SiriWave\n     */\n\n  }, {\n    key: \"setAmplitude\",\n    value: function setAmplitude(v) {\n      this.set('amplitude', v);\n    }\n  }]);\n\n  return SiriWave;\n}();\n\nexport default SiriWave;\n","// Imports\nimport axios from \"../node_modules/axios\"\nimport Amplitude from \"../node_modules/amplitudejs\"\nimport SiriWave from \"../node_modules/siriwave\"\n\n// Variables\nconst URL_API: string = 'http://republicaweb.es/wp-json/ssp/v1/episodes/'\nconst COVER = 'img/logo-republica-web-v2.png'\nlet lastEpisode: object = undefined\nlet mySiriWare = undefined\nlet mySongPlayerdProgress = document.getElementById('song-played-progress')\n\n// Funcions\n\nfunction start(): void {\n    axios.get(URL_API)\n        .then(function (response) {\n            // handle success\n            lastEpisode = response.data[0]\n            document.querySelector('#player').setAttribute('src', lastEpisode.meta.audio_file)\n            startPlayer(\n                lastEpisode[\"title\"].rendered,\n                \"test\",\n                lastEpisode[\"meta\"].audio_file,\n                COVER\n                )\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        });\n}\n\nfunction startPlayer(name: string, episode: string, url: string, cover: string): void {\n    // Init Amplitude (custom audio player)\n    Amplitude.init({\n        \"bindings\": {\n            37: 'prev',\n            39: 'next',\n            32: 'play_pause'\n        },\n\t\t\"songs\": [\n\t\t\t{\n\t\t\t\t\"name\": name,\n\t\t\t\t\"artist\": \"República Web\",\n\t\t\t\t\"album\": episode,\n\t\t\t\t\"url\": url,\n\t\t\t\t\"cover_art_url\": cover\n\t\t\t}\n        ],\n        \"callbacks\": {\n            'pause': function() {\n                mySiriWare.setAmplitude(0)\n            },\n            'playing': function() {\n                mySiriWare.setAmplitude(3)\n            },\n            'ended': function() {\n                mySiriWare.setAmplitude(0)\n            }\n        }\n    });\n    // Init progressbar\n    handlesProgressbar()\n    // Init Way\n    mySiriWare = new SiriWave({\n\t    container: document.getElementById('siri-container'),\n        height: 130,\n        autostart: true,\n        style: 'ios9',\n        amplitude: 0\n    })\n}\n\nfunction handlesProgressbar(): void {\n    window.onkeydown = function(e) {\n      return !(e.keyCode == 32);\n    };\n    mySongPlayerdProgress.addEventListener('click', function( e ) {\n        let offset = this.getBoundingClientRect()\n        let x: string = (e.pageX - offset.left).toString()\n\n        Amplitude.setSongPlayedPercentage( ( parseFloat( x ) / parseFloat( mySongPlayerdProgress.offsetWidth.toString()) ) * 100 )\n    })\n}\n\n// Init\nstart()","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}